{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u7b80\u4ecb","text":"<p>\u7406\u8bba\u3001\u6982\u5ff5\u548c\u5de5\u7a0b\u5b9e\u8df5\u3002</p> <ol> <li>\u7b97\u6cd5 Algorithms</li> <li>\u8ba1\u7b97\u673a\u7f51\u7edc Computer Networks</li> <li>\u6570\u636e\u5e93\u7cfb\u7edf Database Systems</li> <li>\u6570\u5b66 Mathematics</li> <li>\u5206\u5e03\u5f0f\u7cfb\u7edf Distributed Systems</li> <li>\u8ba1\u7b97\u673a\u8bed\u8a00 Computer Languages</li> <li>\u9762\u5bf9\u5bf9\u8c61\u7f16\u7a0b Object-Oriented Programming</li> <li>\u5bc6\u7801\u5b66 Cryptography</li> <li>\u6d41\u8ba1\u7b97 Stream</li> <li>\u7edf\u8ba1 Statistics</li> <li>\u673a\u5668\u5b66\u4e60 Machine Learning</li> <li>\u4eba\u5de5\u667a\u80fd Artificial Intelligence</li> <li>\u81ea\u7136\u8bed\u8a00\u5904\u7406 Natural Language Processing</li> <li>\u67b6\u6784 Architecture</li> <li>\u9879\u76ee\u7ba1\u7406 Project Management</li> </ol> <p></p>"},{"location":"%E5%AF%86%E7%A0%81%E5%AD%A6/","title":"\u5bc6\u7801\u5b66","text":""},{"location":"%E5%AF%86%E7%A0%81%E5%AD%A6/#hmac","title":"HMAC","text":"<p>Hash-based message authentication code\uff0c\u6563\u5217\u6d88\u606f\u8ba4\u8bc1\u7801\u3002</p> <p>\u7ed9\u5b9a\u4efb\u4f55\u6563\u5217\u51fd\u6570\uff08\u52a0\u5bc6\u51fd\u6570\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 HMAC \u83b7\u5f97\u4e00\u4e2a\u53ef\u4ee5\u901a\u8fc7 key \u5b9a\u5236\u7684\u6d88\u606f\u8ba4\u8bc1\u7801\uff08MAC\uff09\u3002\u5373 <code>code = hmac(key, message, hash_algorithm)</code>\u3002</p>"},{"location":"NLP/NLP/","title":"NLP","text":"<p>https://nlp.stanford.edu/IR-book/html/htmledition/a-first-take-at-building-an-inverted-index-1.html</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E5%AE%89%E5%85%A8/JWT/","title":"JWT","text":"<p>JSON Web Token</p> <p>\u4e3b\u8981\u662f\u4ee3\u66ff session cookie\u3002Session cookie \u9700\u8981\u5728\u670d\u52a1\u5668\u7aef\u5b58\u50a8\u8be5 cookie\u3002\u800c JWT \u5c06\u7528\u6237\u6570\u636e\u52a0\u5bc6\u5b58\u50a8\u5728 cookie \u4e2d\uff0c\u53ea\u8981\u80fd\u591f\u6b63\u786e\u89e3\u5bc6\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u662f\u54ea\u4e2a\u7528\u6237\u4e86\u3002</p> <p>\u4e3b\u8981\u7684\u4f18\u52bf\u662f\u4e0d\u9700\u8981\u5728\u6570\u636e\u5e93\u6216\u8005\u670d\u52a1\u5668\u5185\u5b58\u4e2d\u5b58\u50a8 cookie \u4fe1\u606f\uff0c\u66f4\u9002\u7528\u4e8e\u5927\u89c4\u6a21\u5206\u5e03\u5f0f\u7cfb\u7edf\u548c\u548c\u5fae\u670d\u52a1\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E5%AE%89%E5%85%A8/JWT/#_1","title":"\u53c2\u8003","text":"<ul> <li>\u7ef4\u57fa\u767e\u79d1\uff1ahttps://en.wikipedia.org/wiki/JSON_Web_Token</li> <li>\u5b98\u65b9\u6807\u51c6\uff1ahttps://datatracker.ietf.org/doc/html/rfc7519</li> <li>\u5f88\u597d\u7684\u89e3\u91ca\u89c6\u9891\uff1ahttps://youtu.be/7Q17ubqLfaM</li> <li>Auth0 \u505a\u7684\u76f8\u5173\u7f51\u7ad9\uff1ahttps://jwt.io/</li> </ul>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%95%B0%E6%8D%AE%E5%BA%93/PostgreSQL/","title":"PostgreSQL","text":"<ol> <li>\u81ea\u589e\u5217\u6709\u54ea\u4e9b\u5b9e\u73b0\u529e\u6cd5\uff1f</li> </ol> <p>https://www.cnblogs.com/wy123/p/13367486.html</p> <ul> <li>sequence</li> <li>identity</li> <li>serial</li> </ul>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%95%B0%E6%8D%AE%E5%BA%93/PostgreSQL/#sequence","title":"\u5e8f\u5217 Sequence","text":"<p>\u6587\u6863\uff1ahttps://www.postgresql.org/docs/current/sql-createsequence.html</p> <p>\u81ea\u589e\u5e8f\u5217\uff0c\u9ed8\u8ba4\u4ece1\u5f00\u59cb\uff0c\u9012\u589e1\u3002\u57fa\u4e8ebigint\uff0c\u516b\u5b57\u8282\u6574\u6570\uff0c\u4ece9223372036854775808\u52309223372036854775807\u3002</p> <pre><code>create sequence id;\n-- \u8fd9\u4e2alast_value\u662f\u4e0a\u4e00\u4e2a\u88ab\u6307\u6d3e\u7684\u503c\n-- \u7279\u6b8a\u7684\u4e00\u70b9\u662f\u5e8f\u5217\u521a\u521b\u5efa\u8fd8\u6ca1\u6709nextval()\u8fc7\u7684\uff0clast_value\u662f1\nselect last_value from id;\n-- \u5e8f\u5217\u524d\u8fdb\u5230\u4e0b\u4e00\u4e2a\u503c\uff0c\u5e76\u8fd4\u56de\u8be5\u503c\n-- \u6ce8\u610f\u7528\u5355\u5f15\u53f7\u62ec\u8d77\u6765\u5e8f\u5217\u540d\u5b57\nselect nextval('id');\n-- \u5f53\u524dsession\u7684\u5f53\u524d\u503c\u548c\u4e0a\u4e00\u4e2a\u503c\nselect currval('id');\nselect lastval('id');\ninsert into book values (nextval('id'), '\u53f2\u8bb0');\n-- \u5e8f\u5217\u548c\u5b9e\u9645\u8868\u683c\u5185\u5bb9\u4e0d\u5339\u914d\u7684\u8bdd\uff0c\u624b\u52a8\u66f4\u65b0\u5e8f\u5217\nselect setval('id', max(id)) FROM book;\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/","title":"Redis","text":"<p>(From https://try.redis.io/)</p> <p>Redis is in the family of databases called key-value stores.</p> <p>The essence of a key-value store is the ability to store some data, called a value, inside a key. This data can later be retrieved only if we know the exact key used to store it.</p> <p>Often Redis it is called a data structure server because it has outer key-value shell, but each value can contain a complex data structure, such as a string, a list, a hashes, or ordered data structures called sorted sets as well as probabilistic data structures like hyperloglog.</p> <p>https://blog.csdn.net/sinat_34496643/article/details/80077319#:~:text=Redis%E6%98%AF%E4%B8%80%E7%A7%8D%E5%9F%BA%E4%BA%8E,%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95%E7%BB%84%E6%88%90%E3%80%82</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%9D%82%E9%A1%B9/DST/","title":"DST","text":"<p>~~Don't~~ Starve Together</p> <pre><code>-- \u73a9\u5bb6\u5217\u8868\nc_listallplayers()\n\n-- Host \u81ea\u5df1\u662f 1 \u53f7\uff0c\u7b2c\u4e8c\u4e2a\u73a9\u5bb6\u662f 2 \u53f7\nc_select(AllPlayers[2])  -- \u9009\u4e2d\u7b2c\u4e8c\u4e2a\u73a9\u5bb6\nc_supergodmode()  -- \u6b64\u65f6\u7b2c\u4e8c\u4e2a\u73a9\u5bb6\u4f1a\u53d8\u6210\u8d85\u7ea7\u65e0\u654c\u6a21\u5f0f\nc_maintainall()  -- \u4e0d\u662f\u8d85\u7ea7\u65e0\u654c\u6a21\u5f0f\uff0c\u5373\u4f1a\u53d7\u4f24\uff0c\u4f46\u662f\u4f1a\u6301\u7eed\u56de\u8840\n\n\n-- \u79fb\u9664\u9f20\u6807\u4e0b\u7684\u7269\u54c1\nConsoleWorldEntityUnderMouse():Remove()\n-- \u6216\u8005\nc_select():Remove()\n</code></pre> \u7269\u54c1 \u4ee3\u7801 \u6728\u5934 log \u6811\u679d \u8349 \u91d1\u5757"},{"location":"%E5%B7%A5%E5%85%B7/%E6%9D%82%E9%A1%B9/Git/","title":"Git \u548c\u9879\u76ee\u4ee3\u7801\u5206\u6790","text":"<p>Git \u662f\u4e00\u4e2a\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u5bf9\u7eaf\u6587\u672c\uff08\u4ee3\u7801\u7b49\uff09\u6709\u5f88\u597d\u7684\u652f\u6301\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%9D%82%E9%A1%B9/Git/#git_1","title":"Git \u662f\u4e00\u4e2a\u5185\u5bb9\u5bfb\u5740\u6587\u4ef6\u7cfb\u7edf","text":"<p>\u5728 Git \u91cc\uff08<code>.git</code> \u6587\u4ef6\u5939\uff0c\u5bf9\u8c61\uff08\u6587\u4ef6\u3001\u63d0\u4ea4\u7b49\uff09\u90fd\u662f hash \u5e76\u5b58\u50a8\u5728\u4ee5 hash \u7d22\u5f15\u7684\u6587\u4ef6\u5939\u7ed3\u6784\u91cc\uff0c\u4efb\u4f55\u76f8\u540c\u5185\u5bb9\u7684\u5bf9\u8c61\u90fd\u53ea\u5b58\u5728\u4e00\u4efd\u3002\u56e0\u6b64\u4f60\u53ef\u4ee5\u67e5\u8be2\u67d0\u6587\u4ef6\u662f\u4e0d\u662f\u5728 Git \u4e2d\uff0c\u5982\u679c\u5728\uff0c\u5728\u54ea\u91cc\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%9D%82%E9%A1%B9/Git/#windows-git","title":"\u66f4\u65b0 Windows \u4e0a \u7684 Git","text":"<p>2.16.1 \u4ee5\u540e\u7248\u672c\u7684 Git\uff0c\u76f4\u63a5 <code>git update-git-for-windows</code>\u3002</p> <p>\u53c2\u8003\uff1ahttps://stackoverflow.com/questions/13790592/how-to-upgrade-git-on-windows-to-the-latest-version</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%9D%82%E9%A1%B9/Git/#tag","title":"\u68c0\u51fa\u4e00\u4e2a\u6807\u7b7e\uff08tag\uff09","text":"<p><code>git checkout tags/&lt;tag_name&gt;</code> \u6216\u8005 <code>git checkout &lt;tag_name&gt;</code>\uff0c\u63a8\u8350\u7b2c\u4e00\u4e2a\u56e0\u4e3a\u53ef\u80fd\u6709\u540c\u540d\u6807\u7b7e\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%9D%82%E9%A1%B9/Git/#git-merge-base","title":"Git Merge Base","text":"<pre><code>git merge-base --all &lt;commit_1&gt; &lt;commit_2&gt;\ngit merge-base --all --octopus &lt;commit_1&gt; &lt;commit_2&gt; &lt;commit_3&gt; ...\n</code></pre> <p>Add <code>--all</code> to list all possible ancestors (equally good).</p> <p>If you have more than two commits, you can add <code>----octopus</code> otherwise it is the ancestor of the first commit, and a hypothetical commit which is a merge of all other commits.</p> <p>Examples:</p> <pre><code>         o---o---o---B\n        /\n---o---1---o---o---o---A\ngit merge-base A B = 1\n\n       o---o---o---o---C\n      /\n     /   o---o---o---B\n    /   /\n---2---1---o---o---o---A\ngit merge-base --octopus A B C = 2\n\n---1---o---A\n    \\ /\n     X\n    / \\\n---2---o---o---B\ngit merge-base --all A B = 1 2\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%9D%82%E9%A1%B9/Git/#git-rebase","title":"Git Rebase","text":"<p><code>git rebase</code> essentially replays the changes of commits.</p> <p><code>git rebase base change</code> will first switch to <code>change</code>, replay changes in <code>change</code> after the merge base of <code>change</code> and <code>base</code> onto <code>base</code> and commit these new derived commits (hashes are different because the contents are different) in <code>change</code>.</p> <p><code>git rebase --onto new_base base change</code> is similar, except that it replays the changes onto <code>new_base</code> instead of <code>base</code>.</p> <p>Examples:</p> <pre><code>      A---B---C topic\n     /\nD---E---F---G master\ngit rebase master topic =&gt;\n              A'--B'--C' topic\n             /\nD---E---F---G master\n\no---o---o---o---o  master\n     \\\n      o---o---o---o---o  next\n                       \\\n                        o---o---o  topic\ngit rebase --onto master next topic =&gt;\no---o---o---o---o  master\n    |            \\\n    |             o'--o'--o'  topic\n     \\\n      o---o---o---o---o  next\n</code></pre> <p>If there is any conflict, it will enter the interactive rebase mode. You can <code>git rebase --abort</code>. Or you can resolve conflicts, <code>git add</code> them and <code>git rebase --contibue</code>, it will finish the rebase or let you resolve remaining conflicts.</p> <p>It seems that the default interactive rebase resolves two commits each round but you can <code>git rebase --edit-todo</code> to adjust the range.</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%9D%82%E9%A1%B9/Git/#mail-map","title":"Mail map","text":"<p>In <code>.mailmap</code> you can specify canonical names and emails to be displayed in <code>git log</code> and other places. You can use this to handle wrong names or emails in commits.</p> <pre><code># Based on &lt;commit@email&gt;\nDisplay Name &lt;commit@email&gt;  # Replace name\n&lt;display@email&gt; &lt;commit@email&gt;  # Replace email\nDisplay Name &lt;display@email&gt; &lt;commit@email&gt;  # Replace both\n\n# Based on both &lt;Commit Name&gt; and &lt;commit@email&gt;\nDisplay Name &lt;Commit Name&gt; &lt;commit@email&gt;  # Replace name\n&lt;display@email&gt; Commit Name &lt;commit@email&gt;  # Replace email\nDisplay Name &lt;display@email&gt; Commit Name &lt;commit@email&gt;  # Replace both\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%9D%82%E9%A1%B9/Git/#_1","title":"\u5de5\u5177","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E6%9D%82%E9%A1%B9/Git/#git_2","title":"Git \u7edf\u8ba1","text":"<p>git-quick-stats</p> <pre><code># Install\napt install git-quick-stats\nbrew install git-quick-stats\n\n# Statistics\nexport _GIT_SINCE=\"2021-01-16\"\ngit quick-stats --detailed-git-stats\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%9D%82%E9%A1%B9/Git/#git-commit","title":"Git \u603b commit \u6570","text":"<pre><code>git rev-list --count HEAD\ngit rev-list --count main\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%9D%82%E9%A1%B9/Git/#_2","title":"\u4ee3\u7801\u884c\u6570\u5206\u6790","text":"<p>Cloc</p> <pre><code># \u5b89\u88c5\nsudo apt install cloc\nbrew install cloc\n\n# \u7edf\u8ba1\u884c\u6570\ncloc .\ncloc &lt;some_folder&gt;\ncloc &lt;some_file&gt;\ncloc --exclude-dir=&lt;dir1&gt;,&lt;dir2&gt; &lt;some_folder&gt;\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%9D%82%E9%A1%B9/Git/#_3","title":"\u641c\u7d22\u5386\u53f2\u6587\u4ef6\u6587\u672c","text":"<p>https://git-scm.com/book/en/v2/Git-Tools-Searching</p> <pre><code># \u53ea\u80fd\u641c\u7d22\u67d0\u4e2a revision\ngit grep [&lt;options&gt;] [-e] &lt;pattern&gt; [&lt;rev&gt;...] [[--] &lt;path&gt;...]\ngit grep \"Shao Wang\" master\n\n# \u53ef\u4ee5\u641c\u7d22\u6574\u4e2a\u5386\u53f2\ngit log [&lt;options&gt;] [&lt;revision-range&gt;] [[--] &lt;path&gt;...]\ngit log -S \"Shao Wang\"\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%9D%82%E9%A1%B9/IntelliJ/","title":"IntelliJ","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E6%9D%82%E9%A1%B9/Powershell/","title":"Powershell","text":"<p>\u8bbe\u7f6e\u4e2d\u6587\uff1ahttps://www.cnblogs.com/weihanli/p/fix-Chinese-characters-display-abnormal.html</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%9D%82%E9%A1%B9/UML/","title":"UML (Unified Modeling Language)","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E6%9D%82%E9%A1%B9/WSL/","title":"WSL","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E6%9D%82%E9%A1%B9/WSL/#ubuntu","title":"\u5347\u7ea7 Ubuntu","text":"<pre><code>sudo apt update\nsudo apt upgrade -y\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%9D%82%E9%A1%B9/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%AE%9A%E5%88%B6/","title":"\u547d\u4ee4\u884c\u5b9a\u5236","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E6%9D%82%E9%A1%B9/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%AE%9A%E5%88%B6/#zsh","title":"ZSH","text":"<pre><code># \u7eff\u8272\u7bad\u5934 (&gt;) propmt\uff0c\u53ea\u6709\u5f53\u524d\u6587\u4ef6\u5939\u540d\uff0c\u6ca1\u6709\u5b8c\u6574\u8def\u5f84\nexport PS1=\"%K{194}%F{28}%1~&gt;%k %f\"\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%B5%81/Flink/Flink/","title":"Apache Flink","text":"<p>Reference: https://flink.apache.org/</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%B5%81/Flink/Flink/#concepts","title":"Concepts","text":"<ol> <li>What is Apache Flink?</li> </ol> <p>Apache Flink is a stream processing framework that can be:</p> <ol> <li>distributed</li> <li> <p>stateful</p> </li> <li> <p>What are the use cases of Flink?</p> </li> <li> <p>What are the optimisations Flink has for bounded data streams?</p> </li> <li> <p>What layers of APIs does Flink have?</p> </li> </ol> <p>Reference: https://ci.apache.org/projects/flink/flink-docs-stable/concepts/index.html#flinks-apis</p> <p></p> <p>Flink has four layers of API (from low to high):</p> <ol> <li>Stateful Stream Processing. It is embedded into the <code>DataStream</code> API via <code>ProcessFunction</code>s. It offers stateful and timely stream processing.</li> <li><code>DataStream</code>/<code>DataSet</code> API. <code>DataStream</code> API works on both bounded and unbounded streams and <code>DataSet</code> API works on only bounded streams.</li> <li>Table API. A declarative DSL centered around tables. A table has a schema.</li> <li>SQL. Similar to the Table API but supports SQL syntax.</li> </ol> <p>Each layer of API works on top of and interacts with the lower level API.</p> <ol> <li> <p>What is exactly-once state consistency?</p> </li> <li> <p>What is an operator in Flink?</p> </li> </ol> <p>Reference: https://ci.apache.org/projects/flink/flink-docs-stable/dev/stream/operators/index.html</p> <p>Operators transform one or more DataStreams into a new DataStream. For example, <code>map</code>, <code>filter</code>, <code>keyBy</code>, <code>process</code> and <code>reduce</code>.</p> <p>Inside an operator, you need to give a user-defined function. For example:</p> <pre><code>data.map(new MapFunction&lt;String, Integer&gt; () {\n    public Integer map(String value) { return Integer.parseInt(value); }\n});\n</code></pre> <p>or with Java 8 Lambdas: <code>data.filter(s -&gt; s.startsWith(\"http://\"));</code>.</p> <ol> <li>What is a Flink logical graph/dataflow graph/job graph?</li> </ol> <p>The three names are referring to the same thing. It is a directed graph of operators. The edges indicate the data flow between nodes (operators).</p> <ol> <li>What is a physical graph/execution graph?</li> </ol> <p>A physical graph is derived from a logical graph for execution in a distributed runtime. Instead of operators, the nodes are Flink tasks. You can think of a logical graph as a conceptual definition, and the physical graph is a concrete execution plan with things like parallelism and resource allocation considered.</p> <ol> <li>What is a Flink job?</li> </ol> <p>A Flink job is a runtime representation of a logical graph.</p> <ol> <li>What is a Flink application?</li> </ol> <p>A Java application that submits jobs. Submitting jobs is usually done by calling <code>execute()</code> on an execution environment.</p> <ol> <li>How does Flink handle states?</li> </ol> <p>\"Flink's operations can be stateful\". State is always stored locally in an instance, rather than globally across the cluster. \"Each parallel instance is responsible for handling events for a specific group of keys, and the state for those keys is kept locally\".</p> <p>State is kept on the JVM heap or in on-disk data structures (this is not persistence) when it is too large.</p> <ol> <li> <p>What is stateful functions?</p> </li> <li> <p>How does Flink handle failures?</p> </li> </ol> <p>Flink captures asynchronous snapshots of the entire state of the distributed pipeline.</p> <ol> <li>What notions of time (e.g. event time and processing time) does Flink support?</li> </ol> <p>Flink supports three notions of time: event time, ingestion time and processing time.</p> <ol> <li>What is a watermark in Flink?</li> </ol> <p>If an event e arrives at time t and denote the watermark for time t as t<sub>w</sub> (t<sub>w</sub> \u2265 t). Any event with an event time (the actual the event happens) earlier than t but arrives later than t<sub>w</sub> is a late event. Flink waits until t<sub>w</sub> to ensure ordered processing.</p> <ol> <li>How does Flink handle late data?</li> </ol>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%B5%81/Flink/Flink/#architecture-and-deployment","title":"Architecture and deployment","text":"<pre><code>@startuml\ndigraph flink {\n    label = \"Apache Flink Architecture\"\n    compound = true\n    node [shape = box, style = rounded]\n\n    subgraph cluster {\n        label = \"Flink cluster, a runtime\"\n\n        subgraph cluster_job_manager {\n            label = \"JobManager+, an orchestrator\\nThere can be multiple \\\"standby\\\" JobManagers, with the main one the \\\"leader\\\".\"\n\n            job_master [label = \"JobMaster*\"]\n            resource_manager [label = \"ResourceManager\\nmanages task slots\"]\n            dispatcher [label = \"Dispatcher\\nexposes a REST API and runs Flink WebUI\"]\n\n            dispatcher -&gt; job_master [label = \"starts new\"]\n        }\n\n        subgraph cluster_task_manager {\n            label = \"TaskManager+, i.e. worker\"\n\n            task_slot [label = \"Task Slot+\\nseparates memory\"]\n        }\n\n        job [label = \"Job*\"]\n        task [label = \"Task*\"]\n\n        task_slot -&gt; resource_manager [label = \"registers to\", lhead = cluster_job_manager]\n\n        job_master -&gt; job [label = \"manages one\"]\n        job -&gt; task\n    }\n\n    app [label = \"Application (a Java app submits Jobs)\"]\n}\n@enduml\n</code></pre> <ol> <li>What is a standalone Flink cluster?</li> </ol> <p>A standalone Flink cluster without a resource provider (e.g. Kubernetes, YARN and Mesos). Flink manages the cluster itself directly in this mode.</p> <ol> <li>What is a resource provider?</li> </ol> <p>Flink can be deployed through different resource provider frameworks, such as Kubernetes, YARN or Mesos.</p> <ol> <li>What is a high availability service provider?</li> </ol> <p>With a high availability service provider (e.g. Zookeeper, Kubernetes HA), Flink can recover from JobManager faults. It can have multiple standby JobManagers to failover faster.</p> <ol> <li>What are deployment modes?</li> </ol> <p></p> <p>Depending on which component submits jobs, how many jobs a JobManager handles and how long a JobManager lives, there are three deployment modes.</p> <p>Note that the concept of these nodes are different from whether it is a standalone cluster or not although the per-job mode is not supported by a standalone cluster.</p> <ol> <li> <p>Application mode</p> <p>In this mode, there is no client, so the Flink Application (whichever component creates and submits jobs) is on the cluster itself. The whole cluster is created for this application and torn down when the application finishes.</p> </li> <li> <p>Per-job mode</p> <p>In this mode, there is a client Flink Application. A new cluster is created for each job and torn down when the job is finished.</p> </li> <li> <p>Session mode</p> <p>In this mode, the Flink cluster is not bound to an application or job. The cluster's resources are used by all Flink applications and jobs.</p> </li> </ol> <p>These modes have different implications of cluster lifecycle (thus affecting the cluster initialisation and termination time), resource isolation (thus affecting the performance and failover).</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%B5%81/Flink/Flink/#datastream-api","title":"DataStream API","text":"<ol> <li>What can be streamed?</li> </ol> <p>In <code>DataStream&lt;T&gt;</code>, <code>T</code> can be anything Java can serialise.</p> <p>Flink has its own serializer which is used for basic types (<code>String</code>, <code>Boolean</code>, <code>Integer</code>, <code>Long</code> and <code>Array</code>) and composite types (Flink's own <code>Tuple0</code> - <code>Tuple25</code> and POJOs).</p> <p>For other types, Flink falls back to use Kryo. You can use other serializers such as Avro.</p> <ol> <li>Why does it need to be serializable to be streamable?</li> </ol> <p>Because Flink needs to distribute the stream data and also snapshot the entire state of the distributed pipeline for failure recovery.</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%B5%81/Flink/Flink/#operations","title":"Operations","text":"<ol> <li>What Java versions does Flink requires?</li> </ol> <p>Java 8 or 11. If you like This and </p> <ol> <li>How to start a Flink cluster and run a Flink application (to create and submit jobs)?</li> </ol> Resource provider \u2193 Deployment mode \u2192 Application Per-job Session Standalone cluster Put Flink Application jar in classpath, one way: <code>cp ./examples/streaming/TopSpeedWindowing.jar lib/</code>; launch JobManager: <code>./bin/standalone-job.sh start --job-classname org.apache.flink.streaming.examples.windowing.TopSpeedWindowing</code>; start TaskManager: <code>./bin/taskmanager.sh start</code>; stop: <code>./bin/taskmanager.sh stop</code>, <code>./bin/standalone-job.sh stop</code>. Not supported Start cluster: <code>./bin/start-cluster.sh</code>; submit job: <code>./bin/flink run ./examples/streaming/TopSpeedWindowing.jar</code>, this starts a short-lived client Flink application. Standalone in Docker Standalone in Kubernetes Kubernetes YARN Mesos <ol> <li>Does Flink have a Web UI?</li> </ol> <p>Yes. By default, the WebUI of a Flink cluster is exposed at http://localhost:8081/.</p> <ol> <li>Does Flink have a REST API?</li> </ol> <p>Yes. By default, the API is exposed at http://localhost:8081/ as well. For example, http://localhost:8081/jobs list all the jobs.</p> <ol> <li>\u600e\u4e48\u5728Windows\u4e0a\u8fd0\u884cFlink\uff1f</li> </ol> <p>Flink\u57281.9\u8fd8\u662f1.10\u5de6\u53f3\u7684\u7248\u672c\u79fb\u9664\u4e86batch\u811a\u672c\uff0c\u63a8\u8350\u4f7f\u7528Cygwin\uff0c\u8bd5\u4e86\u4e0b\u6ca1\u6210\u529f\uff0c\u8fd8\u662f\u7528\u7684WSL\u3002WSL\u7684\u8bdd\u8981\u6ce8\u610fWSL2\u8bfb\u53d6\u6302\u8f7d\u7684Windows\u6587\u4ef6\u7cfb\u7edf\u7684IO\u6027\u80fd\u662f\u5f88\u5dee\u7684\uff0c\u6700\u597d\u662f\u6240\u6709\u6587\u4ef6\u90fd\u5728Linux\u5185\u3002\u6211\u8bd5\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u7a0b\u5e8f\uff0c\u6302\u8f7dWindows\u6587\u4ef6\u8dd1\u4e8626\u591a\u5206\u949f\uff0c\u76f4\u63a5\u5728Linux\u8dd1\u662f2\u5206\u949f\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%B5%81/Flink/Flink/#_1","title":"\u6027\u80fd\u6d4b\u8bd5","text":"<ul> <li>\u96c5\u864e\uff1ahttps://github.com/yahoo/streaming-benchmarks\uff0chttps://developer.yahoo.com/blogs/135370591481/\u3002\u5f88\u53ef\u60dc\uff0c\u76ee\u524d\uff082021\u5e742\u67085\u65e5\uff09\u9879\u76ee\u5b58\u5728\u4e0d\u5c11issue\u3002</li> <li>Flink\u539f\u5f00\u53d1\u8005\u516c\u53f8\u5bf9\u96c5\u864e\u8bc4\u6d4b\u7684\u540e\u7eed\u56de\u5e94\uff1ahttps://www.ververica.com/blog/extending-the-yahoo-streaming-benchmark\uff0chttps://www.ververica.com/blog/curious-case-broken-benchmark-revisiting-apache-flink-vs-databricks-runtime</li> <li>Apache\uff1ahttps://github.com/apache/flink-benchmarks</li> </ul>"},{"location":"%E5%B7%A5%E5%85%B7/%E6%B5%81/Flink/Flink/#_2","title":"\u6587\u7ae0\u3001\u6f14\u8bb2","text":"<ul> <li>Run Interactive Queries with Apache Flink - Jiangjie Qin\uff1ahttps://youtu.be/5Pgcw0orvLg</li> <li>\u6d41\u8ba1\u7b97\u6846\u67b6 Flink \u4e0e Storm \u7684\u6027\u80fd\u5bf9\u6bd4\uff1ahttps://tech.meituan.com/2017/11/17/flink-benchmark.html</li> <li>\u6570\u636e\u4e0d\u6492\u8c0e\uff0cFlink-Kafka\u6027\u80fd\u538b\u6d4b\u5168\u8bb0\u5f55\uff01\uff1ahttps://blog.csdn.net/u013411339/article/details/100029388</li> <li>\u5982\u4f55\u5206\u6790\u53ca\u5904\u7406 Flink \u53cd\u538b\uff1f\uff1ahttps://developer.aliyun.com/article/727389</li> </ul>"},{"location":"%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%AB%99%E3%80%81App/%E4%B8%AD%E8%8B%B1%E6%B7%B7%E6%8E%92/","title":"\u4e2d\u82f1\u6df7\u6392","text":"<ul> <li>\u4e2d\u82f1\u6587\u6392\u7248\u7a7a\u683c\u95ee\u9898\u89e3\u51b3\u65b9\u6848\uff1ahttps://cuiqingcai.com/6533.html\u3002\u8fd9\u4e2a\u65b9\u6848\u662f\u7528Python\u5904\u7406\u6587\u672c\uff0c\u6dfb\u52a0\u7a7a\u683c\u3002</li> <li>\u914d\u7f6e\u7f51\u9875\uff0c\u5168\u81ea\u52a8\u52a0\u5165\u4e2d\u82f1\u6587\u4e4b\u95f4\u7a7a\u683c\uff0c\u4f18\u5316\u9875\u9762\u6392\u7248\uff1ahttps://blog.sumblog.cn/archives/Chinese-English-Spacing.html\uff0cGitHub\u94fe\u63a5\uff1ahttps://github.com/mastermay/text-autospace.js\u3002\u8fd9\u4e2a\u65b9\u6848\u662f\u901a\u8fc7CSS\u81ea\u52a8\u6dfb\u52a0\u95f4\u9699\u3002</li> </ul>"},{"location":"%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%AB%99%E3%80%81App/%E7%BD%91%E7%AB%99%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/","title":"\u7f51\u7ad9\u5f00\u53d1\u6d41\u7a0b","text":"<p>\u6ca1\u6709\u5b9a\u8bba\uff0c\u4f46\u4e00\u4e2a\u65b0\u9879\u76ee\u521d\u671f\u5927\u81f4\u7b26\u5408\u4ee5\u4e0b\u6d41\u7a0b\u3002</p> <ol> <li>\u5206\u6790\u9700\u6c42</li> <li>\u4f30\u8ba1\u9879\u76ee\u65f6\u95f4</li> <li>\u8bbe\u8ba1<ol> <li>Wireframe\uff1a\u8349\u56fe</li> <li>Prototype\uff1a\u539f\u578b</li> </ol> </li> <li>\u6280\u672f\u9009\u578b</li> <li>\u5f00\u53d1\u4e0e\u6d4b\u8bd5</li> <li>\u4ea4\u4ed8</li> <li>\u8fd0\u884c\u7ef4\u62a4\u3001\u8fd0\u8425</li> </ol>"},{"location":"%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%AB%99%E3%80%81App/%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/Gatsby/","title":"Gatsby","text":"<p>Gatsby \u662f\u4e00\u4e2a\u57fa\u4e8e React \u7684\u9759\u6001\u9875\u9762\u751f\u6210\u5668\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%AB%99%E3%80%81App/%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/Gatsby/#_1","title":"\u9879\u76ee\u7ed3\u6784","text":"<pre><code>/\n|-- /.cache             \u81ea\u52a8\u751f\u6210\n|-- /plugins            \u672c\u5730\u63d2\u4ef6\n|-- /public             \u751f\u6210\u7684\u8f93\u51fa\n|-- /src\n    |-- /pages          \u9875\u9762\n    |-- /templates      \u6a21\u677f\n    |-- html.js\n|-- /static             \u8fd9\u91cc\u7684\u6587\u4ef6\u4e0d\u4f1a\u88abwebpack\u5904\u7406\uff0c\u800c\u662f\u76f4\u63a5\u590d\u5236\u5230public\u4e2d\n|-- gatsby-config.js    \u4e3b\u914d\u7f6e\u6587\u4ef6\n|-- gatsby-node.js\n|-- gatsby-ssr.js\n|-- gatsby-browser.js\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%AB%99%E3%80%81App/%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/Gatsby/#cli","title":"CLI","text":"<p><code>gatsby new</code>\uff1a\u521b\u5efa\u65b0\u9879\u76ee\u3002</p> <p><code>gatsby develop --host 0.0.0.0 --port 8000 --open</code>\uff1a\u5f00\u53d1\u670d\u52a1\u5668\uff0c<code>--open</code>\u81ea\u52a8\u6253\u5f00\u6d4f\u89c8\u5668\u3002</p> <p><code>gatsby build</code>\uff1a\u751f\u6210\u53ef\u7528\u4e8e\u751f\u4ea7\u73af\u5883\u7684\u6587\u4ef6\u5230 public\u3002</p> <p><code>gatsby repl</code>\uff1a\u4ea4\u4e92\u5f0f shell\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%AB%99%E3%80%81App/%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/Gatsby/#react","title":"\u5185\u7f6e React \u7ec4\u4ef6","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%AB%99%E3%80%81App/%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/Gatsby/#link","title":"&lt;Link&gt;","text":"<p>\u57fa\u4e8e @reach/router\uff0c\u975e\u5e38\u667a\u80fd\uff0c\u80fd\u81ea\u52a8\u57fa\u4e8e\u7528\u6237\u754c\u9762\u548c\u7528\u6237\u884c\u4e3a\u9884\u52a0\u8f7d\u3002</p> <p>\u53ea\u8981\u628a\u6240\u6709\u7684\u975e\u5916\u94fe\u7684<code>&lt;a&gt;</code>\u6362\u6210<code>&lt;Link&gt;</code>\u3002</p> <pre><code>-&lt;a href=\"/blog\"&gt;Blog&lt;/a&gt;\n+&lt;Link to=\"/blog\"&gt;Blog&lt;/Link&gt;\n</code></pre> <p>\u5177\u4f53\u89c1 Gatsby Link API\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%AB%99%E3%80%81App/%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/Gatsby/#routing","title":"\u8def\u7531 Routing","text":"<p>\u8fd9\u91cc\u6307\u7684\u662f URL \u8def\u5f84\u7684\u521b\u5efa\u3002\u4e09\u79cd\u65b9\u5f0f\u521b\u5efa\uff1a</p> <ol> <li><code>src/pages</code>\u4e2d\u7684 React \u7ec4\u4ef6</li> <li>\u7528 File System Route API</li> <li>\u5728<code>gatsby-node.js</code>\u4e2d\u7528<code>createPages</code></li> </ol>"},{"location":"%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%AB%99%E3%80%81App/%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/GitHub%20Pages/","title":"GitHub Pages","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%AB%99%E3%80%81App/%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/GitHub%20Pages/#_1","title":"\u914d\u7f6e\u81ea\u5b9a\u4e49\u57df\u540d","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%AB%99%E3%80%81App/%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/Jekyll/","title":"Jekyll","text":"<ol> <li>What is a page? Where do I put pages?</li> </ol> <p>Pages can be HTML or Markdown files. Some other files might work as well, e.g. plain text, JavaScript or even Python, but Jekyll has built-in Markdown support that converts it into HTML during the build.</p> <p>Place them in the root folder and organise them in sub-folders. Jekyll will reflect the structure.</p> <ol> <li>What is front matter?</li> </ol> <p>Metadata you accessible via <code>page</code>, place at the head of a file. The format is YAML between two lines of <code>---</code>. For example, <code>{{ page.my_number }}</code> is <code>5</code> given:</p> <pre><code>---\nmy_number: 5\n---\n</code></pre> <p>You must have at least a blank front matter with only two lines of <code>---</code> for the page to be processed (e.g. convert Markdown to HTML, fills Liquid, converts SASS to CSS). If you leave it, files will be copied to <code>_site</code> as it. You can use https://github.com/benbalter/jekyll-optional-front-matter (used by GitHub Pages as well) to avoid this.</p> <ol> <li>Can I avoid adding front matters?</li> </ol> <p>https://github.com/benbalter/jekyll-optional-front-matter.</p> <ol> <li>How to specify default front matters?</li> </ol> <p>Reference: https://jekyllrb.com/docs/configuration/front-matter-defaults/.</p> <p>In <code>_config.yml</code>, add <code>defaults</code>. It specifies the <code>scope</code> and <code>values</code>.</p> <ol> <li>How does layout work?</li> </ol> <p>Together with include, it is similar to Django template.</p> <p>Layouts are in <code>_layouts</code> folder. For example, <code>_layouts/default.html</code> is:</p> <pre><code>&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;title&gt;{{ page.title }}&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    {{ content }}\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p><code>content</code> is the rendered content of the page that uses this layout. To use it, write <code>layout: default</code> in the front matter:</p> <pre><code>---\nlayout: default\ntitle: Home\n---\n&lt;h1&gt;Hello World!&lt;/h1&gt;\n</code></pre> <p>You can use <code>layout: &lt;another_layout&gt;</code> to base a layout on another one.</p> <ol> <li>How does include work?</li> </ol> <p>A piece of markup you can include in other pages. Placed in <code>_includes</code> folder. For example, <code>_includes/navigation.html</code> is:</p> <pre><code>&lt;nav&gt;\n&lt;a href=\"/\"&gt;Home&lt;/a&gt;\n&lt;/nav&gt;\n</code></pre> <p>To include it in <code>_layouts/default.html</code>, use <code>{% include navigation.html %}</code>:</p> <pre><code>&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;title&gt;{{ page.title }}&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    {% include navigation.html %}\n    {{ content }}\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>You can also include a file relative to the current file via <code>{% include_relative &lt;relative_path&gt; %}</code>, but parent directories are not supported (i.e. no <code>../some-page.md</code>).</p> <ol> <li>What is data?</li> </ol> <p>Apart from page metadata in front matters, you can have dedicated data in <code>_data</code> folder in YAML, JSON or CSV formats. For example, <code>_data/navigation.yml</code>:</p> <pre><code>- name: Home\n  link: /\n- name: About\n  link: /about.html\n</code></pre> <p>The data is then available at <code>site.data.navigation</code>.</p> <ol> <li>How about assets?</li> </ol> <p>JavaScript and CSS files work as normal. Just reference them in HTML directly. If you add a front matter however, you can use Liquid in it.</p> <ol> <li>What are posts?</li> </ol> <p>In Jekyll, posts are specially treated pages. Placed in <code>_posts</code> with a date in the file name (e.g. <code>_posts/2018-08-20-bananas.md</code>), <code>page.title</code> will be <code>Bananas</code> and <code>page.date</code> will be <code>2018-08-20</code>. All posts are available at <code>site.posts</code>.</p> <ol> <li>What language is Jekyll written in?</li> </ol> <p>Ruby.</p> <ol> <li>How to create a new Jekyll site?</li> </ol> <p><code>jekyll new mysite</code></p> <ol> <li>What is the point of running <code>jekyll</code> commands with <code>bundle exec</code> prefixed?</li> </ol> <p>Gems are Ruby packages. Bundler installs and manages gems. This is similar to Node's NPM where NPM is a Node package that installs Node packages.</p> <p>By using <code>bundle exec</code>, <code>jekyll</code> respects <code>Gemfile</code> which acts just like <code>package.json</code>.</p> <p>(A side note: There is also a RubyGem which is a Ruby package manager. Bundler is also installed via RubyGem. It cannot handle dependency conflicts properly however and Bundler is the de-facto tool to manage packages.)</p> <ol> <li>How to build a site?</li> </ol> <p><code>bundle exec jekyll build</code>. The default output folder is <code>_site</code>.</p> <ol> <li>How to start the development server?</li> </ol> <p><code>bundle exec jekyll serve --livereload</code>. It does <code>jekyll build</code> and serves it at http://localhost:4000 by default. It rebuilds automatically on changes and <code>--livereload</code> will force the browser to reload as well.</p> <ol> <li>What is Jekyll's templating language Liquid?</li> </ol> <p>It has three main concepts:</p> <ol> <li>Object: Output variables (e.g. <code>{{ page.title }}</code>). There are many predefined variables provided by Jekyll to Liquid, check https://jekyllrb.com/docs/variables/. Similar to Django variables.</li> <li>Tag: Define the logic and control flow for templates. For example, <code>{% if &lt;condition&gt; %}</code> and <code>{% endif %}</code>. Similar to Django tags.</li> <li> <p>Filter: <code>{{ &lt;variable&gt; | &lt;filter&gt;}}</code>. For example, <code>{{ \"hi\" | capitalize }}</code> gives you <code>Hi</code>. Similar to Django filters.</p> </li> <li> <p>How to put pages in a different folder rather than the root directory?</p> </li> </ol> <p>In <code>_config.yml</code>, <code>source: &lt;source_dir&gt;</code>. For example, <code>source: docs</code>.</p> <p>This helps to avoid polluting the actual content (source) folder.</p> <ol> <li>What gems/plugins are supported in GitHub Pages?</li> </ol> <p>Refer to https://pages.github.com/versions/. If not supported, build locally before the commit and push.</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%AB%99%E3%80%81App/%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/Stackbit/","title":"Stackbit","text":"<p>Stackbit \u662f\u4e00\u4e2a\u5728\u7ebf\u5e73\u53f0\uff0c\u4e3a\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff08Gatsby\u3001Next.js\u3001Eleventy\u3001Gridsome\u3001Hexo\u3001Hugo\u3001Jekyll\u3001Next.js\u3001Nuxt\u3001Sapper \u548c Vuepress\uff09\u63d0\u4f9b\u7c7b\u4f3c Wix \u7684\u53ef\u89c6\u5316\u7f16\u8f91\u80fd\u529b\u3002\u53ea\u9700\u8981\u7b26\u5408\u4e00\u5b9a\u9879\u76ee\u7ed3\u6784\u89c4\u8303\uff0c\u518d\u6dfb\u52a0\u4e00\u4e2a stackbit.yaml \u914d\u7f6e\u6587\u4ef6\uff0c\u628a\u4ee3\u7801\u4e0a\u4f20\u5230 GitHub \u4e0a\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u5728 Stackbit \u4e0a\u8fdb\u884c\u53ef\u89c6\u5316\u7f16\u8f91\u3002\u652f\u6301\u76f4\u63a5\u628a Git \u5f53\u4f5c CMS\uff0c\u6216\u8005\u4e00\u4e9b\u6d41\u884c\u7684\u56fd\u5916\u7684\u5728\u7ebf CMS \u5e73\u53f0\uff08Contentful\u3001Sanity\u3001Forestry \u548c NetlifyCMS\uff09\u3002</p> <p>\u5177\u4f53\u800c\u8a00\uff0cStackbit \u4f1a\u5728 GitHub \u4e2d\u521b\u5efa\u4e00\u4e2a preview \u5206\u652f\u7528\u4e8e\u9884\u89c8\u7f16\u8f91\uff0c\u53d1\u5e03\u65f6\u5219\u628a preview \u5408\u5e76\u5230\u4e3b\u5206\u652f\u3002</p> <pre><code>npm install -g @stackbit/cli\nstackbit init\nstackbit validate  # \u9a8c\u8bc1\u914d\u7f6e\u662f\u5426\u6b63\u786e\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/CSS/Box%20%E6%A8%A1%E5%9E%8B/","title":"Box \u6a21\u578b","text":"<p>Box \u6a21\u578b\u5305\u62ec\u5185\u5bb9\u3001padding\u3001border \u548c margin\u3002</p> <p></p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/CSS/Box%20%E6%A8%A1%E5%9E%8B/#box-sizing","title":"Box Sizing","text":"<p>\u4e24\u4e2a\u9009\u9879\uff0c<code>content-box</code> \u548c <code>border-box</code>\uff0c\u9ed8\u8ba4\u662f <code>content-box</code>\u3002<code>content-box</code> \u65f6\uff0c<code>width</code> \u548c <code>height</code> \u6307\u5b9a\u7684\u662f\u5185\u90e8\u7684\u5185\u5bb9\u90e8\u5206\uff0c\u4e0d\u5305\u62ec padding\uff1b<code>border-box</code>\u65f6\uff0c\u5219\u662f\u5305\u62ec border\u5728\u5185\u7684\u3002\u53ea\u6709 margin \u662f\u6c38\u8fdc\u4e0d\u5728 box \u8303\u56f4\u5185\u7684\u3002</p> <p>\u4e0b\u9762\u4e24\u4e2a\u7684\u9ad8\u548c\u5bbd\u90fd\u662f 100px\uff0c\u6570\u636e\u662f\uff0c\u8fb9\u6846\u90fd\u662f 10px\uff0c\u7b2c\u4e00\u4e2a\u662f <code>content-box</code>\uff0c\u7b2c\u4e8c\u4e2a\u662f <code>border-box</code>\uff0c\u7ed3\u679c\u5c31\u662f\u7b2c\u4e00\u4e2a\u4e2d\u95f4\u767d\u8272\u90e8\u5206\u8fb9\u957f\u662f 100px\uff0c\u603b\u8fb9\u957f\u662f 120px\uff0c\u7b2c\u4e8c\u4e2a\u603b\u8fb9\u957f\u662f 100px\u3002</p> <p></p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/CSS/Box%20%E6%A8%A1%E5%9E%8B/#position-absolute","title":"<code>position: absolute</code>","text":"<p>\u914d\u5408 <code>position: absolute</code>\uff0c\u6ce8\u610f absolute \u662f\u76f8\u5bf9\u4e8e\u6700\u8fd1\u7684 position \u4e0d\u662f static\uff08\u9ed8\u8ba4\uff09\u7684\u5143\u7d20\uff0c\u6240\u4ee5\u4e00\u822c\u5c31\u628a\u7236\u5143\u7d20\u6216\u8005\u4f60\u60f3\u8ba9\u4ed6\u76f8\u5bf9\u4e8e\u7684\u5143\u7d20\u8bbe\u7f6e\u4e3a <code>position: relative</code>\u3002\u53ef\u4ee5\u770b\u5230\u76f8\u5bf9\u7684\u6c38\u8fdc\u662f padding \u7684\u5916\u6846\uff08\u8fd9\u4e24\u4e2a box \u90fd\u6709 10px \u7684 padding\uff09\u3002</p> <p></p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/CSS/Flexbox/","title":"Flexbox","text":"<p>\u53c2\u8003\u8d44\u6599</p> <ul> <li>FLEX: A simple visual cheatsheet for flexbox</li> <li>Flex Cheatsheet</li> <li>A Complete Guide to Flexbox | CSS-Tricks</li> </ul>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/CSS/Grid/","title":"Grid","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/CSS/Sass%E5%92%8CLess/","title":"Sass \u548c Less","text":"<p>\u8fd9\u4e24\u4e2a\u90fd\u662f CSS \u7684\u884d\u751f\uff0c\u5728 CSS \u7684\u57fa\u7840\u4e0a\u52a0\u5165\u4e86\u53d8\u91cf\u3001\u5d4c\u5957\u7b49\u9ad8\u7ea7\u7279\u6027\uff0c\u5e76\u6700\u7ec8\u7f16\u8bd1\u56de\u6b63\u5e38 CSS \u4f7f\u7528\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/CSS/Sass%E5%92%8CLess/#sass","title":"Sass","text":"<p>Sass \u6709\u4e24\u5957\u8bed\u6cd5\uff0c\u6700\u5f00\u59cb\u662f\u7f29\u8fdb\u8bed\u6cd5\uff0c\u6587\u4ef6\u62d3\u5c55\u540d\u662f<code>.sass</code>\uff0c\u540e\u6765\u53d1\u73b0\u5927\u5bb6\u559c\u6b22 CSS \u672c\u8eab\u7684<code>{}</code>\u52a0<code>;</code>\u8bed\u6cd5\uff0c\u53c8\u641e\u4e86\u4e2a SCSS\uff0c\u6587\u4ef6\u6269\u5c55\u540d\u662f<code>.scss</code>\u3002\u4e24\u4e2a\u98ce\u683c\u4e0d\u540c\u800c\u5df2\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002\u4ee5\u4e0b\u4ee5 SCSS \u4e3a\u4f8b\u3002</p> <p>\u7279\u6027\uff1a</p> <ol> <li>\u53d8\u91cf\uff1a<code>$primary-color: red;</code></li> <li>\u5d4c\u5957\uff1a\u7528<code>{}</code>\u5d4c\u5957\uff0c\u76f8\u5f53\u4e8e<code>ul li</code></li> <li>\u90e8\u5206\u3001\u6a21\u5757\uff1a\u5e26<code>_</code>\u5f00\u5934\u7684\u6587\u4ef6\u540d\uff0c\u4e0d\u4f1a\u88ab\u7f16\u8bd1\u81f3 CSS \u6587\u4ef6\uff0c\u53ef\u4ee5\u5728\u5176\u5b83 Sass \u6587\u4ef6\u4e2d\u7528 <code>@use</code> \u5f15\u7528\u4e3a\u6a21\u5757</li> <li>Mixin\uff1a</li> <li>TODO</li> </ol>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/CSS/Sass%E5%92%8CLess/#less","title":"Less","text":"<p>\u53e6\u4e00\u4e2a\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/CSS/%E9%80%89%E6%8B%A9%E5%99%A8/","title":"\u9009\u62e9\u5668","text":"<p>CSS selector</p> <pre><code>/* \u57fa\u672c */\ndiv {} /* tag */\n.class {}\n#id {}\n\n/* \u5c5e\u6027 */\n[attribute] {}\n[attribute=value] {}\n[attribute*=value] {} /* \u5305\u542b value */\n[attribute$=value] {} /* \u7ed3\u5c3e\u662f value */\n[attribute~=value] {} /* \u5c5e\u6027\u662f\u7a7a\u683c\u9694\u51fa\u6765\u7684\u51e0\u4e2a\u8bcd\uff0c\u5176\u4e2d\u4e00\u4e2a\u662f value */\n[attribute|=value] {} /* \u5c31\u662f value \u6216\u8005\u4ee5 value- \u5f00\u5934 */\n[attribute^=value] {} /* \u5c5e\u6027\u662f\u7a7a\u683c\u9694\u51fa\u6765\u7684\u51e0\u4e2a\u8bcd\uff0c\u5176\u4e2d\u4e00\u4e2a\u662f value */\n[attribute=value i] {} /* \u4e0a\u8ff0\u4efb\u4f55\u4e00\u4e2a\u540e\u9762\u52a0 i \u8868\u793a\u662f\u5927\u5c0f\u5199\u4e0d\u654f\u611f\u7684 */\n\n/* \u7ec4\u5408 */\nA, B {} /* \u591a\u9009 */\nA B {} /* A \u5185\u6240\u6709\u7684 B */\nA &gt; B {} /* B \u662f A \u7684\u76f4\u63a5\u7684\u7b2c\u4e00\u4e2a\u5b50\u5143\u7d20 */\nA ~ B {} /* \u548c A \u540c\u7ea7\u7684 B\uff0c\u6bd4\u5982 A \u548c B \u90fd\u662f C \u7684\u76f4\u63a5\u5b50\u5143\u7d20\uff0c\u4e14 B \u5728 A \u4e4b\u540e\uff1b\u53ea\u9009\u62e9\u4e00\u4e2a\uff0c\u540e\u7eed\u518d\u6709 B \u4e0d\u9009\u62e9\uff1b\u4e0d\u9700\u8981\u76f4\u63a5\u6328\u7740 */\nA + B {} /* \u7c7b\u4f3c ~\uff0c\u4f46\u662f\u8981\u76f4\u63a5\u6328\u7740 */\n\n/* Pseudo \u4f2a */\n:focus {} /* \u4f2a\u7c7b */\n::after {} /* \u4f2a\u5143\u7d20 */\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/HTML/Radio/","title":"Radio Button","text":"<p>\u6b64\u5904\u5c55\u793a\u5982\u4f55\u4f7f\u7528\u548c style Radio \u6309\u94ae\u3002</p>      \u6625         \u79cb"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/HTML/Web%20APIs/DOM/","title":"DOM","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/HTML/Web%20APIs/DOM/#_1","title":"\u7a97\u53e3\u3001\u6587\u6863\u52a0\u8f7d\u4e8b\u4ef6\u76d1\u542c\u5668","text":"<ol> <li><code>window.load</code>\uff1a\u5168\u90e8\u52a0\u8f7d\u5b8c\u6210</li> <li><code>window.DOMContentLoaded</code>\uff1aDOM \u52a0\u8f7d\u5b8c\u6210\uff0c\u5176\u4ed6\u8d44\u6e90\uff08\u56fe\u7247\u3001JS\u3001CSS\uff09\u5c1a\u672a\u5b8c\u6210</li> <li><code>document.DOMContentLoaded</code>\uff1a\u540c\u4e0a\uff0c\u4f46 <code>event.target</code> \u662f <code>document</code></li> <li><code>document.readystatechange</code>\uff1a\u5f53 <code>document.readyState</code> \u6539\u53d8\u65f6    <code>document.readyState</code> \u6709\u4e09\u4e2a\u53ef\u80fd\u7684\u503c\uff1a<code>loading</code>\u3001interactive<code>\uff08\u7c7b\u4f3c\u4e0a\u8ff0</code>DOMContentLoaded<code>\uff09\u3001</code>complete`</li> </ol>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Haskell/Haskell/","title":"Haskell","text":"<p>https://learning.edx.org/course/course-v1:DelftX+FP101x+3T2015/home</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Drools/","title":"Drools","text":"<p>Drools \u662f RetHat \u65d7\u4e0b KIE Group \u5f00\u53d1\u7684\u89c4\u5219\u5f15\u64ce\uff0cKIE \u7684\u610f\u601d\u662f Knowledge Is Everything\u3002</p> <p>KIE\u6709\u597d\u51e0\u4e2a\u9879\u76ee\uff0c\u5982\u4e0b\uff1a</p> <p></p> <p>DRL\u4ecb\u7ecd\u89c6\u9891 - KIE | YouTube</p> <p>Drools\u4ecb\u7ecd - \u4e91\u4e2d\u6f2b\u6b6587 | CSDN</p> <p>Drools\u8bb0\u5f55\u4e4bDRL\u89c4\u5219\u8bed\u8a00 - final-sun-shine | CSDN</p> <p>\u57fa\u4e8eflink\u548cdrools\u7684\u5b9e\u65f6\u65e5\u5fd7\u5904\u7406 - \u963f\u51e1\u5362 | \u535a\u5ba2\u56ed</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Drools/#drools_1","title":"Drools\u7684\u4f18\u52bf","text":"<ol> <li>\u5206\u79bb\u4e1a\u52a1\u903b\u8f91\u548c\u5e94\u7528\u4ee3\u7801</li> <li>\u58f0\u660e\u5f0f\u7684\u8bed\u8a00\u63cf\u8ff0\u9700\u8981\u7684\u89c4\u5219</li> <li>\u5982\u679c\u57fa\u4e8eDrools\u5f00\u53d1\u7684\u7a0b\u5e8f\u975e\u5e38\u6613\u7528\uff0c\u53ef\u4ee5\u76f4\u63a5\u8ba9\u61c2\u4e1a\u52a1\u7684\u4eba\u914d\u7f6e\u4e1a\u52a1\u89c4\u5219\uff0c\u4e0d\u9700\u8981\u6280\u672f\u4eba\u5458</li> </ol>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Drools/#_1","title":"\u5b9a\u4e49\u89c4\u5219","text":"<ol> <li>DRL\uff1aDrools Rule Language</li> <li>Executable model</li> <li>DMN\uff1aDecision Model and Notation\uff0c\u7c7b\u4f3cUML\uff0c\u662f\u56fe</li> <li>Decision table</li> </ol> <p>BPMN PMML</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Java/","title":"Java","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Java/#javareserved-wordskeywordsprimitive-data-types","title":"Java\u4fdd\u7559\u5b57\uff08reserved words\uff09\u3001\u5173\u952e\u5b57\uff08keywords\uff09\u3001\u57fa\u7840\u6570\u636e\u7c7b\u578b\uff08primitive data types\uff09","text":"<p>https://docs.oracle.com/javase/tutorial/java/nutsandbolts/_keywords.html https://www.knowprogram.com/java/java-keywords/</p> <p>\u6574\u6570\u7c7b\u578b\u9664\u4e86\u5e38\u7528\u7684<code>int</code>\u548c<code>long</code>\uff0c\u8fd8\u6709<code>byte</code>\u548c<code>short</code>\u3002\u6d6e\u70b9\u6570\u5c31float\u548cdouble\u3002</p> <ul> <li><code>final</code></li> <li>this super  </li> <li>try catch finally</li> <li><code>throw</code>\u629b\u51fa\u5f02\u5e38\uff0c<code>throws</code>\u7528\u4e8e\u65b9\u6cd5\uff0c\u8868\u660e\u8be5\u65b9\u6cd5\u6709\u672ahandled\u7684\u5f02\u5e38\u3002</li> <li>sealed non-sealed</li> <li>native\u8bf4\u660e\u8be5\u65b9\u6cd5\u4e0d\u662f\u5728Java\u6e90\u4ee3\u7801\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\uff0c\u800c\u662f\u5728\u53e6\u4e00\u4e2a\u8bed\u8a00\u4e2d\u5b9a\u4e49\u7684\u3002</li> <li>strictfp</li> <li>volatile</li> <li>transient</li> <li>synchronised</li> <li>private protected public</li> </ul>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Java/#_1","title":"\u95ee\u9898","text":"<ol> <li>What is Java as a programming language?</li> </ol> <p>Java is a programming language that is:</p> <ol> <li>high-level</li> <li>statically-typed</li> <li> <p>class-based object-oriented</p> </li> <li> <p>Is Java a compiled or interpreted language?</p> </li> <li> <p>What are the basic constructs of Java?</p> </li> <li> <p>What visibilities does Java have?</p> </li> <li> <p>What can be <code>static</code> in Java?</p> </li> <li> <p>What can be <code>final</code> in Java?</p> </li> <li> <p>What is annotation?</p> </li> <li> <p>What is reflection?</p> </li> <li> <p>Can I use Java 11's JDK to compile for code that was written for Java 8 and run it with a Java 8 JVM?</p> </li> <li> <p>Does Java have module? What is the difference between a module and a package in the context of Java?</p> </li> <li> <p>What is Java Bean?</p> </li> <li> <p>What is POJO?</p> </li> <li> <p>What is dependency injection?</p> </li> <li> <p>What is Java EE? What is the difference between Java EE and Java SE?</p> </li> <li> <p>What can JVM do other than interpreting and executing Java bytecode?</p> </li> <li> <p>What is Java bytecode?</p> </li> <li> <p>Can <code>int[]</code> be <code>null</code>?</p> </li> </ol> <p>Yes. <code>int[] array;  // array ==&gt; null</code>.</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Java/#_2","title":"\u6742\u9879","text":"<ol> <li>Linux\uff08Ubuntu\u3001Debian\uff09\u5207\u6362Java\u7248\u672c</li> </ol> <p>https://askubuntu.com/a/740782/945748</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Maven/","title":"Maven","text":"<ol> <li>How to skip tests?</li> </ol> <p>Two ways to skip tests in command line: <code>mvn &lt;command&gt; -DskipTests</code> or <code>mvn &lt;command&gt; -Dmaven.test.skip=true</code>. The second one is recommended as it not only skip the execution but also the compilation of tests.</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/","title":"Java Persistence API (JPA)","text":"<p>JPA\u89c4\u8303\u7f51\u7ad9</p> <p>\u6700\u6743\u5a01\u7684\u8d44\u6599\u662fJPA 3.0\u89c4\u8303\u6587\u4ef6\uff0c2020\u5e749\u67088\u65e5\uff0c\u5199\u5f97\u5f88\u6e05\u695a\uff0c\u8d28\u91cf\u5f88\u9ad8\uff0c\u5543\u4e0b\u6765\u4e0d\u7b97\u592a\u96be\u3002\u6216\u8005\u770bJPA 3.0\u89c4\u8303PDF\u7248\u672c\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/#entity","title":"\u5b9e\u4f53 Entity","text":"<p>An entity is a lightweight persistent domain object.</p> <p>Entity\u7c7b\uff1a</p> <ol> <li>\u6807\u8bb0\u4e3a<code>@Entity</code>\u6216\u5728XML\u4e2d\u6807\u8bb0\u4e3aEntity</li> <li>\u6709\u4e00\u4e2a\u65e0\u53c2\u7684constructor\uff0cpublic\u6216protected</li> <li>\u4e0d\u80fd\u662fnested class\uff0c\u4e0d\u80fd\u662fenum\u6216interface</li> <li>\u4e0d\u80fd\u662ffinal\uff0c\u65b9\u6cd5\u548c\u8981\u5b58\u50a8\u7684\u53d8\u91cf\u90fd\u4e0d\u80fd\u662ffinal</li> <li>\u5982\u679c\u4e00\u4e2aentity\u5b9e\u4f8b\u8981\u4f20\u8f93\u4e3adetached\u5bf9\u8c61\uff0c\u5c31\u5fc5\u987b\u5b9e\u73b0Serializable interface</li> <li>\u652f\u6301inheritance\u3001polymorphic associations\u548cpolymorphic queries</li> <li>\u53ef\u4ee5\u662f\u62bd\u8c61\u7c7b\uff0c\u53ef\u4ee5\u7ee7\u627f\u975eentity\u7c7b\uff0c\u4e5f\u53ef\u4ee5\u7ee7\u627fentity\u7c7b\uff1b\u975eentity\u7c7b\u4e5f\u53ef\u4ee5\u7ee7\u627fentity\u7c7b</li> <li>entity\u7684persistence state\u7531instance\u53d8\u91cf\u8868\u793a\uff08\u53ef\u4ee5\u662fJavaBeans\u5c5e\u6027\uff09\u3002\u5bf9\u5ba2\u6237\u6765\u8bf4\uff0c\u5fc5\u987b\u7531access methods\uff08getter\u548csetter\uff09\u8bbf\u95ee</li> <li>entity\u7c7b\u53ef\u4ee5\u6709business\u65b9\u6cd5</li> </ol> <pre><code>@Entity\npublic class Customer implements Serializable {\n    private Long id;\n    private String name;\n    private Address address;\n    private Collection&lt;Order&gt; orders = new HashSet();\n    private Set&lt;PhoneNumber&gt; phones = new HashSet();\n\n    // No-arg constructor\n    public Customer() {}\n\n    @Id // property access is used\n    public Long getId() {\n        return id;\n    }\n\n    public void setId(Long id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public Address getAddress() {\n        return address;\n    }\n\n    public void setAddress(Address address) {\n        this.address = address;\n    }\n\n    @OneToMany\n    public Collection&lt;Order&gt; getOrders() {\n        return orders;\n    }\n\n    public void setOrders(Collection&lt;Order&gt; orders) {\n        this.orders = orders;\n    }\n\n    @ManyToMany\n    public Set&lt;PhoneNumber&gt; getPhones() {\n        return phones;\n    }\n\n    public void setPhones(Set&lt;PhoneNumber&gt; phones) {\n        this.phones = phones;\n    }\n\n    // Business method to add a phone number to the customer\n    public void addPhone(PhoneNumber phone) {\n        this.getPhones().add(phone);\n\n        // Update the phone entity instance to refer to this customer\n        phone.addCustomer(this);\n    }\n}\n</code></pre> <p>\u8fd9\u91cc\u662f\u53ef\u4ee5\u6709\u4e00\u4e9b\u5546\u4e1a\u903b\u8f91\u7684\u3002</p> <p>\u6ce8\uff1a\u8fd9\u91cc\u7684\u8ba8\u8bba\u5168\u90fd\u5ffd\u7565\u4e86@Embeddable\u548c\u590d\u5408\u4e3b\u952e\uff0c\u592a\u9ebb\u70e6\uff0c\u9700\u8981\u7684\u8bdd\u518d\u770b\u6587\u6863\u3002\u7ee7\u627f\u4e5f\u4e0d\u5728\u6b64\u8be6\u8ff0\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/#attributes","title":"\u5b9e\u4f53\u5c5e\u6027 Attributes","text":"<p>Field\u6216\u8005property\uff0c\u4e0d\u6807\u6ce8\u7684\u8bdd\u9ed8\u8ba4\u662f<code>@Basic</code>\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/#jpa-provider","title":"JPA provider\u8bbf\u95ee\u7c7b\u578b","text":"<p>\u8fd9\u91cc\u7684\u8bbf\u95ee\u7c7b\u578b\u6307\u7684\u662fJPA provider\u662f\u76f4\u63a5\u8bbf\u95eefield\u8fd8\u662fproperty\u3002\u9664\u975e\u6807\u4e3a<code>@Transient</code>\uff0c\u6240\u6709field\u6216\u8005property\u90fd\u4f1a\u88abpersist\u3002\u9009\u62e9\u4efb\u4e00\u8bbf\u95ee\u7c7b\u578b\u7686\u53ef\uff0c\u89c6\u5177\u4f53\u9700\u6c42\u800c\u5b9a\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/#id","title":"\u4e3b\u952e\u3001ID","text":"<p>\u7b80\u5355\u4e3b\u952e\u662f\u6700\u5bb9\u6613\u7684\uff0c\u76f4\u63a5\u52a0<code>@Id</code>\u5373\u53ef\u3002\u590d\u5408\u4e3b\u952e\u5f88\u9ebb\u70e6\uff0c\u5c3d\u91cf\u4e0d\u8981\u7528\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/#collections","title":"\u96c6\u5408 Collections","text":"<p>\u4e00\u4e2aattribute\u53ef\u4ee5\u662f\u4e00\u4e2a\u96c6\u5408\uff0c\u8fd9\u4e2a\u96c6\u5408\u8981\u4e48\u662f\u666e\u901a\u5143\u7d20\uff0c\u5982\u679c\u4e0d\u662fentity\u7684\u8bdd\uff0c\u5c31\u5f97mark\u4e3a@ElementCollection\uff0c\u6570\u636e\u5b58\u5728\u67d0\u4e2a\u8868\u91cc\u3002\u5982\u679c\u662fentity\u7684\u8bdd\uff0c\u5219\u7528@OneToMany\u6216@ManyToMany\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/#map","title":"Map\u96c6\u5408","text":"<p>\u65e0\u8bba\u662f\u96c6\u5408\u5143\u7d20\u666e\u901a\u5143\u7d20\u8fd8\u662fentity\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u7528<code>java.util.Map</code>\u800c\u4e0d\u4ec5\u4ec5\u662fCollection\u6765\u8868\u793a\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5feb\u901f\u5730\u6839\u636e\u4e3b\u952e\u6216\u8005\u5176\u5b83\u5c5e\u6027\u83b7\u53d6\u9700\u8981\u7684\u5143\u7d20\u3002</p> <p>\u4ee5entity\u4e3a\u4f8b\uff0c\u672c\u6765\u5199\u4f5c<code>Collection&lt;Book&gt; books</code>\u7684\u73b0\u5728\u53ef\u4ee5\u5199\u4e3a<code>Map&lt;String, Book&gt; books</code>\uff0c\u5176\u4e2dkey\u53ef\u4ee5\u662fBook\u7684@Id\uff0c\u4e5f\u53ef\u4ee5\u662f\u522b\u7684attribute\u3002</p> <p>\u5982\u679cmap\u7684key\u662f\u57fa\u7840\u7c7b\u578b\uff0c\u53ef\u4ee5\u7528@MapKeyColumn\u6807\u6ce8\u54ea\u4e00\u5217\u662f\u8be5key\u3002\u5982\u679ckey\u662f\u4e2aentity\uff0c\u5219\u7528@MapKeyJoinColumn\u6216@MapKeyJoinColumns\u3002\u5982\u679c\u4e0d\u662f\u7528generics\u7684\u8bdd\uff0c\u8981\u7528@MapKeyClass\u6807\u6ce8\u6570\u636e\u7c7b\u578b\u3002</p> <p>\u5982\u679cmap\u7684key\u662fmap\u7684value\u7684\u4e3b\u952e\u6216\u67d0\u4e2aattribute\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u7528@MapKey\u6807\u6ce8\u3002</p> <p>\u5982\u679cvalue\u662f\u57fa\u7840\u7c7b\u578b\uff0c\u8981\u7528\u4e00\u4e2a@CollectionTable\u3002</p> <p>\u5982\u679cvalue\u662fentity\uff0c\u5219\u5bf9\u4e8e@ManyToMany\u4f7f\u7528\u4e00\u4e2ajoin\u8868\uff0c\u5bf9unidirectional\u7684@OneToMany\u9ed8\u8ba4\u4e5f\u4f7f\u7528\u4e00\u4e2ajoin\u8868\u3002\u5982\u679c@ManyToOne\u6216@OneToMany\u662fbidirectional\u7684\uff0c\u5219\u9ed8\u8ba4\u4e0d\u9700\u8981join\u8868\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/#entity-relationships","title":"\u5b9e\u4f53\u5173\u7cfb Entity Relationships","text":"<p>\u5b9e\u4f53\u95f4\u5173\u7cfb\u662fpolymorphic\u7684\u3002TODO\uff1a\u4ec0\u4e48\u610f\u601d\uff1f</p> <p>\u5b9e\u4f53\u95f4\u5173\u7cfb\u7c7b\u578b\uff1a</p> <ol> <li>@OneToOne</li> <li>@OneToMany</li> <li>@ManyToOne</li> <li>@ManyToMany</li> </ol> <p>\u5173\u7cfb\u53ef\u4ee5\u662fbidirectional\u6216unidirectional\u7684\u3002\u53cc\u5411\u5173\u7cfb\u662f\u4e00\u65b9own\u7684\uff0c\u53e6\u4e00\u65b9\u5e76\u4e0down\u8fd9\u4e2a\u5173\u7cfb\u3002\u53e6\u4e00\u65b9\u867d\u7136\u4e5f\u6807\u6ce8\u5173\u7cfb\u7c7b\u578b\uff0c\u4f46\u662f\u53ea\u7528mappedBy\u6807\u6ce8\u5bf9\u5e94\u7684own\u8fd9\u4e2a\u5173\u7cfb\u7684entity\u7684attribute\u3002\u62e5\u6709\u7684\u4e00\u65b9\u603b\u662f\u591a\u7684\u90a3\u4e00\u65b9\uff0c\u6bd4\u5982@ManyToOne\uff0c\u800c\u4e0d\u80fd\u662f@OneToMany\u3002\u5355\u5411\u5173\u7cfb\uff0c\u53e6\u4e00\u65b9\u4e0d\u7528\u6807\u6ce8\u3002</p> Owning Side Inverse Side (w/ mappedBy)\uff0c\u6ca1\u6709\u7684\u8bdd\u662f\u5355\u5411\u5173\u7cfb \u5907\u6ce8 @OneToOne @OneToOne @ManyToOne @OneToMany @ManyToMany @ManyToMany \u8981\u6709join\u8868 @OneToOne @OneToMany \u8981\u6709join\u8868 @ManyToOne @ManyToMany \u8981\u6709join\u8868 <p>\u53ea\u6709\u4fdd\u5b58\u62e5\u6709\u5173\u7cfb\u7684\u4e00\u65b9\u65f6\uff0c\u6539\u53d8\u624d\u4f1a\u88abcascade\u5230\u53e6\u4e00\u65b9\u3002\u89c13.2.4. Synchronization to the Database\u3002</p> <p>It is particularly important to ensure that changes to the inverse side of a relationship result in appropriate updates on the owning side, so as to ensure the changes are not lost when they are synchronized to the database.</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/#onetoonemanytooneonetomany-w-mappedby","title":"\u4f8b\u5b50\uff1a@OneToOne\u3001@ManyToOne\uff08@OneToMany w/ mappedBy\uff09","text":"<pre><code>@Entity\npublic class Employee { // \u9ed8\u8ba4\u8868\u662fEMPLOYEE\n    private Cubicle assignedCubicle; // \u9ed8\u8ba4\u5916\u952e\u53ebASSIGNEDCUBICLE_&lt;PK_CUBICLE&gt;\uff0c\u4e14\u662funique\u7684\n\n    @OneToOne\n    public Cubicle getAssignedCubicle() {\n        return assignedCubicle;\n    }\n\n    public void setAssignedCubicle(Cubicle cubicle) {\n        this.assignedCubicle = cubicle;\n    }\n\n    // ...\n}\n\n@Entity\npublic class Cubicle { // \u9ed8\u8ba4\u8868\u662fCUBICLE\n    private Employee residentEmployee;\n\n    @OneToOne(mappedBy=\"assignedCubicle\")\n    public Employee getResidentEmployee() {\n        return residentEmployee;\n    }\n\n    public void setResidentEmployee(Employee employee) {\n        this.residentEmployee = employee;\n    }\n\n    // ...\n}\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/#manytomany","title":"\u4f8b\u5b50\uff1a@ManyToMany","text":"<pre><code>@Entity\npublic class Project { // \u9ed8\u8ba4\u8868\u662fPROJECT\n    private Collection&lt;Employee&gt; employees; // \u9ed8\u8ba4\u5916\u952e\u662fEMPLOYEES_&lt;PK_EMPLOYEE&gt;\n\n    @ManyToMany\n    public Collection&lt;Employee&gt; getEmployees() { // \u9ed8\u8ba4join\u8868\u662fPROJECT_EMPLOYEE\n        return employees;\n    }\n\n    public void setEmployees(Collection&lt;Employee&gt; employees) {\n        this.employees = employees;\n    }\n\n    // ...\n}\n\n@Entity\npublic class Employee { // \u9ed8\u8ba4\u8868\u662fEMPLOYEE\n    private Collection&lt;Project&gt; projects; // \u9ed8\u8ba4\u5916\u952e\u662fPROJECTS_&lt;PK_PROJECT&gt;\n\n    @ManyToMany(mappedBy=\"employees\")\n    public Collection&lt;Project&gt; getProjects() {\n        return projects;\n    }\n\n    public void setProjects(Collection&lt;Project&gt; projects) {\n        this.projects = projects;\n    }\n\n    // ...\n}\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/#entity-instances-life-cycle","title":"\u5b9e\u4f53\u5b9e\u4f8b\u751f\u547d\u5468\u671f Entity Instance's Life Cycle","text":"<p>\u4efb\u4f55\u4e00\u4e2aentity\u5b9e\u4f8b\u90fd\u5c5e\u4e8e\u4ee5\u4e0b\u56db\u79cd\u72b6\u6001\u4e4b\u4e00\u3002</p> <ol> <li>\u65b0\u5efa\u7684 new</li> <li>\u88ab\u7ba1\u7406\u7684 managed</li> <li>\u8131\u79bb\u7684 detached</li> <li>\u5df2\u79fb\u9664\u7684 removed</li> </ol> \u751f\u547d\u5468\u671f Persistence Identity Persistence Context \u5907\u6ce8 New \u65e0 \u65e0 \u65b0\u5efa\u7684 Manged \u6709 \u6709 Detached \u6709 \u65e0 Removed \u6709 \u6709 Transaction\u63d0\u4ea4\u65f6\u5c06\u79fb\u9664 <pre><code>stateDiagram-v2\n    [*] --&gt; new : new Book()\n    new --&gt; managed: persist()\n    managed --&gt; managed: persist()\n    removed --&gt; managed: persist()\n    new --&gt; new: remove()\n    managed --&gt; removed: remove()\n</code></pre> <p>\u6ce8\u610f\uff0cpersist()\u548cremove()\u4f1a\u6839\u636ecascade\u7c7b\u578b\u5904\u7406\u5f15\u7528\u7684entity\u3002</p> <p></p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/#entitymanager","title":"\u5b9e\u4f53\u7ba1\u7406\u5668 EntityManager","text":"<p>\u4e00\u4e2aEntityManager\u5bf9\u5e94\u4e00\u4e2apersistence context\u7684\u3002</p> <p>\u4f7f\u7528\u793a\u4f8b\uff1a</p> <pre><code>@Stateless\npublic class OrderEntryBean implements OrderEntry {\n    @PersistenceContext\n    EntityManager em;\n\n    public void enterOrder(int custID, Order newOrder) {\n        Customer cust = em.find(Customer.class, custID);\n        cust.getOrders().add(newOrder);\n        newOrder.setCustomer(cust);\n        em.persist(newOrder);\n    }\n}\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/#persistence-context","title":"\u6301\u4e45\u5316\u5883 Persistence Context","text":"<p>A persistence context is a set of managed entity instances in which for any persistent entity identity there is a unique entity instance. Within the persistence context, the entity instances and their lifecycle are managed by the entity manager.</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/#entity-packaging","title":"\u5b9e\u4f53\u6253\u5305 Entity Packaging","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/#persistence-unit","title":"\u6301\u4e45\u5316\u5355\u4f4d Persistence Unit","text":"<p>\u6301\u4e45\u5316\u5355\u4f4d\u4e00\u4e2a\u5728\u5728\u903b\u8f91\u4e0agrouping\uff1a</p> <ol> <li>\u5b9e\u4f53\u7ba1\u7406\u5668\u5de5\u5382\u548c\u5b9e\u4f53\u7ba1\u7406\u5668\uff0c\u53ca\u5b83\u4eec\u7684\u914d\u7f6e\u4fe1\u606f</li> <li>Managed\u7c7b</li> <li>\u6620\u5c04\u5143\u6570\u636e\uff08Java\u6807\u6ce8\u6216XML\uff09</li> </ol>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/#persistencexml","title":"<code>persistence.xml</code>","text":"<p>\u4e00\u4e2a\u6301\u4e45\u5316\u5355\u4f4d\u662f\u5b9a\u4e49\u5728\u4e00\u4e2a<code>persistence.xml</code>\u4e2d\u7684\uff0c\u4e00\u4e2a<code>persistence.xml</code>\u53ef\u4ee5\u6709\u591a\u4e2a\u6301\u4e45\u5316\u5355\u4f4d\u3002</p> <p><code>persistence.xml</code>\u653e\u5728META-INF\u76ee\u5f55\u4e2d\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/#api","title":"API","text":"<p>jahe/jpa-cheatsheet.java</p> <p>JPA\u7684API\u90fd\u5728<code>javax.persistence</code>\u8fd9\u4e2apackage\u4e2d\uff0c\u5f53\u7136\u8fd8\u9700\u8981\u914d\u5408\u5b9e\u9645\u7684JPA provider\u4f7f\u7528\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/#entitymanager_1","title":"EntityManager","text":"<p>\u6ce8\u610f\uff0c\u5728\u4fdd\u5b58\u7684\u65f6\u5019\uff0c@OneToMany\u7684\u5173\u7cfb\u662f\u4e0d\u4f1a\u88ab\u4fdd\u5b58\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5173\u7cfb\u662f\u5c5e\u4e8e\u6709@ManyToOne\u7684\u90a3\u4e2aEntity\u7684\uff0c\u5fc5\u987b\u8981\u5355\u72ec\u4fdd\u5b58\u90a3\u4e2aEntity\u3002\u53c2\u89c1Why merging is not cascaded on a one to many relationship - Stack Overflow\u3002\u4f3c\u4e4e\u53ef\u4ee5\u6807\u8bb0cascade type\uff0c\u4e0d\u8fc7\u624b\u52a8\u7684\u8bdd\u5c31\u662f\u8fd9\u6837\u3002</p> <ol> <li>find</li> <li>persist</li> <li>merge</li> <li>contains</li> <li>detach</li> <li>flush</li> <li>remove</li> <li>refresh</li> </ol>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/#jpa","title":"\u4ec0\u4e48\u662fJPA?","text":"<p>JPA is a part of Jakarta EE (formerly Java EE, EE stands for Enterprise Edition). It provides ORM (object-relational mapping).</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/#what-ways-of-query-does-jpa-have","title":"What ways of query does JPA have?","text":"<ol> <li>JPQL (Java Persistence Querying Language): similar to SQL.</li> <li>Criteria API: no embedded language, similar to Django's model layer.</li> <li>Native SQL</li> </ol> <p>It supports many other ways of query.</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/#jpa-provider_1","title":"\u4ec0\u4e48\u662fJPA provider?","text":"<p>Just like JDBC, Java only provides a set of interface, the actual work is done by providers. In JDBC, the API is in <code>java.sql</code>, and the actual providers are JDBC drivers provided by database vendors or third-parties. Some notable JPA providers: EclipseLink, Hibernate and OpenJPA, etc.</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/#jpa_1","title":"JPA\u652f\u6301\u54ea\u4e9b\u5173\u7cfb?","text":"<p>The basic ones:</p> <ol> <li>OneToOne: A - B</li> <li>ManyToOne: A *- B</li> <li>OneToMany: A -* B</li> <li>ManyToMany: A *-* B, realised by A - A_B - B where A_B is a JoinTable</li> </ol>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JPA/#manytomany_1","title":"\u600e\u4e48\u6620\u5c04ManyToMany\u5173\u7cfb?","text":"<p>For example, if you have table A, B and A_B where A_B is a JoinTable of A and B. You can define A in JPA as:</p> <pre><code>@Entity\npublic class A {\n   @ManyToMany\n   @JoinTable(name = \"A_B\",\n           joinColumns = @JoinColumn(name = \"A_ID\", referencedColumnName = \"ID\"),\n           inverseJoinColumns = @JoinColumn(name = \"B_ID\", referencedColumnName = \"ID\"))\n   private List&lt;B&gt; bs;\n}\n</code></pre> <p>B as:</p> <pre><code>@Entity\npublic class B {\n   @ManyToMany(mappedBy=\"bs\")\n   private List&lt;A&gt; as;\n}\n</code></pre> <p>If the JoinTable has more columns other than A and B's ids, you can fallback and use ManyToOne on the JoinTable.</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JSF/","title":"JSF (Jakarta Server Faces)","text":"<p>JSF\u662fJakarta EE\uff08\u539fJava EE\uff09\u7684\u4e00\u90e8\u5206\uff0c\u662f\u6784\u5efa\u7ec4\u4ef6\u5f0f\u7684Web UI\u7684specification\uff0c\u4e5f\u662f\u4e00\u4e2aMVC\u7684web\u6846\u67b6\u3002</p> <ol> <li>Where can I find references of JSF tags/components?</li> </ol> <p>For example, given this:</p> <pre><code>&lt;ui:composition xmlns=\"http://www.w3.org/1999/xhtml\"\n                xmlns:ui=\"http://java.sun.com/jsf/facelets\"\n                xmlns:h=\"http://java.sun.com/jsf/html\"\n                xmlns:p=\"http://primefaces.org/ui\"\n                xmlns:f=\"http://java.sun.com/jsf/core\"&gt;\n&lt;/ui:composition&gt;\n</code></pre> <p><code>p</code> is from PrimeFaces (https://www.primefaces.org/documentation/), <code>f</code>, <code>ui</code> and <code>h</code> are from JSF (https://jakarta.ee/specifications/faces/3.0/vdldoc/).</p> <p>You can find PrimeFaces demo here: https://www.primefaces.org/showcase/index.xhtml.</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Java/Jakarta%20EE/JSF/#primefacesdatatable-lazy-loading","title":"PrimeFaces\u6570\u636e\u8868\u683c\u60f0\u6027\u52a0\u8f7d\uff08DataTable Lazy Loading\uff09","text":"<p>\u6587\u6863\uff1ahttps://primefaces.github.io/primefaces/10_0_0/#/components/datatable?id=lazy-loading\\ \u793a\u4f8b\uff1ahttps://www.primefaces.org/showcase/ui/data/datatable/lazy.xhtml</p> <p>\u5728\u670d\u52a1\u5668\u7aef\u60f0\u6027\u52a0\u8f7d\u6570\u636e\uff08\u6bd4\u5982\u4ece\u6570\u636e\u5e93\uff09\uff0c\u9002\u5408\u5927\u6570\u636e\u96c6\u3002\u7ed1\u5b9a\u7684\u6570\u636e\u5f97\u662f\u4e00\u4e2aLazyDataModel\u3002\u7528\u8fd9\u4e2a\u7684\u8bdd\uff0c\u6392\u5e8f\u3001\u8fc7\u6ee4\u3001\u5206\u9875\u7b49\u90fd\u8981\u81ea\u5df1\u5728LazyDataModel\u4e2d\u5b9e\u73b0\u4e86\u3002\u6bcf\u5f53\u5206\u9875\u3001\u6392\u5e8f\u3001\u8fc7\u6ee4\u53d1\u751f\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u8c03\u7528LazyDataModel\u7684load\u65b9\u6cd5\u3002</p> <p>\u9700\u8981\u5b9e\u73b0\u9009\u62e9\u7684\u8bdd\uff0c\u8fd8\u8981\u8986\u76d6\uff08override\uff09SelectableDataModel\u7684<code>public T getRowData(String)</code>\u548c<code>public Object getRowKey(T)</code>\u3002\u76f8\u5f53\u4e8e\u6839\u636erowKey\u5b57\u7b26\u4e32\u627erowData\u548c\u6839\u636erowData\u5f97\u5230rowKey\u5b57\u7b26\u4e32\u3002\u5173\u4e8e\u9009\u62e9\uff0c\u53c2\u89c1\u6587\u6863\uff1ahttps://primefaces.github.io/primefaces/10_0_0/#/components/datatable?id=row-selection\u3002</p> <p>\u8fd9\u91cc\u52a0<code>lazy=\"true\"</code>\u3002 <pre><code>&lt;p:dataTable var=\"car\" value=\"#{carBean.model}\" paginator=\"true\" rows=\"10\" lazy=\"true\"&gt;\n   //columns\n&lt;/p:dataTable&gt;\n</code></pre></p> <p></p> <p>\u8fd9\u91cc\u8981\u7528LazyDataModel\u3002 <pre><code>public class CarBean {\n    // \u8fd9\u4e2amodel\u662fdataTable\u7684value\u7ed1\u5b9a\u7684\u503c\n    private LazyDataModel model;\n    // \u4e5f\u53ef\u4ee5\u662f\u66f4\u7cbe\u786e\u7684LazyDataModel&lt;Car&gt;\n\n    public CarBean() {\n        model = new LazyDataModel() {\n            // \u6bcf\u5f53\u6709\u5206\u9875\u3001\u6392\u5e8f\u3001\u8fc7\u6ee4\u53d1\u751f\u7684\u65f6\u5019\u90fd\u4f1a\u8c03\u7528load\n            @Override\n            public List&lt;Car&gt; load(int first, int pageSize, String sortField,\n                             SortOrder sortOrder, Map&lt;String, Object&gt; filters) {\n                // \u52a0\u8f7d\u6570\u636e\n                List&lt;Car&gt; data = new ArrayList&lt;&gt;();\n                // ...\n                // \u8bbe\u7f6e\u603b\u884c\u6570\n                model.setRowCount(data.size());\n                return data;\n            }\n            @Override\n            public Car getRowData(String rowKey) {\n                // ...\n            }\n            @Override\n            // \u8fd9\u4e2a\u8fd4\u56de\u7684Object\u5f53\u7136\u53ef\u4ee5\u76f4\u63a5\u662fString\uff0c\u5426\u5219PrimeFaces\u53ef\u80fd\u4f1a\u7528toString\u7b49\u65b9\u6cd5\u5f97\u5230\u4e00\u4e2aString\n            public Object getRowKey(Car rowData) {\n                // ...\n            }\n        };\n    }\n}\n</code></pre></p> <p>TODO ?faces-redirect=true\u662f\u4ec0\u4e48\uff1f</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/","title":"\u57fa\u7840","text":"<p>JavaScript \u6307\u5357 | MDN (mozilla.org)</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/#_2","title":"\u9700\u8981\u5b66\u4e60","text":"<ol> <li>\u95ed\u5305<ol> <li>\u5168\u5c40</li> <li>\u4f5c\u7528\u57df</li> </ol> </li> <li>\u5f02\u6b65<ol> <li><code>setTimeOut</code>\u3001<code>setInterval</code></li> <li>AJAX</li> <li><code>Promise</code></li> <li><code>async</code>\u3001<code>await</code></li> <li>\u5f02\u6b65\u673a\u5236</li> </ol> </li> <li>\u7ebf\u7a0b\u673a\u5236</li> <li>TypeScript</li> </ol>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/#_3","title":"\u4f5c\u7528\u57df","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/#_4","title":"\u53d8\u91cf","text":"<p>\u65b0\u7684 JavaScript \u4e2d\u4e0d\u5efa\u8bae\u7528 <code>var</code> \u4e86\uff0c\u6682\u4e0d\u8868\uff0c\u53ea\u8bf4 <code>let</code> \u548c <code>const</code>\u3002</p> <p><code>let</code> \u548c <code>const</code> \u90fd\u662f\u63d0\u4f9b\u5c40\u90e8\u4f5c\u7528\u57df\uff0c\u6bd4\u65b9\u8bf4\uff1a</p> <pre><code>if (true) {\n  let x = 1;\n}\nconsole.log(x);  // \u4f1a\u51fa\u9519\u56e0\u4e3a x \u662f\u5c40\u90e8\u7684\uff0c\u53ea\u5728\u4e0a\u9762\u7684 if \u4e2d\u6709\u7528\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/#_5","title":"\u51fd\u6570","text":"<p>\u53ea\u6709\u8fd9\u6837\u5b9a\u4e49\u7684\u51fd\u6570\u624d\u4f1a\u6709\u51fd\u6570\u63d0\u5347\uff1a</p> <pre><code>f()  // \u53ef\u4ee5\u6267\u884c\u56e0\u4e3a\u6709\u53d8\u91cf\u63d0\u5347\n\nfunction f () {\n  console.log('Hi')\n}\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/#_6","title":"\u5f02\u5e38\u5904\u7406","text":"<pre><code>try {\n  console.log('try');\n  throw 'error';\n} catch (e) {\n  console.log('catch', e);\n} finally {\n  console.log('finally');\n}\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>try\ncatch error\nfinally\n</code></pre> <pre><code>throw 'error';\nthrow Error('Error');  // \u76f4\u63a5 Error \u662f\u6ca1\u6709\u95ee\u9898\u7684\nthrow new Error('Error');  // \u6709\u6ca1\u6709 new \u90fd\u662f\u4e00\u6837\u7684\nthrow Error;  // \u8fd9\u4e2a\u4e0d\u884c\uff0c\u62ec\u53f7\u8fd8\u662f\u8981\u6709\u7684\uff0c\u4f46\u662f\u8bed\u6cd5\u4e0a\u6ca1\u95ee\u9898\uff0c\u7406\u8bba\u4e0a\u53ef\u4ee5 throw \u4efb\u4f55\u4e1c\u897f\nthrow {firstName: 'Shao', lastName: 'Wang'};  // \u5bf9\u8c61\u4e5f\u884c\nthrow 12;\n\ntry {\n  throw 'Error';\n} catch (e) {\n  typeof e;  // 'string'\n  e instanceof Error;  // false\n}\n\ntry {\n   throw Error('Error');\n} catch (e) {\n   typeof e;  // 'object'\n   e instanceof Error;  // true\n}\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/NPM/","title":"NPM","text":"<p>Node Package Manager (NPM)</p> <ol> <li>How to list global packages?</li> </ol> <p><code>npm list -g --depth 0</code>. <code>depth 0</code> shows only the top level package, not the whole tree. It also shows the location of the packages.</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/%E5%BC%82%E6%AD%A5/","title":"\u5f02\u6b65\u8ba1\u7b97","text":"<p>https://nodejs.org/en/docs/guides/blocking-vs-non-blocking/</p> <ul> <li>\u540c\u6b65\uff1a\u963b\u585e</li> <li>\u5f02\u6b65\uff1a\u975e\u963b\u585e</li> </ul>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/%E5%BC%82%E6%AD%A5/#settimeout-setinterval","title":"<code>setTimeOut</code> \u548c <code>setInterval</code>","text":"<p><code>setTimeOut</code> \u5ef6\u8fdf\u51e0\u79d2\u949f\u540e\u518d\u6267\u884c\u4ee3\u7801\uff1a</p> <pre><code>console.log('A');\nsetTimeout(() =&gt; {console.log('B');}, 1000);  // \u5ef6\u8fdf 1000 \u6beb\u79d2\nconsole.log('C');\n</code></pre> <p>\u7ed3\u679c\u662f <pre><code>A\nC\nB\n</code></pre></p> <p>\u800c\u4e14 B \u662f\u8fc7\u4e00\u4f1a\u624d\u51fa\u73b0\u7684\u3002</p> <p><code>setInterval</code> \u5f88\u50cf\uff0c\u53ea\u4e0d\u8fc7\u5728\u7b2c\u4e00\u4e2a\u5ef6\u8fdf\u6267\u884c\u4e4b\u540e\uff0c\u6bcf\u9694\u4e00\u4f1a\u513f\u8fd8\u4f1a\u6267\u884c\u4ee5\u4e0b\u3002</p> <p>\u6ce8\u610f\u5f02\u6b65\u51fd\u6570\u4f1a\u5728\u8be5 context \u6267\u884c\u5b8c\u4e86\u518d\u6267\u884c\uff1a</p> <pre><code>let a = setTimeout(() =&gt; console.log('A'), 0);\nlet b = 3000000000;\nwhile (b &gt;= 0) {\n  b--;\n}\nconsole.log('B');\n</code></pre> <p>\u5148\u8f93\u51fa B \u518d\u8f93\u51fa A\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/%E5%BC%82%E6%AD%A5/#promise","title":"Promise","text":"<p>\u4f20\u7edf\u7528 callback \u7684\u5f02\u6b65\u51fd\u6570 <code>loadFileAsync(path, successCallback, failureCallback)</code>\uff0c\u4f1a\u5728\u51fd\u6570\u7ed3\u675f\u7684\u65f6\u5019\u8c03\u7528 callback\u3002</p> <p>\u66f4\u73b0\u4ee3\u7684\u7528 Promise \u7684\u5f02\u6b65\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a Promise\uff1a</p> <pre><code>const promise = loadFileAsyncPromise(path);\npromise.then(successCallback, failureCallback);\n\n// \u6216\u8005\u7b80\u5199\u4e3a\nloadFileAsyncPromise(path).then(successCallback, failureCallback);\n</code></pre> <p>\u53ef\u4ee5\u94fe\u5f0f\u8c03\u7528\u3002</p> <pre><code>// \u53ef\u4ee5\u94fe\u5f0f\u8c03\u7528\nloadFileAsyncPromise(path).then(successCallback, failureCallback).then(successCallback1, failureCallback1);\n\n// \u66f4\u8be6\u7ec6\u7075\u6d3b\u7684\u94fe\u5f0f\u8c03\u7528\nconst promise1 = f();\nconst promise2 = promise1.then(callback);\nconst promise3 = promise2.then(callback);\n\n// \u7528 catch \u548c\u76f4\u63a5\u5728 then \u91cc\u9762\u662f\u7b49\u4ef7\u7684\nf().then(successCallback).catch(failureCallback);\nf().then(successCallback, failureCallback);\n\n// \u8fd9\u4e24\u4e2a\u4e5f\u662f\u7b49\u4ef7\u7684\uff0cthen \u91cc\u9762\u7684 successCallback \u53ef\u4ee5 null\nf().then(null, failureCallback);\nf().catch(failureCallback);\n\n// catch \u4e4b\u540e\u8fd8\u80fd\u7ee7\u7eed then\nf().then(successCallback).catch(failureCallback).then(successCallback1);\n</code></pre> <p>\u6574\u4e2a\u94fe\u53ef\u4ee5\u53ea\u6709\u4e00\u4e2a <code>failureCallback</code>\uff08\u65e0\u8bba\u5728 <code>then</code> \u8fd8\u662f\u5728 <code>catch</code> \u4e2d\uff09\uff0c\u51fa\u73b0 reject \u4e4b\u540e\u4f1a\u4e00\u76f4\u5411\u4e0b\u5bfb\u627e\u7b2c\u4e00\u4e2a <code>failureCallback</code>\uff08<code>onReject</code>\uff09\uff0c\u5c31\u50cf\u662f\u6574\u4e2a <code>try</code> \u53ea\u6709\u4e00\u4e2a <code>catch</code> \u4e00\u6837\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/%E5%BC%82%E6%AD%A5/#promise_1","title":"Promise \u7684\u72b6\u6001","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/%E5%BC%82%E6%AD%A5/#asyncawait","title":"<code>async/await</code> \u8bed\u6cd5\u7cd6","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/%E5%BC%82%E6%AD%A5/#_2","title":"\u8fdb\u9636","text":"<p>Promise \u62d2\u7edd\u4e8b\u4ef6</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/React/","title":"React","text":"<p>React \u662f Facebook \u5f00\u53d1\u7684\u7528\u4e8e\u6784\u5efa UI \u7684 JavaScript \u5305\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/React/#_1","title":"\u7279\u70b9","text":"<ul> <li>\u58f0\u660e\u5f0f\u7684\uff1a\u76f4\u63a5\u58f0\u660e\u9700\u8981\u7684\u7ed3\u679c\uff0cReact \u4f1a\u5904\u7406 DOM</li> <li>\u57fa\u4e8e\u7ec4\u4ef6\u7684\uff1a\u5c01\u88c5\u3001\u590d\u7528</li> </ul>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/React/#_2","title":"\u8fd0\u884c\u4f4d\u7f6e\u548c\u65f6\u95f4","text":"<p>\u901a\u5e38\u5728\u5ba2\u6237\u7aef\uff08\u6d4f\u89c8\u5668\uff09\u8fd0\u884c\uff0c\u52a8\u6001\u751f\u6210\u9875\u9762\uff0c\u4e5f\u53ef\u4ee5\u5728\u670d\u52a1\u5668\u7aef\uff08Node.js\uff09\u751f\u6210\u9875\u9762\uff0c\u8fd8\u53ef\u4ee5\u5728\u7f16\u8bd1\u65f6\u7528\u4e8e\u751f\u6210\u9759\u6001\uff08\u670d\u52a1\u5668\u7aef\u9759\u6001\uff09\u9875\u9762\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/React/#reactreactdom-reactdomserver","title":"<code>React</code>\u3001<code>ReactDOM</code> \u548c <code>ReactDOMServer</code>","text":"<p>Facebook \u60f3\u5c06 React \u540c\u65f6\u7528\u4e8e\u7f51\u7ad9\u548c\u79fb\u52a8\u5e94\u7528\u5f00\u53d1\uff0c\u6240\u4ee5\u6709 React \u548c ReactDOM\uff0cReact \u7528\u4e8e\u58f0\u660e\u7ec4\u4ef6\uff0cReactDOM \u5b9e\u9645\u64cd\u4f5c\u7f51\u9875 DOM\u3002<code>ReactDOMServer</code> \u7528\u4e8e\u5728\u670d\u52a1\u5668\u7aef\u6e32\u67d3\u9875\u9762\u3002</p> <pre><code>function Greetings(props) {\n  return 'Hi';\n  // \u6216 React.createElement(component, props, children)\n  // \u4f8b\u5982 return React.createElement('div', null, 'Hi');\n}\n\nconst container = document.getElementById('greetings');\nReactDOM.render(React.createElement(Greetings), container);\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/React/React%20Router/","title":"React Router","text":"<p>\u6ce8\u610f</p> <p>\u5efa\u8bae\u65b0\u9879\u76ee\u4f7f\u7528 @reach/router\uff0c\u8be6\u89c1 React Router \u4f5c\u8005\u516c\u544a\u3002</p> <pre><code>import React from \"react\";\nimport {BrowserRouter as Router, Switch, Route, Link, useRouteMatch, useParams} from \"react-router-dom\";\n\nfunction App() {\n  return (\n      &lt;Router&gt;\n        &lt;Link to=\"/\"&gt;Home&lt;/Link&gt;\n        &lt;Link to=\"/about\"&gt;About&lt;/Link&gt;\n        &lt;Link to=\"/users\"&gt;Users&lt;/Link&gt;\n\n        &lt;Switch&gt;\n          &lt;Route path=\"/about\"&gt;About&lt;/Route&gt;\n          &lt;Route path=\"/users\"&gt;\n            &lt;Users/&gt;\n          &lt;/Route&gt;\n          &lt;Route path=\"/\"&gt;Home&lt;/Route&gt;\n        &lt;/Switch&gt;\n      &lt;/Router&gt;\n  );\n}\n\nfunction Users() {\n  // Route \u5339\u914d\u4fe1\u606f\n  const match = useRouteMatch();\n  return (\n      &lt;&gt;\n        &lt;Link to={`${match.url}/components`}&gt;Components&lt;/Link&gt;\n        &lt;Link to={`${match.url}/props-v-state`}&gt;Props v. State&lt;/Link&gt;\n\n        &lt;Switch&gt;\n          &lt;Route path={`${match.path}/:userId`}&gt;\n            &lt;User/&gt;\n          &lt;/Route&gt;\n          &lt;Route path={match.path}&gt;All users: ...&lt;/Route&gt;\n        &lt;/Switch&gt;\n      &lt;/&gt;\n  );\n}\n\nfunction User() {\n  let {userId} = useParams();\n  return &lt;&gt;User ID: {userId}&lt;/&gt;;\n}\n</code></pre> <p>\u628a\u6240\u6709\u7684\u5185\u5bb9\u5305\u5728 <code>&lt;Router&gt;</code> \u91cc\uff0c<code>&lt;Link&gt;</code> \u5c31\u5f53 <code>&lt;a&gt;</code> \u7528\u3002\u533a\u522b\u5728 <code>&lt;Switch&gt;</code>\uff0c\u5b83\u4f1a\u6e32\u67d3\u5f53\u4e2d\u7b2c\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684 <code>&lt;Route&gt;</code>\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/Redux/","title":"Redux","text":"<p>Redux \u662f\u4e00\u4e2a JavaScript \u7684\u5168\u5c40\u72b6\u6001\u7ba1\u7406\u5668\u3002\u867d\u7136\u4e3b\u8981\u662f\u548c React \u4e00\u8d77\u7528\uff0c\u4f46\u53ea\u8981\u662f JavaScript \u5c31\u80fd\u7528\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/Redux/#_1","title":"\u6838\u5fc3\u601d\u60f3","text":"<ol> <li>\u5168\u5c40\u72b6\u6001\uff08store\uff09</li> <li>\u72b6\u6001\u662f immutable \u7684\uff0c\u53ea\u80fd\u901a\u8fc7 action \u83b7\u5f97\u65b0\u7684\u72b6\u6001</li> <li>\u8fd9\u5c31\u662f reducer\uff0c\u5373 <code>(state, action) =&gt; newState</code>\uff0c\u6ce8\u610f reducer \u5e94\u5f53\u662f\u7eaf\u51fd\u6570\u7684\uff0c\u4e0d\u8981\u6709 side effect</li> </ol>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/Redux/#redux_1","title":"Redux \u76f8\u5173\u5305\u548c\u5de5\u5177","text":"<ol> <li>Redux Core: <code>redux</code></li> <li>Redux Toolkit: <code>@reduxjs/toolkit</code>\uff0c\u5305\u542b Redux Core\u3001Redux Thunk \u548c Reselect\uff0c\u6240\u4ee5\u53ef\u4ee5\u53ea\u6dfb\u52a0\u8fd9\u4e00\u4e2a\u4f9d\u8d56</li> <li>React-Redux: <code>react-redux</code></li> <li>Redux \u6d4f\u89c8\u5668\u6269\u5c55\uff08DevTools\uff09</li> </ol>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/Redux/#react","title":"\u62c6\u89e3 React \u7ec4\u4ef6","text":"<p>\u4e00\u4e2a\u5e38\u89c1\u7684 React \u7ec4\u4ef6\u6709\uff1a</p> <ol> <li>\u72b6\u6001</li> <li>\u89c6\u56fe\uff1a\u57fa\u4e8e\u72b6\u6001\u3001\u58f0\u660e\u5f0f\u3001UI</li> <li>\u52a8\u4f5c\uff1a\u66f4\u65b0\u72b6\u6001</li> </ol> <p></p> <p>\u6ce8\uff1a\u56fe\u6765\u81ea Redux \u5b98\u65b9\u6587\u6863</p> <p>\u4f46\u662f\u5f53\u591a\u4e2a\u7ec4\u4ef6\u9700\u8981\u5171\u4eab\u7ec4\u4ef6\u65f6\uff0c\u5c31\u4e0d\u8fd9\u4e48\u4f18\u96c5\u4e86\uff0cRedux \u8bd5\u56fe\u4f7f\u7528\u4e00\u4e2a\u5168\u5c40\u72b6\u6001\u6765\u89e3\u51b3\u95ee\u9898\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/Redux/#_2","title":"\u5177\u4f53\u6982\u5ff5","text":"<ol> <li><code>action</code>\uff1a\u6709 <code>type</code> \u7684\u7eaf\u5bf9\u8c61\uff0c<code>type</code> \u662f\u4e00\u4e2a\u5b57\u7b26\u4e32</li> <li><code>reducer</code>\uff1a<code>(state, action) =&gt; newState</code>\uff0c\u8fd9\u4e2a\u540d\u5b57\u6765\u81ea\u4e8e JavaScript \u7684 <code>Array.reduce()</code>\uff0c\u5fc5\u987b\u662f\u7eaf\u51fd\u6570</li> <li><code>store</code>\uff1a<code>store.dispatch(action)</code>\uff0c<code>store.subscribe(listener)</code>\uff0c<code>store.getState()</code></li> </ol>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/TypeScript/","title":"TypeScript","text":"<pre><code># \u5b89\u88c5\nnpm install -g typescript\n# \u7f16\u8bd1\uff08\u8f6c\u8bd1\uff09\ntsc hello.ts\n</code></pre> <pre><code>interface Book {\n  name: string;\n  author: Author;\n  publisher: Publisher;\n}\n\ninterface Author {\n  firstName: string;\n  lastName: string;\n}\n\ninterface Publisher {\n  name: string;\n  address: string;\n}\n\ntype Season = 'spring' | 'summer' | 'autumn' | 'winter'\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/webpack/","title":"webpack","text":"<p>\u9759\u6001\u6a21\u5757\u6253\u5305\u5668\uff08static module bundler\uff09</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/JavaScript/webpack/#_1","title":"\u6982\u5ff5","text":"<p>webpack \u628a JavaScript\u3001JSON\u3001CSS\u3001\u56fe\u7247\u7b49\u6587\u4ef6\u90fd\u89c6\u4e3a\u6a21\u5757\u3002</p> <ol> <li>Entry\uff1a\u6253\u5305\u5165\u53e3\u6587\u4ef6</li> <li>Output\uff1a\u8f93\u51fa\u6587\u4ef6</li> <li>Loader\uff1awebpack \u9ed8\u8ba4\u652f\u6301 JavaScript \u548c JSON \u6587\u4ef6\uff0c\u9700\u8981\u6dfb\u52a0\u989d\u5916\u7684 loader \u6765\u652f\u6301\u5176\u5b83\u6587\u4ef6</li> <li>Plugin\uff1a\u66f4\u591a\u529f\u80fd</li> <li>Mode\uff1adevelopment\u3001production \u6216 none</li> </ol>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/","title":"Python","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/#windows","title":"\u5347\u7ea7\u7248\u672c\uff08Windows\uff09","text":"<p>\u4ece 3.9.5 \u5347\u7ea7\u5230 3.9.6\uff0c\u5b89\u88c5\u7a0b\u5e8f\u4f1a\u81ea\u52a8\u5347\u7ea7\u3002\u4ece 3.9 \u5347\u7ea7\u5230 3.10\uff0c\u4e0d\u4f1a\u5347\u7ea7 3.9\uff0c\u800c\u662f\u53e6\u5916\u5b89\u88c5 3.10\uff0c\u4e24\u4e2a\u7248\u672c\u540c\u65f6\u5b58\u5728\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/#_1","title":"\u51b7\u77e5\u8bc6","text":"<ol> <li><code>for</code>\u3001<code>while</code> \u548c <code>try</code> \u90fd\u53ef\u4ee5\u63a5 <code>else</code>\uff0c\u8be6\u89c1 Python \u6587\u6863\u3002</li> <li>\u62c6\u5305 <code>*xs</code> \u548c <code>**d</code>\uff0c<code>xs</code> \u53ef\u4ee5\u662f list \u6216 tuple\uff0c<code>d</code> \u53ef\u4ee5\u662f dict\u3002</li> <li>\u5728 expression \u4e2d\u8d4b\u503c\u7528 <code>:=</code>\uff0c\u53eb walrus operator\uff0c\u4f8b\u5b50\uff1a     <pre><code>if (a := 1) &gt; 0:\n  print(a)\n</code></pre></li> </ol>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/pytest/","title":"pytest","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/pytest/#pytestmarkparametrize","title":"<code>@pytest.mark.parametrize</code>","text":"<pre><code>import pytest\n\n@pytest.mark.parametrize(\"test_input,expected\", [(\"3+5\", 8), (\"2+4\", 6), (\"6*9\", 42)])\ndef test_eval(test_input, expected):\n    assert eval(test_input) == expected\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Django/","title":"Django","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Django/#_1","title":"\u6838\u5fc3\u6982\u5ff5","text":"<ol> <li>\u6a21\u578b\uff08model\uff09</li> <li>\u89c6\u56fe\uff08view\uff09</li> <li>\u6a21\u677f\uff08template\uff09</li> </ol> <p>\u6ce8\uff1a\u56fe\u7247\u6765\u81ea MDN\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Django/Admin/","title":"\u7ba1\u7406\u754c\u9762\uff08Admin\uff09","text":"<p>\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5728 <code>admin.py</code> \u4e2d\u6ce8\u518c\u4e00\u4e0b\u6a21\u578b\uff1a</p> <pre><code>from django.contrib import admin\nimport models\n\nadmin.site.register(models.Article)\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Django/Admin/#modeladmin","title":"<code>ModelAdmin</code>","text":"<pre><code>from django.contrib import admin\nimport models\n\n@admin.register(models.Book)\nclass BookAdmin(admin.ModelAdmin):\n\n    # \u9009\u9879\n\n    actions\n    actions_on_top\n    actions_on_button\n    actions_selection_counter\n\n    date_hierarchy = 'publish_date'\n    empty_value_display\n\n    exclude  # \u4e0d\u8981\u663e\u793a\u67d0\u4e9b\u5b57\u6bb5\n    fields  # \u9009\u62e9\u8981\u663e\u793a\u7684\u5b57\u6bb5\uff0c\u5e76\u4e14\u6392\u5e8f\n    fieldsets  # \u7c7b\u4f3c fields\uff0c\u53ea\u662f\u53ef\u4ee5 grouping fields\n\n    filter_horizontal\n    filter_vertical\n\n    form\n    formfield_overrides\n\n    inlines\n\n    list_display  # \u54ea\u4e9b\u5728\u5217\u8868\u4e2d\u663e\u793a\n    list_display_links\n    list_editable\n    list_filter\n    list_max_show_all\n    list_per_page\n    list_select_related\n    ordering\n    paginator\n    search_fields\n    search_help_text\n    show_full_result_count\n    sortable_by\n\n    prepopulated_fields\n    preserve_fielters\n    radio_fields\n    autocomplete_fields\n    raw_id_fields\n    readonly_fields\n\n    save_as  # True, False\n    save_as_continue  # True, False\n    save_on_top\n\n    view_on_site = 'https://book.com/\u8f9e\u6d77/  # \u5728\u9875\u9762\u4e0a\u663e\u793a\u4e2a view on site \u7684\u6309\u94ae\uff0c\u8be5\u6309\u94ae\u7684 URL \u5c31\u662f\u8fd9\u4e2a\n\n    # \u65b9\u6cd5\n\n    def save_model()  # \u8986\u76d6\u6a21\u578b\u4fdd\u5b58\u903b\u8f91\n    def delete_model()\n    def delete_queryset()\n    def save_formset()\n    def save_related()\n    def get_queryset()\n    def response_add()\n    def response_change()\n    def response_delete()\n    def get_deleted_objects()\n\n    def get_list_display()\n    def get_list_display_links()\n    def get_list_filter()\n    def get_list_select_related()\n    def get_ordering()\n    def get_sortable_by()\n    def get_search_fields()\n    def get_search_results()\n    def get_paginator()\n\n    def get_changelist()\n    def get_changelist_form()\n    def get_changelist_formset()\n    def lookup_allowed()\n\n    def has_view_permission()\n    def has_add_permission()\n    def has_change_permission()\n    def has_delete_permission()\n    def has_module_permission()\n\n    def get_fields()\n    def get_fieldsets()\n    def get_exclude()\n    def get_autocomplete_fields()\n    def get_readonly_fields()\n    def get_prepopulated_fields()\n\n    def get_inlines()\n    def get_inline_instances()\n\n    def get_urls()\n\n    def get_form()\n    def get_formsets_with_inlines()\n    def formfield_for_foreignkey()\n    def formfield_for_manytomany()\n    def formfield_for_choice_field()\n    def get_formset_kwargs()\n    def get_changeform_initial_data()\n\n    def message_user()\n\n    # \u8fd9\u4e9b\u4e00\u822c\u662f\u7528\u6765\u63d0\u4f9b\u989d\u5916\u7684\u53c2\u6570\u7684\uff08extra_context\uff09\n    def add_view()\n    def change_view(self, request, object_id, form_url='', extra_context=None):\n        return super().change_view(request, object_id, form_url, extra_context={**extra_context, name='Shao'})\n    def changelist_view()\n    def delete_view()\n    def history_view()\n\n    class Media:\n        css = {}\n        js = {}\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Django/URL/","title":"URL \u6620\u5c04","text":"<p>\u5728 <code>urls.py</code> \u91cc\uff0c\u6620\u5c04 URL \u548c\u89c6\u56fe\uff08view\uff09\uff1a</p> <pre><code>from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    # int \u662f\u6570\u636e\u7c7b\u578b\uff0cyear \u662f URL \u53c2\u6570\u540d\u79f0\uff0cviews.year_archive \u662f\u89c6\u56fe\n    path('articles/&lt;int:year&gt;/', views.year_archive),\n    path('articles/&lt;int:year&gt;/&lt;int:month&gt;/', views.month_archive),\n    path('articles/&lt;int:year&gt;/&lt;int:month&gt;/&lt;int:pk&gt;/', views.article_detail),\n]\n</code></pre> <p>\u6240\u4ee5 <code>/articles/2005/05/39323/</code> \u4f1a\u8c03\u7528 <code>news.views.article_detail(request, year=2005, month=5, pk=39323)</code>\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Django/%E4%BA%8B%E5%8A%A1/","title":"\u4e8b\u52a1","text":"<p>Django \u9ed8\u8ba4\u662f autocommit \u7684\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Django/%E4%BA%8B%E5%8A%A1/#atomic","title":"\u624b\u52a8 atomic","text":"<p><code>django.db.transaction.atomic(using=None, savepoint=True, durable=False)</code></p> <p>Django \u4f1a\u521b\u5efa\u4e00\u4e2a transaction \u6216 savepoint \u6765\u4fdd\u8bc1 atomicity\u3002</p> <pre><code>from django.db import transaction\n\n# \u7528\u4f5c decorator\n@transaction.atomic\ndef viewfunc(request):\n    # This code executes inside a transaction.\n    do_stuff()\n\n# \u7528\u4f5c context manager\ndef viewfunc(request):\n    # This code executes in autocommit mode (Django's default).\n    do_stuff()\n\n    with transaction.atomic():\n        # This code executes inside a transaction.\n        do_more_stuff()\n</code></pre> <p>\u5982\u679c\u60f3\u4fdd\u8bc1 durable\uff0c\u5373 atomic \u5185\u90e8\u7684\u4e00\u65e6\u5728\u4ee3\u7801\u5185\u90e8 commit\uff0c\u5c31\u4e00\u5b9a\u4f1a\u63d0\u4ea4\u5230\u6570\u636e\u5e93\uff0c\u5219\u8bbe\u7f6e <code>durable=True</code>\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Django/%E4%BF%A1%E5%8F%B7/","title":"\u4fe1\u53f7","text":"<p>\u53c2\u8003\uff1aDjango \u6587\u6863</p> <p>Django \u5185\u7f6e\u4e00\u4e2a\u4fe1\u53f7\u5206\u53d1\u673a\u5236\uff0csender \u63d0\u9192 receiver \u4e8b\u4ef6\u6216\u884c\u52a8\u7684\u53d1\u751f\u3002Django \u8fd8\u5185\u7f6e\u4e00\u4e9b\u4fe1\u53f7\u5982\u6a21\u578b\u4fdd\u5b58\u3001\u6536\u5230\u8bf7\u6c42\u7b49\u3002</p> <pre><code># request_finished \u662f\u4e00\u4e2a\u4fe1\u53f7\nfrom django.core.signals import request_finished\n\n# Receiver \u51fd\u6570\ndef my_callback_1(sender, **kwargs):\n    print(\"Request finished!\")\n\n# \u6ce8\u518c receiver\nrequest_finished.connect(my_callback_1)\n\n# \u6216\u4f7f\u7528 @receiver\nfrom django.dispatch import receiver\n@receiver(request_finished)\ndef my_callback_2(sender, **kwargs):\n    print(\"Request finished!\")\n\n# \u6ce8\u9500 receiver\nrequest_finished.connect(my_callback_1)\nrequest_finished.connect(my_callback_2)\n</code></pre> <p>Info</p> <p>\u6ce8\u610f\u9632\u6b62\u91cd\u590d\uff0c\u8be6\u89c1 Django \u6587\u6863\u3002\u4e3b\u8981\u662f\u6ce8\u610f <code>ready()</code> \u548c <code>dispatch_uid</code>\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Django/%E4%BF%A1%E5%8F%B7/#_2","title":"\u81ea\u5b9a\u4e49\u4fe1\u53f7","text":"<pre><code>import django.dispatch\n\n# \u81ea\u5b9a\u4e49\u4fe1\u53f7 pizza_done\npizza_done = django.dispatch.Signal()\n\nclass PizzaStore:\n    def send_pizza(self, toppings, size):\n        # \u53d1\u9001 pizza_done \u4fe1\u53f7\n        pizza_done.send(sender=self.__class__, toppings=toppings, size=size)\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Django/%E4%BF%A1%E5%8F%B7/#_3","title":"\u6a21\u578b\u521b\u5efa\u3001\u4fdd\u5b58\u548c\u5220\u9664\u4fe1\u53f7","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Django/%E6%A8%A1%E5%9E%8B/","title":"\u6a21\u578b","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Django/%E6%A8%A1%E5%9E%8B/#_2","title":"\u5b9a\u4e49","text":"<p>\u5728 <code>models.py</code> \u4e2d\u5b9a\u4e49\u6a21\u578b\uff0c\u6a21\u578b\u90fd\u662f <code>django.db.models.Model</code> \u7684\u5b50\u7c7b\uff1a</p> <pre><code>from django.db import models\n\nclass Reporter(models.Model):\n    # \u5b9a\u4e49\u5b57\u6bb5\u7c7b\u578b\u548c\u53c2\u6570\n    full_name = models.CharField(max_length=70)\n\n    # \u5b9a\u4e49\u5b57\u7b26\u8868\u793a\n    def __str__(self):\n        return self.full_name\n\nclass Article(models.Model):\n    pub_date = models.DateField()\n    headline = models.CharField(max_length=200)\n    content = models.TextField()\n    # \u5916\u952e\uff0cArticle \u548c Reporter \u662f\u591a\u5bf9\u4e00\u5173\u7cfb\uff0c\u4e14\u89c4\u5b9a\u5220\u9664 Reporter \u65f6 \u5220\u9664\u5bf9\u5e94\u7684 Article\n    reporter = models.ForeignKey(Reporter, on_delete=models.CASCADE)\n\n    def __str__(self):\n        return self.headline\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Django/%E6%A8%A1%E5%9E%8B/#_3","title":"\u6570\u636e\u5b57\u6bb5","text":"<p>\u5e38\u89c1\u7684\u5b57\u6bb5\u7c7b\u578b\u6709\uff1a</p> <ul> <li><code>BinaryField</code></li> <li><code>BooleanField</code></li> <li><code>CharField</code><ul> <li><code>EmailField</code>\u3001<code>FilePathField</code>\u3001<code>URLField</code></li> </ul> </li> <li><code>TextField</code></li> <li><code>DateField</code>\u3001<code>DateTimeField</code>\u3001<code>DurationField</code>\u3001<code>TimeField</code></li> <li><code>DecimalField</code>\u3001<code>FloatField</code></li> <li><code>FileField</code><ul> <li><code>ImageField</code></li> </ul> </li> <li><code>JSONField</code></li> </ul> <p>\u8fd8\u6709\u4e0d\u5c11\u5b57\u6bb5\u7c7b\u578b\uff0c\u8bbe\u7f6e\u7279\u6b8a\u5b57\u6bb5\u65f6\u503c\u5f97\u770b\u770b\uff0c\u8bf4\u4e0d\u5b9a\u6709\u5bf9\u5e94\u7684\uff0c\u751a\u81f3\u8fd8\u80fd\u81ea\u5b9a\u4e49\u5b57\u6bb5\u7c7b\u578b\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Django/%E6%A8%A1%E5%9E%8B/#_4","title":"\u5173\u7cfb\u5b57\u6bb5","text":"<p>\u5173\u7cfb\u5b57\u6bb5\u6709\uff1a</p> <ol> <li><code>ForeignField</code>\uff1a\u591a\u5bf9\u4e00</li> <li><code>ManyToManyField</code>\uff1a\u591a\u5bf9\u591a</li> <li><code>OneToOneField</code>\uff1a\u4e00\u5bf9\u4e00</li> </ol> <p>\u6b64\u5904\u53ea\u4ee5 <code>ForeignField</code> \u4e3a\u4f8b\u7b80\u5355\u4ecb\u7ecd\u3002</p> <pre><code>from django.db import models\n\nclass Author(models.Model):\n    pass\n\nclass Book(models.Model):\n    # \u5916\u952e\u5230 Author\uff0c\u5220\u9664\u65f6 CASCADE\n    author = models.ForeignKey(to=Author, on_delete=models.CASCADE)\n</code></pre> <p><code>on_delete</code> \u53ef\u80fd\u7684\u503c\uff1a</p> <ul> <li><code>CASCADE</code>\uff1a<code>to</code> \u88ab\u5220\u9664\u65f6\uff0c\u8be5\u5bf9\u8c61\u4e5f\u88ab\u5220\u9664</li> <li><code>PROTECT</code>\uff1a\u9632\u6b62 <code>to</code> \u88ab\u5220\u9664</li> <li><code>RESTRICT</code>\uff1a\u6709\u70b9\u590d\u6742\uff0c\u89c1\u6587\u6863</li> <li><code>SET_NULL</code>\uff1a<code>to</code> \u88ab\u5220\u9664\u65f6\uff0c\u8bbe\u7f6e\u5916\u952e\u4e3a\u7a7a</li> <li><code>SET_DEFAULT</code>\uff1a<code>to</code> \u88ab\u5220\u9664\u65f6\uff0c\u8bbe\u7f6e\u5916\u952e\u4e3a\u9ed8\u8ba4\u503c</li> <li><code>SET()</code></li> <li><code>DO_NOTHING</code></li> </ul> <p>\u6ce8\u610f <code>on_delete</code> \u4e0d\u4f9d\u8d56\u6570\u636e\u5e93\u5b9e\u73b0\u800c\u662f\u4f9d\u8d56 Django \u5b9e\u73b0\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Django/%E6%A8%A1%E5%9E%8B/#_5","title":"\u5b57\u6bb5\u9009\u9879","text":"<p>\u4e00\u4e9b\u901a\u7528\u7684\u5b57\u6bb5\u9009\u9879\uff0c\u4e14\u90fd\u662f\u53ef\u9009\u7684\u3002</p> \u9009\u9879 \u9ed8\u8ba4\u503c \u8bf4\u660e <code>blank</code> <code>False</code> \u662f\u5426\u53ef\u4ee5\u4e3a\u7a7a\uff0c\u8fd9\u4e2a\u53ea\u662f\u8868\u5355\u7aef <code>null</code> <code>False</code> \u7a7a\u503c\u5b9e\u9645\u5b58\u50a8\u4e3a <code>NULL</code>\uff0c\u4f8b\u5982\u5b57\u7b26\u4e32\u9ed8\u8ba4\u7a7a\u503c\u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0c\u5c31\u4e0d\u5efa\u8bae\u8bbe\u7f6e <code>null</code> \u4e3a <code>True</code> <code>choices</code> \u63d0\u4f9b\u9009\u9879\uff0c\u7c7b\u4f3c\u679a\u4e3e\uff0c\u8be6\u89c1\u6587\u6863 <code>db_column</code> \u6570\u636e\u5e93\u5217\u540d <code>db_index</code> \u4e3a\u8be5\u5b57\u6bb5\u521b\u5efa\u7d22\u5f15 <code>db_tablespace</code> \u5b57\u6bb5\u7d22\u5f15\u4f7f\u7528\u7684\u7684\u8868\u7a7a\u95f4 <code>default</code> \u5b57\u6bb5\u9ed8\u8ba4\u503c\uff0c\u53ef\u4ee5\u662f\u4e00\u4e2a\u51fd\u6570 <code>editable</code> <code>True</code> \u82e5\u4e3a\u5426\uff0c\u5219\u4f1a\u8df3\u8fc7\u6a21\u578b\u9a8c\u8bc1\uff0c\u4e5f\u4e0d\u4f1a\u5728\u7ba1\u7406\u754c\u9762\u6216 <code>ModelForm</code> \u4e2d\u51fa\u73b0 <code>error_messages</code> \u81ea\u5b9a\u4e49\u9519\u8bef\u4fe1\u606f <code>help_text</code> \u5e2e\u52a9\u6587\u672c <code>primary_key</code> \u8bbe\u7f6e\u4e3a\u6a21\u578b\u4e3b\u952e\uff0c\u4e14 <code>null=False, unique=True</code> <code>unique</code> \u4fdd\u8bc1\u552f\u4e00\u6027\uff0c\u4e14\u81ea\u52a8\u521b\u5efa\u7d22\u5f15 <code>unique_for_date</code> \u53e6\u4e00\u4e2a\u5b57\u6bb5\uff08<code>DateField</code> \u6216 <code>DateTimeField</code>\uff09\u7684\u540d\u79f0\uff0c\u4ece\u800c\u4fdd\u8bc1\u8be5\u5b57\u6bb5\u548c\u53e6\u4e00\u4e2a\u5b57\u6bb5\u7684\u65e5\u671f\u90e8\u5206\u4e0d\u540c\uff0c\u6ce8\u610f\u65f6\u95f4\u90e8\u5206\u5ffd\u7565\u54e6 <code>unique_for_month</code> \u540c\u4e0a <code>unique_for_year</code> \u540c\u4e0a <code>verbose_name</code> \u4eba\u7c7b\u53ef\u8bfb\u540d\u79f0\uff0c\u4e0d\u8bbe\u7f6e\u7684\u8bdd Django \u4f1a\u81ea\u52a8\u8bbe\u7f6e <code>validators</code> \u9a8c\u8bc1\u5668"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Django/%E6%A8%A1%E5%9E%8B/#meta","title":"\u5143\u6570\u636e Meta","text":"<p>\u5728\u6a21\u578b\u4e2d\u5d4c\u5957\u4e00\u4e2a Meta \u7c7b\uff0c\u7528\u4e8e\u5b9a\u4e49\u6a21\u578b\u7684\u5143\u6570\u636e\uff0c\u5982\u6392\u5e8f\u3001\u6570\u636e\u5e93\u8868\u540d\u7b49\uff0c\u89c1\u6587\u6863\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Django/%E6%A8%A1%E5%9E%8B/#_6","title":"\u4f7f\u7528","text":"<pre><code># \u4ee3\u7801\u9ad8\u4eae\u4e0d\u592a\u5bf9\uff0c\u4e0d\u8981\u5728\u610f\n\n# \u5bfc\u5165\u6a21\u578b\n&gt;&gt;&gt; from news.models import Article, Reporter\n\n# \u5168\u90e8 Reporter\n&gt;&gt;&gt; Reporter.objects.all()\n&lt;QuerySet []&gt;\n\n# \u521b\u5efa Reporter \u5e76\u4fdd\u5b58\n&gt;&gt;&gt; r = Reporter(full_name='John Smith')\n&gt;&gt;&gt; r.save()\n\n&gt;&gt;&gt; Reporter.objects.all()\n&lt;QuerySet [&lt;Reporter: John Smith&gt;]&gt;\n\n&gt;&gt;&gt; r.id\n1\n&gt;&gt;&gt; r.full_name\n'John Smith'\n\n# \u6839\u636e\u5b57\u6bb5\u67e5\u8be2\n&gt;&gt;&gt; Reporter.objects.get(id=1)\n&lt;Reporter: John Smith&gt;\n&gt;&gt;&gt; Reporter.objects.get(full_name__startswith='John')\n&lt;Reporter: John Smith&gt;\n&gt;&gt;&gt; Reporter.objects.get(full_name__contains='mith')\n&lt;Reporter: John Smith&gt;\n&gt;&gt;&gt; Reporter.objects.get(id=2)\nTraceback (most recent call last):\n    ...\nDoesNotExist: Reporter matching query does not exist.\n\n# \u521b\u5efa Article \u5e76\u4fdd\u5b58\uff0c\u6ce8\u610f reporter \u662f\u4e4b\u524d\u7684 r\n&gt;&gt;&gt; from datetime import date\n&gt;&gt;&gt; a = Article(pub_date=date.today(), headline='Django is cool',\n...     content='Yeah.', reporter=r)\n&gt;&gt;&gt; a.save()\n\n&gt;&gt;&gt; Article.objects.all()\n&lt;QuerySet [&lt;Article: Django is cool&gt;]&gt;\n\n# \u4ece a \u5f97\u5230 reporter r\n&gt;&gt;&gt; r = a.reporter\n&gt;&gt;&gt; r.full_name\n'John Smith'\n\n# \u67e5\u8be2 r \u7684\u6240\u6709 Article \u5f97\u5230 article a\n&gt;&gt;&gt; r.article_set.all()\n&lt;QuerySet [&lt;Article: Django is cool&gt;]&gt;\n\n# \u67e5\u8be2\u6240\u6709 reporter \u7684\u5168\u540d\u4ee5 John \u5f00\u59cb\u7684 Article\n&gt;&gt;&gt; Article.objects.filter(reporter__full_name__startswith='John')\n&lt;QuerySet [&lt;Article: Django is cool&gt;]&gt;\n\n# \u66f4\u6539 r \u7684\u5168\u540d\n&gt;&gt;&gt; r.full_name = 'Billy Goat'\n&gt;&gt;&gt; r.save()\n\n# \u5220\u9664 r\n&gt;&gt;&gt; r.delete()\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Django/%E6%A8%A1%E5%9E%8B/#migration","title":"Migration \u76f8\u5173\u547d\u4ee4","text":"<pre><code>python manage.py makemigrations\npython manage.py sqlmigrate\npython manage.py migrate &lt;app_label&gt; &lt;migration_name&gt; [--backwards]\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Django/%E7%A7%BB%E9%99%A4%E5%BA%94%E7%94%A8/","title":"\u79fb\u9664\u5e94\u7528","text":"<p>Stack Overflow \u6211\u7684\u56de\u7b54\uff1ahttps://stackoverflow.com/a/69908180/7011476</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Django/%E8%A7%86%E5%9B%BE/","title":"\u89c6\u56fe","text":"<p>\u6700\u57fa\u672c\u7684\u89c6\u56fe\uff08View\uff09\uff0c\u63a5\u53d7\u4e00\u4e2a <code>HttpRequest</code> \u5bf9\u8c61\uff0c\u8fd4\u56de\u4e00\u4e2a <code>HttpResponse</code> \u5bf9\u8c61\uff1a</p> <pre><code>from django.http import HttpResponse\nimport datetime\n\ndef current_datetime(request):\n    now = datetime.datetime.now()\n    html = \"&lt;html&gt;&lt;body&gt;It is now %s.&lt;/body&gt;&lt;/html&gt;\" % now\n    return HttpResponse(html)\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Django/%E8%A7%86%E5%9B%BE/#httprequest","title":"<code>HttpRequest</code>","text":"<p>\u4f2a Python \u4ee3\u7801\u793a\u610f\uff1a</p> <pre><code>class HttpRequest:\n    self.scheme  # 'http', 'https'\n    self.body  # \u539f\u59cb body\uff0c\u662f bytestring\n    self.path  # \u8bf7\u6c42\u8def\u5f84\uff0c\u4e0d\u542b scheme\u3001domain \u6216 query string\uff0c\u5982 \"/music/bands/the_beatles/\"\n    self.path_info\n    self.method  # 'GET', 'POST'\n    self.encoding\n    self.content_type  # MIME \u7c7b\u578b\n    self.content_params\n    self.GET  # QueryDict \u5bf9\u8c61\uff0c\u662f URL \u4e2d ? \u540e\u7684\u90e8\u5206\n    self.POST  # \u540c\u4e0a\n    self.COOKIES\n    self.FILES\n    self.META\n    self.headers\n    self.resolver_match\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Django/%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/","title":"\u9759\u6001\u6587\u4ef6","text":"<pre><code>STATIC_URL  # Django \u4f1a\u53bb\u8be5 URL \u83b7\u53d6\u9759\u6001\u6587\u4ef6\uff0c\u53ef\u4ee5\u662f\u76f8\u5bf9\u7684\uff08\u672c\u7ad9\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u7edd\u5bf9\u7684\uff08\u5916\u6218\uff09\u3002\u4f46\u8fd9\u548c\u9759\u6001\u6587\u4ef6\u5b9e\u9645\u5728\u54ea\u91cc host \u6ca1\u5173\u7cfb\n\n# \u4ee5\u4e0b\u662f\u5728 Django \u4e2d\u7ec4\u7ec7\u548c\u6536\u96c6\u9759\u6001\u6587\u4ef6\uff0c\u5982\u4e0a\u6240\u8ff0\uff0c\u8be5\u8fc7\u7a0b\u53ef\u4ee5\u5b8c\u5168\u4e0d\u6d89\u53ca Django\uff0c\u800c\u53ea\u63d0\u4f9b\u7ed9 Django \u9759\u6001\u6587\u4ef6 URL\n# \u8fd9\u4e9b\u662f\u7531 django.contrib.staticfiles \u5b9e\u73b0\u7684\uff0cstaticfiles \u7684\u529f\u80fd\u5c31\u662f\u6536\u96c6\u9759\u6001\u6587\u4ef6\nSTATIC_ROOT  # \u5982\u914d\u7f6e\u4e86\u9759\u6001\u6587\u4ef6\u6536\u96c6\uff0c\u5219\u9759\u6001\u6587\u4ef6\u4f1a\u88ab\u6536\u96c6\u5230\u8fd9\u4e2a\u76ee\u5f55\nSTATICFILES_DIRS  # \u9759\u6001\u6587\u4ef6\u5728\u8ba1\u7b97\u673a\u5185\u5b58\u50a8\u7684\u4f4d\u7f6e TODO\nSTATICFILES_STORAGE  # \u7528\u4e8e\u5b58\u50a8\uff08\u5230 STATIC_ROOT\uff09\u9759\u6001\u6587\u4ef6\u7684\u6587\u4ef6\u5b58\u50a8\u5f15\u64ce TODO\nSTATICFILES_FINDERS  # \u6536\u96c6\u7b56\u7565 TODO\n</code></pre> <pre><code>TODO:\n    MEDIA_ROOT\n    MEDIA_URL\n    Form assets\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/Flask/","title":"Flask","text":"<pre><code>from flask import Flask\n\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef hello_world():\n    return \"&lt;p&gt;Hello, World!&lt;/p&gt;\"\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E4%BF%A1%E5%8F%B7/","title":"\u4fe1\u53f7","text":"<p>\u4f18\u96c5\u5730\u9000\u51fa\u3002</p> <pre><code>while True:\n    pass\n</code></pre> <pre><code>python ./while_true.py\nTraceback (most recent call last):\n  File \"C:\\Users\\ws\\Documents\\Dev\\projects\\zendesk_search\\search\\while_true.py\", line 2, in &lt;module&gt;\n    pass\nKeyboardInterrupt\n</code></pre> <pre><code>import signal\nimport sys\n\n\ndef sigint_handler(signals, frame_type):\n    print('Bye.')\n    sys.exit()\n\n\nsignal.signal(signal.SIGINT, sigint_handler)\n\nwhile True:\n    pass\n</code></pre> <pre><code>python ./while_true.py\nBye.\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/","title":"\u5305\u7ba1\u7406\u5668","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/#pip","title":"pip","text":"<p>pip \u662f Python \u7684\u9ed8\u8ba4\u5305\u5b89\u88c5\u5668\uff0c\u9ed8\u8ba4\u4ece PyPI\uff08Python Package Index\uff09\u83b7\u53d6\u5305\uff0c\u4ed6\u4eec\u90fd\u662f PyPA\uff08Python Packaging Authority\uff09\u7684\u3002</p> <pre><code># \u5b89\u88c5\u5305\uff08\u6700\u65b0\u7248\u672c\uff09\npip install &lt;package&gt;\n# \u6709\u65f6\u5019 PATH \u91cc pip \u5bf9\u5e94\u7684\u4e0d\u662f PATH \u91cc\u7684 python\uff0c\u7528 python -m \u8c03\u7528\npython -m pip install &lt;package&gt;\n\n# \u6307\u5b9a\u7248\u672c\npip install &lt;package&gt; == 1.0.4\npip install &lt;package&gt; &gt;= 1.0.4\npip install &lt;package&gt; ~= 1.0.4  # \u517c\u5bb9\n\n# \u7528 requirements.txt \u5b89\u88c5\u9700\u6c42\npip install -r requirements.txt\n\n# \u66f4\u65b0\u5305\npip install --upgrade &lt;package&gt;\n\n# \u5378\u8f7d\u5305\npip uninstall &lt;package&gt;\n\n# \u5217\u51fa\u6240\u6709\u5df2\u5b89\u88c5\u7684\u5305\npip list\n# \u663e\u793a\u6240\u6709\u4e0d\u662f\u6700\u65b0\u7684\u5305\npip list --outdated\n# \u663e\u793a\u4e0d\u662f\u522b\u7684\u5305\u7684\u4f9d\u8d56\u7684\u5305\npip list --not-required\n\n# \u663e\u793a\u67d0\u5df2\u5b89\u88c5\u7684\u5305\u7684\u4fe1\u606f\npip show &lt;package&gt;\n\n# \u66f4\u65b0 pip \u81ea\u8eab\npython -m pip install --upgrade pip\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/#poetry","title":"Poetry","text":"<p>Poetry \u662f\u53e6\u4e00\u4e2a\u5305\u7ba1\u7406\u5668\u3002</p> <p>Poetry \u4f1a\u81ea\u52a8\u521b\u5efa virtualenv\uff0c\u6240\u6709\u7684\u6267\u884c\u90fd\u662f\u5728\u8fd9\u4e2a virtualenv \u91cc\u3002\u6b64\u5916\u8fd8\u6709\u7c7b\u4f3c NPM \u7684 lock \u673a\u5236\u3002</p> <pre><code># \u5b89\u88c5 Poetry\uff08Unix\uff09\ncurl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -\n# \u5b89\u88c5 Poetry\uff08Windows\uff09\n(Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py -UseBasicParsing).Content | python -\n# \u4e0d\u63a8\u8350 pip install Poetry\n\n# \u66f4\u65b0 Poetry\npoetry self upgrade\n\n# \u5728\u5df2\u6709\u7684\u9879\u76ee\u4e2d\u542f\u7528 Poetry\uff0c\u521b\u5efa pyproject.toml\npoetry init\n\n# \u6dfb\u52a0\u4f9d\u8d56\npoetry add &lt;package&gt;\n\n# \u5728\u521b\u5efa\u7684 virtualenv \u4e2d\u8fd0\u884c\npoetry run &lt;command&gt;\n# \u8fd0\u884c pyproject.toml \u4e2d\u5b9a\u4e49\u7684 script\npoetry run &lt;script&gt;\n# \u5728\u521b\u5efa\u7684 virtualenv \u4e2d\u4f7f\u7528\u4ea4\u4e92\u5f0f shell\npoetry shell\n\n# \u67e5\u770b\u914d\u7f6e\npoetry config --list\n\n# \u5217\u51fa\u6240\u6709\u73af\u5883\npoetry env lish --full-path\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/#_2","title":"\u9677\u9631","text":"<p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c<code>poetry env use</code> \u53ea\u662f\u9009\u62e9\u4e0d\u540c\u7684 Python \u7248\u672c\u3002\u6bd4\u65b9\u8bf4\uff0c<code>poetry env list</code> \u7684\u8f93\u51fa\u53ef\u80fd\u662f\uff1a</p> <pre><code>test-O3eWbxRl-py2.7\ntest-O3eWbxRl-py3.6\ntest-O3eWbxRl-py3.7 (Activated)\n</code></pre> <p>\u8fd9\u91cc\u9762\u7684\u7684 hash \u503c\u90fd\u662f O3eWbxRl\uff0c\u53ea\u662f Python \u7248\u672c\u4e0d\u540c\u3002\u4f30\u8ba1 hash \u503c\u662f\u57fa\u4e8e\u9879\u76ee\u8def\u5f84\u7684\uff0c\u56e0\u4e3a\u540c\u4e00\u4efd\u4ee3\u7801\u5728\u4e0d\u540c\u4f4d\u7f6e\u7684 hash \u503c\u4e0d\u540c\uff0c\u800c\u4e14\u540c\u4e00\u4efd\u4ee3\u7801\u7684 env \u4e0d\u80fd\u7528\u4e8e\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u7684\u540c\u4e00\u4efd\u4ee3\u7801\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/","title":"\u5355\u5143\u6d4b\u8bd5","text":"<ul> <li>Python \u5355\u5143\u6d4b\u8bd5 - PegasusWang | \u77e5\u4e4e</li> <li>Python Tutorial: Unit Testing Your Code with the unittest Module - Corey Schafer | YouTube</li> </ul> <p>\u603b\u7684\u6765\u8bf4\uff0c\u5355\u5143\u6d4b\u8bd5\u6709\u4ee5\u4e0b\u597d\u5904\uff1a</p> <ol> <li>\u786e\u4fdd\u4ee3\u7801\u8d28\u91cf</li> <li>\u6539\u5584\u4ee3\u7801\u8bbe\u8ba1\uff0c\u96be\u4ee5\u6d4b\u8bd5\u7684\u4ee3\u7801\u4e00\u822c\u662f\u8bbe\u8ba1\u4e0d\u591f\u7b80\u6d01\u7684\u4ee3\u7801\u3002</li> <li>\u4fdd\u8bc1\u91cd\u6784\u4e0d\u4f1a\u5f15\u5165\u65b0\u95ee\u9898\uff0c\u4ee5\u51fd\u6570\u4e3a\u5355\u4f4d\u8fdb\u884c\u91cd\u6784\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u91cd\u65b0\u8dd1\u6d4b\u8bd5\u5c31\u57fa\u672c\u53ef\u4ee5\u4fdd\u8bc1\u91cd\u6784\u6ca1\u5f15\u5165\u65b0\u95ee\u9898\u3002</li> </ol> <p>\u5e38\u7528\u7684\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\u6709 unittest\uff08Python \u5185\u7f6e\uff09 \u548c pytest\u3002pytest \u66f4\u7b80\u5355\u76f4\u89c2\uff0c\u4f46 unittest \u4e5f\u4e0d\u7b97\u592a\u96be\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/#unittest","title":"unittest","text":"<p>TODO</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/#pytest","title":"pytest","text":"<p>pytest \u6700\u5927\u7684\u7279\u70b9\u662f\u76f4\u63a5\u7528 <code>assert</code>\uff0c\u6bd4\u8f83\u7b80\u6d01\u76f4\u89c2\u3002</p> <pre><code># \u6d4b\u8bd5\u4e00\u4e2a module\npytest &lt;module&gt;\n# \u6d4b\u8bd5\u4e00\u4e2a directory\npytest &lt;directory&gt;\npytest .\n</code></pre> <pre><code># test_pytest.py\n# \u56e0\u4e3a\u8fd9\u4e2a\u6587\u4ef6\u540d\u662f test_&lt;something&gt;.py\uff0c\u6240\u4ee5\u4f1a\u88ab pytest \u81ea\u52a8\u5305\u542b\u5230\u6d4b\u8bd5\u4e2d\ndef add(a: float, b: float) -&gt; float:\n    return a + b\ndef test_add():\n    assert add(1, 2) == 3  ## \u76f4\u63a5 assert\n\n# \u7528\u7c7b\u7ec4\u7ec7\u8d77\u6765\nclass TestAdd:\n    def test_1(self):\n        assert add(1, 2) == 3\n    def test_2(self):\n        assert add(2, 3) == 5\n\nimport pytest\ndef just_raise():\n    raise Exception\ndef test_raise():\n    with pytest.raises(Exception):  # \u6d4b\u8bd5 raise\n        just_raise()\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E6%96%87%E4%BB%B6/","title":"\u6587\u4ef6","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E6%96%87%E4%BB%B6/#_2","title":"\u8bfb\u5199","text":"<p><code>open()</code> \u662f Python \u81ea\u5e26\u7684\u51fd\u6570\uff0c\u7528\u4e8e\u8bfb\u5199\u6587\u4ef6\u3002</p> <pre><code>with open('/home/ws/some/file.md', 'r') as f:\n    content = f.read()\n</code></pre> <p>\u6a21\u5f0f\uff1a</p> <ul> <li>\u8bfb\u5199<ul> <li><code>r</code>\uff1aread\uff0c\u8bfb\uff08\u9ed8\u8ba4\uff09\uff0c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u62a5\u9519</li> <li><code>w</code>\uff1awrite\uff0c\u5199\uff0c\u5148\u6e05\u7a7a\u6587\u4ef6\uff0c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u6587\u4ef6</li> <li><code>a</code>\uff1aappend\uff0c\u7eed\u5199\uff0c\u4e0d\u6e05\u7a7a\u6587\u4ef6\uff0c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u6587\u4ef6\uff0c\u9ed8\u8ba4\u5728\u539f\u6587\u540e\u9762\u63a5\u7740\u5199\uff0c\u4e5f\u53ef\u4ee5\u5728\u6307\u5b9a\u4f4d\u7f6e\u5f00\u59cb\u5199</li> <li><code>x</code>\uff1acreate\uff0c\u521b\u5efa\uff0c\u82e5\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u62a5\u9519</li> </ul> </li> <li><code>+</code>\uff1a\u8bfb\u4e14\u5199\uff0c\u8fd9\u4e2a\u4e0d\u80fd\u5355\u72ec\u5b58\u5728\uff0c\u8981\u52a0\u5728 <code>r</code>\u3001<code>w</code>\u3001<code>a</code> \u6216 <code>x</code> \u540e\u9762<ul> <li><code>r+</code> \u548c <code>w+</code> \u533a\u522b\u662f <code>w+</code> \u4f1a\u6e05\u7a7a\u6587\u4ef6\uff0c\u90fd\u662f\u4ece\u5934\u5199</li> <li><code>r+</code> \u548c <code>a+</code> \u533a\u522b\u662f <code>a+</code> \u4ece\u540e\u9762\u5f00\u59cb\u5199</li> </ul> </li> <li>\u6587\u672c/\u4e8c\u8fdb\u5236<ul> <li><code>b</code>\uff1a\u4e8c\u8fdb\u5236\u6a21\u5f0f</li> <li><code>t</code>\uff1a\u6587\u672c\u6a21\u5f0f\uff08\u9ed8\u8ba4\uff09</li> </ul> </li> </ul>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E6%96%87%E4%BB%B6/#path","title":"\u8def\u5f84 Path","text":"<p><code>os.path</code> \u548c <code>pathlib</code> \u90fd\u53ef\u4ee5\u5904\u7406\u8def\u5f84\u3002<code>pathlib</code> \u662f\u9762\u5bf9\u5bf9\u8c61\u7684\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E6%96%87%E4%BB%B6/#ospath","title":"<code>os.path</code>","text":"<pre><code>&gt;&gt;&gt; from os.path import *\n&gt;&gt;&gt; p = '/home/ws/simple.file.json'\n&gt;&gt;&gt; abspath(p)  # \u7edd\u5bf9\u8def\u5f84\n'C:\\\\home\\\\ws\\\\simple.file.json'\n&gt;&gt;&gt; basename(p)  # \u6587\u4ef6\u540d\n'simple.file.json'\n&gt;&gt;&gt; dirname(p)  # \u76ee\u5f55\n'/home/ws'\n&gt;&gt;&gt; join('anything', p)  # \u62fc\u63a5\u4e24\u4e2a\u8def\u5f84\n'/home/ws/simple.file.json'\n&gt;&gt;&gt; join('c:', p)\n'c:/home/ws/simple.file.json'\n&gt;&gt;&gt; join('c:\\\\', p)\n'c:/home/ws/simple.file.json'\n&gt;&gt;&gt; join(p, '.js')\n'/home/ws/simple.file.json\\\\.js'\n&gt;&gt;&gt; split(p)  # \u76ee\u5f55 + \u6587\u4ef6\u540d\n('/home/ws', 'simple.file.json')\n&gt;&gt;&gt; splitdrive(p) # \u786c\u76d8\u540d + \u8def\u5f84\n('', '/home/ws/simple.file.json')\n&gt;&gt;&gt; splitext(p)  # \u8def\u5f84 + \u6269\u5c55\u540d\n('/home/ws/simple.file', '.json')\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E6%96%87%E4%BB%B6/#pathlib","title":"<code>pathlib</code>","text":"<pre><code>&gt;&gt;&gt; from pathlib import Path\n&gt;&gt;&gt; Path(p)  # \u81ea\u52a8\u6784\u5efa\u8def\u5f84\nWindowsPath('/home/ws/simple.file.json')\n&gt;&gt;&gt; Path(p).name  # \u6587\u4ef6/\u8def\u5f84\u540d\n'simple.file.json'\n&gt;&gt;&gt; Path(p).stem  # \u6587\u4ef6\u540d\u9664\u53bb\u6700\u540e\u4e00\u4e2a\u6269\u5c55\u540d\n'simple.file'\n&gt;&gt;&gt; Path(p).suffix  # \u6269\u5c55\u540d\n'.json'\n&gt;&gt;&gt; Path(p).suffixes  # \u6240\u6709\u6269\u5c55\u540d\n['.file', '.json']\n&gt;&gt;&gt; 'c:' / Path(p)  # \u76f4\u63a5\u7528 / \u7b26\u53f7\u62fc\u63a5\u8def\u5f84\nWindowsPath('c:/home/ws/simple.file.json')\n&gt;&gt;&gt; with Path('\u57fa\u7840.md').open() as f: f  # Path.open()\n...\n&lt;_io.TextIOWrapper name='\u57fa\u7840.md' mode='r' encoding='cp1252'&gt;\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E6%97%B6%E9%97%B4/","title":"\u65f6\u95f4","text":"<p>Python \u4e2d\u6709\u51e0\u4e2a\u548c\u65f6\u95f4\u76f8\u5173\u7684\u5e93\uff1a</p> <ol> <li>\u5185\u7f6e<ol> <li><code>time</code></li> <li><code>datetime</code></li> <li><code>calendar</code></li> <li><code>zoneinfo</code></li> </ol> </li> <li>CPython \u56e2\u961f\u7ef4\u62a4\u7684 PyPI \u5e93<ol> <li><code>tzdata</code></li> </ol> </li> <li>\u7b2c\u4e09\u65b9\u5e93<ol> <li>dateutil\uff1aPython \u5b98\u65b9\u63a8\u8350\uff0c\u6700\u5b8c\u5584</li> </ol> </li> </ol>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E6%97%B6%E9%97%B4/#time","title":"<code>time</code>","text":"<p>\u4e3b\u8981\u4ee5 epoch \u79d2\u6570\u4e3a\u6838\u5fc3\u3002</p> <pre><code>import time\n\n# \u663e\u793a\u5f53\u524d epoch \u79d2\u6570\uff0c\u5982 1631621300.4041824\ntime.time()\n# \u663e\u793a\u5f53\u524d UTC \u65f6\u95f4\ntime.gmtime()\n# \u8fd4\u56de\u8fd9\u4e2a\uff0c\u6ce8\u610f\u8fd9\u4e2a\u65f6\u6ca1\u6709\u65f6\u533a\u4fe1\u606f\u7684\uff0c\u7cbe\u5ea6\u4e5f\u4e0d\u662f\u6700\u9ad8\uff0c\u53ea\u5230\u79d2\ntime.struct_time(\n    tm_year=2021,\n    tm_mon=9,\n    tm_mday=14,\n    tm_hour=12,\n    tm_min=7,\n    tm_sec=44,\n    tm_wday=1,\n    tm_yday=257,\n    tm_isdst=0  # \u662f\u5426\u662f DST\uff08Daylight Saving Time\uff09\n)\n# \u672c\u5730\u65f6\u95f4\u7248\u672c\uff0c\u4e5f\u6ca1\u6709\u65f6\u533a\u4fe1\u606f\u54e6\ntime.localtime()\n\n# \u5f53\u524d\u7ebf\u7a0b sleep 12 \u79d2\ntime.sleep(12)\n</code></pre> <p><code>time</code> \u5e93\u8fd8\u6709\u5f88\u591a\u548c CPU \u65f6\u949f\u3001\u7ebf\u7a0b\u65f6\u95f4\u6709\u5173\u7684\u51fd\u6570\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E6%97%B6%E9%97%B4/#datetime","title":"<code>datetime</code>","text":"<p>\u66f4\u591a\u6709\u5173\u65e5\u671f\u548c\u65f6\u95f4\u7684\u529f\u80fd\uff0c\u6ce8\u610f\u8fd9\u91cc\u90fd\u662f\u7406\u60f3\u5316\u7684\u65f6\u95f4\uff0c\u5373\u5047\u5b9a\u6bcf\u5929\u90fd\u662f 24 \u00d7 60 \u00d7 60 \u79d2\uff0c\u4e0d\u5b58\u5728\u95f0\u79d2\u7b49\uff0c\u66f4\u522b\u8bf4\u76f8\u5bf9\u8bba\u6548\u5e94\u4e86\u3002\ud83d\ude0e</p> <p>\u5305\u542b\u5982\u4e0b\u7c7b\uff08\u5d4c\u5957\u8868\u793a\u7ee7\u627f\u5173\u7cfb\uff09\uff1a</p> <ol> <li><code>datetime.time</code>\uff1a\u65f6\u3001\u5206\u3001\u79d2\u3001\u5fae\u79d2\uff08microsecond\uff0c\u03bcs\uff0c10<sup>\u22126</sup> \u79d2\u3001\u65f6\u533a\u4fe1\u606f\uff09</li> <li><code>datetime.date</code>\uff1a\u5e74\u3001\u6708\u3001\u65e5<ol> <li><code>datetime.datetime</code>\uff1a\u4e0a\u8ff0\u4e24\u8005\u7ed3\u5408</li> </ol> </li> <li><code>datetime.timedelta</code>\uff1a\u5468\u3001\u5929\u3001\u65f6\u3001\u5206\u3001\u79d2\u3001\u6beb\u79d2\u3001\u5fae\u79d2\uff0c\u5b9e\u9645\u5b58\u50a8\u65f6\u53ea\u6709\u5929\u3001\u79d2\u3001\u5fae\u5999</li> <li><code>datetime.tzinfo</code>\uff1a\u62bd\u8c61\u7c7b\uff0c\u5305\u542b\u65f6\u533a\u540d\u79f0\u3001\u65f6\u533a offset \u548c DST \u4fe1\u606f<ol> <li><code>datetime.timezone</code>\uff1aDST \u4e3a <code>None</code>\uff0c\u53e6\u542b\u4e00\u4e2a\u5177\u4f53\u7684 UTC \u65f6\u533a\uff08<code>datetime.timezone.utc</code>\uff09</li> </ol> </li> </ol> <p>\u5224\u65ad\u65f6\u95f4\uff08<code>datetime.datetime</code> \u548c <code>datetime.time</code>\uff09\u662f\u5426\u662f\u786e\u5b9a\u7684\u65b9\u6cd5\u89c1 Python \u6587\u6863\u3002</p> <p>\u6b64\u5904\u4ec5\u5c55\u793a\u6700\u7cbe\u786e\u7684\u5e26\u65f6\u533a\u4fe1\u606f\u7684 <code>datetime.datetime</code> \u7684\u4f8b\u5b50\uff1a</p> <pre><code>from datetime import datetime, timezone\n\nnow = datetime.now(tz=timezone.utc)\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E6%9E%9A%E4%B8%BE/","title":"\u679a\u4e3e","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E6%9E%9A%E4%B8%BE/#enum","title":"<code>enum</code>","text":"<pre><code>from enum import Enum, unique, auto\n\n# \u4fdd\u8bc1\u679a\u4e3e\u7684\u503c\u552f\u4e00\u6027\n@unique\nclass Season(Enum):\n  SPRING = 'spring'  # \u8fd9\u91cc\u7684\u503c\u4e5f\u53ef\u4ee5\u662f int\uff0c\u6216\u8005 auto()\n  SUMMER = 'summer'\n  AUTUMN = 'autumn'\n  WINTER = 'winter'\n\nSeason.SPRING  # &lt;Season.SPRING: 'spring'&gt;\nSeason.SPRING.name  # 'SPRING'\nSeason.SPRING.value  # 'spring'\n# \u597d\u7528\uff1a\u4e1b\u503c\u6784\u5efa\u679a\u4e3e\u5bf9\u8c61\nSeason('spring')  # &lt;Season.SPRING: 'spring'&gt;\n</code></pre> <p><code>Enum</code> \u53e6\u6709\u51fd\u6570\u5f0f\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u4e0d\u8fc7\u672c\u8d28\u662f\u4e00\u6837\u7684\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E6%9E%9A%E4%B8%BE/#enumerate","title":"<code>enumerate</code>","text":"<p>\u65b9\u4fbf\u904d\u5386\u3002</p> <pre><code>enumerate(['a', 'b', 'c'])  # &lt;enumerate object at 0x0000010E57EB9AC0&gt;\n\nfor i, x in enumerate(['a', 'b', 'c']):\n  print(i, x)\n# 0 a\n# 1 b\n# 2 c\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E6%A8%A1%E5%9D%97%E5%92%8C%E5%8C%85/","title":"\u6a21\u5757\u548c\u5305","text":"<p>Module \u548c package\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/","title":"\u7248\u672c\u7ba1\u7406","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/#pyenv","title":"pyenv","text":"<pre><code>pyenv install 3.10.0\npyenv local 3.10.0  # \u4f1a\u521b\u5efa\u4e00\u4e2a .python-version \u6587\u4ef6\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E7%A5%9E%E5%A5%87%E7%9A%84%E7%B1%BB/","title":"\u795e\u5947\u7684\u7c7b","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E7%A5%9E%E5%A5%87%E7%9A%84%E7%B1%BB/#descriptor","title":"Descriptor","text":"<p>TODO</p> <p>Python \u6709\u4e09\u4e2a\u5185\u7f6e descriptor\uff08\u4e5f\u662f decorator\uff09\uff1a<code>@property</code>\u3001<code>@classmethod</code> \u548c <code>@staticmethod</code>\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E7%A5%9E%E5%A5%87%E7%9A%84%E7%B1%BB/#property","title":"Property","text":"<p>\u4f7f\u7528 <code>@property</code> \u53ef\u4ee5\u8ba9\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u9700\u8981 method \u8ba1\u7b97\u7684 field\u3002\u4f8b\u5982\u5bf9\u4e00\u4e2a\u6b63\u65b9\u5f62\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u5b58\u50a8\u8fb9\u957f\uff0c\u800c\u5c06\u9762\u79ef\u8bbe\u7f6e\u4e3a\u4e00\u4e2a property\uff0c\u9700\u8981\u7684\u65f6\u5019\u5373\u65f6\u8ba1\u7b97\u3002</p> <p>\u4f8b\u5b50\u6765\u81ea\u300aLearning Python\u300b\u3002</p> <pre><code>class Person:\n    def __init__(self, name):\n        # \u901a\u5e38\u7528\u5e26\u4e0b\u5212\u7ebf\u7684\u540d\u5b57\u4f5c\u4e3a\u5b9e\u9645\u503c\n        self._name = name\n\n    @property\n    def name(self):  # name = property(name)\n        \"\"\"name property docs\"\"\"\n        print('fetch...')\n        return self._name\n\n    # setter \u548c deleter \u7684\u540d\u5b57\u4e5f\u90fd\u662f name\n    @name.setter\n    def name(self, value):  # name = name.setter(name)\n        print('change...')\n        self._name = value\n\n    @name.deleter\n    def name(self):  # name = name.deleter(name)\n        print('remove...')\n        del self._name\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E7%A5%9E%E5%A5%87%E7%9A%84%E7%B1%BB/#static-method","title":"Static method","text":"<p>\u4f7f\u7528 <code>@staticmethod</code>\uff0c\u5219\u53c2\u6570\u4e0d\u4f1a\u6dfb\u52a0 <code>self</code> \u6216 <code>cls</code>\uff0c\u5c31\u50cf\u4e00\u4e2a function \u4e00\u6837\uff0c\u53ea\u662f\u5728\u4e00\u4e2a\u7c7b\u5185\u3002</p> <pre><code>class Book:\n    @staticmethod\n    def foo(x):\n        return x\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E7%A5%9E%E5%A5%87%E7%9A%84%E7%B1%BB/#class-method","title":"Class method","text":"<pre><code>class Book:\n    @classmethod\n    def foo(cls, x):\n        return cls, x\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E7%A5%9E%E5%A5%87%E7%9A%84%E7%B1%BB/#data-classes","title":"Data classes","text":"<p>\u6211\u4eec\u7ecf\u5e38\u4f1a\u5199\uff1a</p> <pre><code>class Book:\n    def __init__(self, name: str, author: str):\n        self.name = name\n        self.author = author\n</code></pre> <p>\u7528 <code>dataclasses</code> \u7684\u8bdd\uff0c\u53ea\u9700\u8981\uff1a</p> <pre><code>from dataclasses import dataclass\n\n@dataclass\nclass Book:\n    name: str\n    author: str\n</code></pre> <p><code>@dataclass</code> \u4f1a\u5e2e\u6211\u4eec\u81ea\u52a8\u52a0\u4e0a <code>__init__()</code>\u3001<code>__repr__()</code>\u3001<code>__eq__()</code> \u7b49\u3002</p> <p>\u7528\u5904\u4e00\u662f\u7b80\u5316\u7c7b\u7684\u4ee3\u7801\uff0c\u4e8c\u662f\u53ef\u4ee5\u66ff\u4ee3 <code>namedtuple</code>\u3001<code>typing.NamedTuple</code>\u3001attrs \u7b49\u3002\u6709\u4e00\u70b9\u50cf Typescript \u7684 <code>interface</code>\u3002</p> <p>\u8ba8\u8bba\uff1ahttps://stefan.sofa-rockers.org/2020/05/29/attrs-dataclasses-pydantic/</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E7%A5%9E%E5%A5%87%E7%9A%84%E7%B1%BB/#attribute","title":"\u7279\u6b8a attribute","text":"<pre><code>class Book:\n    '''A book'''\n    name: str = 'A name'\n\n    # \u7c7b\u7684\u7279\u6b8a attribute\n    __name__  # \u7c7b\u540d 'Book'\n    __module__  # \u7c7b\u6240\u5728\u6a21\u5757 '__main__'\n    __dict__  # \u7c7b\u7684\u547d\u540d\u7a7a\u95f4 mappingproxy({'__module__': '__main__', '__annotations__': {'name': &lt;class 'str'&gt;}, '__doc__': 'Book class', 'name': 'Good', '__dict__': &lt;attribute '__dict__' of 'Book' objects&gt;, '__weakref__': &lt;attribute '__weakref__' of 'Book' objects&gt;})\n    __bases__  # \u57fa\u7840\u7c7b (&lt;class 'object'&gt;,)\n    __doc__  # \u6587\u6863 'A book'\n    __annotations__  # \u5c5e\u6027\u7684\u6807\u6ce8\uff0c\u82e5\u5982\u5219\u65e0\u6b64 attribute {'name': &lt;class 'str'&gt;}\n\n    # \u7c7b\u7684\u7279\u6b8a\u65b9\u6cd5\n    object.__new__(cls, ...)  # \u8fd9\u5176\u5b9e\u662f\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\u3002\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u5148\u8c03\u7528 cls.__new__()\uff0c\u518d\u8c03\u7528 self.__init__()\n    object.__init__(self, ...)\n    object.__del__(self)  # \u5728\u5b9e\u4f8b\u88ab\u6467\u6bc1\u524d\u8c03\u7528\uff0c\u6ce8\u610f del x \u5e76\u4e0d\u8c03\u7528 x.__del__()\n    object.__repr__(self)  # repr() \u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2a str\uff0c\u4e3b\u8981\u7528\u4e8e debugging\uff0c\u6bd4\u5982\u5728\u4ea4\u4e92\u5f0f shell \u91cc\uff0c\u7ed9\u7a0b\u5e8f\u5458\u770b\n    object.__str__(self)  # str(object)\u3001format()\u3001print() \u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u53ef\u4ee5\u7ed9\u6700\u7ec8\u7528\u6237\u770b\n    object.__bytes__(self)  # bytes() \u8c03\u7528\u8be5\u65b9\u6cd5\n    object.__format__(self, format_spec)  # format() \u8c03\u7528\u8be5\u65b9\u6cd5\n    object.__lt__(self, other)  # &lt;\uff0c\u8fd9\u4e9b\u90fd\u662f\u7528\u4e8e\u548c\u53e6\u4e00\u4e2a\u5bf9\u8c61\u5927\u5c0f\u3001\u76f8\u7b49\n    object.__le__(self, other)  # &lt;=\n    object.__eq__(self, other)  # ==\uff0c\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\uff0c\u9ed8\u8ba4\u4f7f\u7528 is \u6765\u5224\u65ad __eq__()\n    object.__ne__(self, other)  # !=\uff0c\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\uff0c\u9ed8\u8ba4\u4f7f\u7528 !__eq__()\n    object.__gt__(self, other)  # &gt;\n    object.__ge__(self, other)  # &gt;=\n    object.__hash__(self)  # hash() \u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u5e94\u4fdd\u8bc1 __eq__() \u7684\u5bf9\u8c61\u7684 hash \u76f8\u540c\uff1b\u5982\u679c\u6ca1\u6709\u5b9a\u4e49 __eq__()\uff0c\u4e0d\u8981\u5b9a\u4e49\u8be5\u65b9\u6cd5\n    object.__bool__(self)  # bool() \u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\uff0c\u53ea\u8981 __len__() \u4e0d\u662f 0 \u5219\u4e3a True\uff1b\u82e5 __len__() \u6ca1\u6709\u5b9a\u4e49\uff0c\u5219\u6c38\u8fdc\u4e3a True\n\n    # \u81ea\u5b9a\u4e49\u7c7b\u7684 attribute \u7684\u8bbf\u95ee\n    object.__getattribute__(self, name)  # \u9ed8\u8ba4 attribute \u8bbf\u95ee\u673a\u5236\uff1b\u4e00\u822c\u4e0d\u91cd\u5199\u6b64\u65b9\u6cd5\n    object.__getattr__(self, name)  # \u8fd9\u4e09\u4e2a\u662f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\u65b9\u6cd5\uff0c\u4f5c\u4e3a fallback\n    object.__setattr__(self, name, value)\n    object.__delattr__(self, name)\n    object.__dir__(self)  # dir() \u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5e94\u8fd4\u56de sequence\uff1bdir() \u4f1a\u5c06\u7ed3\u679c\u8f6c\u4e3a list \u5e76\u6392\u5e8f\uff1b\u4e00\u822c\u4e0d\u91cd\u5199\u6b64\u65b9\u6cd5\n\n    # TODO descriptor\n    object.__get__()\n    object.__set__()\n    object.__delete__()\n\n    # TODO\n    object.__slots__()\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E7%A5%9E%E5%A5%87%E7%9A%84%E7%B1%BB/#attribute_1","title":"\u7c7b\u7684 attribute \u8bbf\u95ee\u673a\u5236","text":"<p>Managing Attribute Access and Descriptors (Theory of Python) (Python Tutorial) - YouTube</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E8%A3%85%E9%A5%B0%E5%99%A8/","title":"\u88c5\u9970\u5668","text":"<p>\u88c5\u9970\u5668\uff08decorator\uff09\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u53e6\u4e00\u4e2a\u51fd\u6570\u3002</p> <pre><code>def some_decorator(function):\n    # \u5728\u8fd9\u91cc\u641e\u70b9\u4e8b\u60c5\u8f6c\u6362 function \u7684\u7ed3\u679c\n    print('decorator')\n\n@some_decorator\ndef f():\n    return 1\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/Python/%E4%B8%BB%E9%A2%98/%E8%A3%85%E9%A5%B0%E5%99%A8/#_2","title":"\u5e38\u89c1\u7684\u88c5\u9970\u5668","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E8%AF%AD%E8%A8%80/XML/XML/","title":"Extensible Markup Language (XML)","text":"<ol> <li>What is <code>xmlns</code>?</li> </ol> <p>It defines an XML namespace.</p> <p>XML namespaces provide a simple method for qualifying element and attribute names used in Extensible Markup Language documents by associating them with namespaces identified by URI references. (https://www.w3.org/TR/REC-xml-names/)</p> <p>It provides a way to distinguish tags from different origin with the same name. It is often a URL which may or may not point to a real web page.</p> <p>Sometimes people use the schema's URL. This is only a convention.</p> <p>Example:</p> <pre><code>&lt;person xmlns=\"http://www.your.example.com/xml/person\"&gt;\n     &lt;name&gt;Rob&lt;/name&gt;\n     &lt;age&gt;37&lt;/age&gt;\n     &lt;homecity xmlns=\"http://www.my.example.com/xml/cities\"&gt;\n         &lt;name&gt;London&lt;/name&gt;\n         &lt;lat&gt;123.000&lt;/lat&gt;\n         &lt;long&gt;0.00&lt;/long&gt;\n     &lt;/homecity&gt;\n &lt;/person&gt;\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E9%83%A8%E7%BD%B2/Docker/","title":"Docker","text":"<p>Docker \u53ef\u4ee5\u521b\u5efa\u5bb9\u5668\uff0c\u521b\u5efa\u7684\u5bb9\u5668\u53ef\u4ee5\u5728\u51e0\u4e4e\u4efb\u4f55\u7cfb\u7edf\u4e0a\u8fd0\u884c\uff0c\u5c24\u5176\u662f\u53ef\u4ee5\u5728\u73b0\u5728\u5f88\u706b\u7684 Kubernetes \u4e0a\u8fd0\u884c\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E9%83%A8%E7%BD%B2/Docker/#_1","title":"\u6982\u5ff5","text":"<ul> <li>\u955c\u50cf\uff08image\uff09\uff1a\u955c\u50cf\u662f\u6784\u5efa\u597d\u7684\u9759\u6001\u7684\u5bb9\u5668\u6a21\u7248</li> <li>\u5bb9\u5668\uff08container\uff09\uff1a\u4e00\u4e2a\u5bb9\u5668\u662f\u955c\u50cf\u7684\u5b9e\u4f8b\uff0c\u4e00\u4e2a\u955c\u50cf\u53ef\u4ee5\u6709\u591a\u4e2a\u5bb9\u5668\u5b9e\u4f8b</li> </ul>"},{"location":"%E5%B7%A5%E5%85%B7/%E9%83%A8%E7%BD%B2/Docker/#dockerfile","title":"\u4f7f\u7528 Dockerfile \u521b\u5efa\u955c\u50cf","text":"<p>\u60f3\u8981\u521b\u5efa\u955c\u50cf\uff0c\u9700\u8981\u7528 Dockerfile\u3002</p>"},{"location":"%E5%B7%A5%E5%85%B7/%E9%83%A8%E7%BD%B2/Docker/#docker-compose","title":"\u521b\u5efa Docker Compose","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E9%83%A8%E7%BD%B2/Docker/#cli","title":"CLI","text":"<pre><code># \u8fd0\u884c\u67d0\u955c\u50cf\uff0c\u5373\u521b\u5efa\u4e00\u4e2a\u8be5\u955c\u50cf\u7684\u5bb9\u5668\u5b9e\u4f8b\ndocker run &lt;image&gt; &lt;command&gt;\n# \u4fdd\u8bc1\u4ea4\u4e92\u6027\uff0c\u6bd4\u5982 shell\ndocker run --interactive --tty &lt;image&gt; &lt;command&gt;\n# \u540e\u53f0\u8fd0\u884c\ndocker --detach &lt;image&gt; &lt;command&gt;\n\n# \u67e5\u770b\u6240\u6709\u8fd0\u884c\u7684\u5bb9\u5668\uff0c\u4e0d\u52a0 --all \u53ea\u770b\u5728\u8fd0\u884c\u7684\u5bb9\u5668\ndocker ps --all\ndocker container ls --all\n# \u67e5\u770b\u65e5\u5fd7\ndocker log &lt;container&gt;\n# \u505c\u6b62\u5bb9\u5668\ndocker stop &lt;container&gt;\n# \u91cd\u542f\u5bb9\u5668\ndocker restart &lt;container&gt;\n# \u5728\u5bb9\u5668\u91cc\u6267\u884c\u547d\u4ee4\ndocker exec &lt;container&gt; &lt;command&gt;\ndocker exec --interactive --tty &lt;container&gt; /bin/bash\n\n# \u62c9\u53d6\u955c\u50cf\ndocker pull &lt;image&gt;\n\n# \u6784\u5efa\u955c\u50cf\ndocker build .\ndocker build -f Dockerfile .\n</code></pre>"},{"location":"%E5%B7%A5%E5%85%B7/%E9%83%A8%E7%BD%B2/Heroku/","title":"Heroku","text":""},{"location":"%E5%B7%A5%E5%85%B7/%E9%83%A8%E7%BD%B2/Heroku/#heroku-cli","title":"Heroku CLI","text":""},{"location":"%E5%B9%B6%E8%A1%8C/%E5%B9%B6%E8%A1%8C/","title":"Parallel Computing","text":"<ol> <li> <p>What is parallel computing?</p> </li> <li> <p>What is concurrent?</p> </li> <li> <p>What is multi-threading?</p> </li> <li> <p>What is distributed computing?</p> </li> <li> <p>What is grid computing?</p> </li> <li> <p>What is edge computing?</p> </li> <li> <p>What is a computer cluster?</p> </li> <li> <p>What is a process?</p> </li> <li> <p>What is a thread?</p> </li> <li> <p>What is an operating system kernel?</p> </li> <li> <p>What types of kernel are there?</p> </li> </ol>"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93/","title":"Databases","text":"<ol> <li> <p>Why do we need a database?</p> </li> <li> <p>What is vertical and horizontal partitioning (\u6c34\u5e73\u548c\u5782\u76f4\u5206\u533a)?</p> </li> <li> <p>What is a transaction?</p> </li> <li> <p>What is ACID?</p> </li> <li> <p>What is 3NF?</p> </li> <li> <p>What is normalisation?</p> </li> <li> <p>How to ensure transactional integrity?</p> </li> <li> <p>What is relational algebra?</p> </li> <li> <p>Is relational algebra based on set theory?</p> </li> <li> <p>What is a relation?</p> </li> <li> <p>What is an entity-relationship model?</p> </li> </ol>"},{"location":"%E6%9E%B6%E6%9E%84/%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8/","title":"Event-driven","text":"<p>Reference: https://flink.apache.org/usecases.html#eventDrivenApps</p> <ol> <li> <p>What are event-driven applications?</p> <p>An event-driven application is a stateful application that ingest and react to incoming events.</p> </li> <li> <p>What is the difference between event-driven applications and traditional applications?</p> </li> </ol>"},{"location":"%E6%B5%81/%E6%B5%81/","title":"Stream (\u6d41)","text":"<ol> <li>What is streaming data?</li> </ol> <p>Streaming data is continuously generated data. Such flow of data can be called a data stream.</p> <ol> <li> <p>What is stream processing?</p> </li> <li> <p>What is unbounded and bounded data stream (\u6709\u754c\u548c\u65e0\u754c\u6570\u636e\u6d41)?</p> </li> </ol> <p>Unbounded streams have a start but no defined end. Bounded streams have a defined start and end.</p> <ol> <li>Can unbounded data stream be feed not in the original order?</li> </ol> <p>It is possible to process data stream not in the original order. For example, calculating the sum may not require the data stream to be ingested in the original order. However, it is generally required that events are ingested in a specific order.</p> <ol> <li>What are real-time and recorded data streams (\u5b9e\u65f6\u548c\u5386\u53f2\u7eaa\u5f55\u6570\u636e\u6d41)?</li> </ol> <p>It is possible to record a stream and process it later rather than real-time processing.</p> <ol> <li></li> </ol>"},{"location":"%E7%AE%97%E6%B3%95/","title":"\u7b97\u6cd5 Algorithms","text":"<p>\u9762\u5411\u9762\u8bd5\u7684\u7b97\u6cd5 \ud83d\ude42</p> <p>\u5185\u5bb9\u4e3b\u8981\u57fa\u4e8e OI Wiki \u548c LeetCode\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95/#_1","title":"\u4ec0\u4e48\u662f\u7b97\u6cd5?","text":"<p>An algorithm is a sequence of unambiguous instructions for solving a problem, i.e., for obtaining a required output for any legitimate input in a finite amount of time. (Introduction to the Design &amp; Analysis of Algorithms)</p> <ol> <li>\u89e3\u51b3\u4e00\u4e2a\u95ee\u9898</li> <li>\u662f\u4e00\u7cfb\u5217\u660e\u786e\u7684\u6307\u4ee4</li> <li>\u80fd\u5728\u6709\u9650\u7684\u65f6\u95f4\u5185\u8f93\u51fa\u6b63\u786e\u7684\u7b54\u6848</li> </ol>"},{"location":"%E7%AE%97%E6%B3%95/#_2","title":"\u7b97\u6cd5\u7684\u7279\u5f81","text":"<p>\u4e00\u4e2a\u5178\u578b\u7684\u7b97\u6cd5\u4e00\u822c\u90fd\u53ef\u4ee5\u62bd\u8c61\u51fa5\u4e2a\u7279\u5f81\uff1a</p> <ol> <li>\u6709\u7a77\u6027\uff1a\u7b97\u6cd5\u7684\u6307\u4ee4\u6216\u8005\u6b65\u9aa4\u7684\u6267\u884c\u6b21\u6570\u548c\u65f6\u95f4\u90fd\u662f\u6709\u9650\u7684\u3002</li> <li>\u786e\u5207\u6027\uff1a\u7b97\u6cd5\u7684\u6307\u4ee4\u6216\u6b65\u9aa4\u90fd\u6709\u660e\u786e\u7684\u5b9a\u4e49\u3002</li> <li>\u8f93\u5165\uff1a\u6709\u76f8\u5e94\u7684\u8f93\u5165\u6761\u4ef6\u6765\u523b\u753b\u8fd0\u7b97\u5bf9\u8c61\u7684\u521d\u59cb\u60c5\u51b5\u3002</li> <li>\u8f93\u51fa\uff1a\u4e00\u4e2a\u7b97\u5e94\u6709\u660e\u786e\u7684\u7ed3\u679c\u8f93\u51fa\u3002</li> <li>\u53ef\u884c\u6027\uff1a\u7b97\u6cd5\u7684\u6267\u884c\u6b65\u9aa4\u5fc5\u987b\u662f\u53ef\u884c\u7684\u3002</li> </ol>"},{"location":"%E7%AE%97%E6%B3%95/#_3","title":"\u590d\u6742\u5ea6\u5206\u6790","text":"<p>TODO</p>"},{"location":"%E7%AE%97%E6%B3%95/#_4","title":"\u8d44\u6e90","text":"<ul> <li>Data Structures - Rob Edwards [YouTube Playlist]</li> <li>\u51cf\u6cbb\u7b56\u7565\u548c\u5206\u6cbb\u7b56\u7565 | coolcao\u7684\u5c0f\u7ad9</li> <li>yzhu798/CodingInterviewsNotes</li> <li>nonstriater / Learn-Algorithms\uff1a\u7b97\u6cd5\u5b66\u4e60\u7b14\u8bb0</li> </ul>"},{"location":"%E7%AE%97%E6%B3%95/%E6%80%BB%E7%BB%93%E5%92%8C%E6%8A%80%E5%B7%A7/","title":"\u603b\u7ed3\u548c\u6280\u5de7","text":""},{"location":"%E7%AE%97%E6%B3%95/%E6%80%BB%E7%BB%93%E5%92%8C%E6%8A%80%E5%B7%A7/#_2","title":"\u4e00\u822c\u6b65\u9aa4","text":"<ol> <li>\u8bfb\u61c2\u9898\u76ee</li> <li>\u786e\u5b9a\u8f93\u5165\u3001\u8f93\u51fa</li> <li>\u786e\u8ba4\u8f93\u5165\u503c\u7684\u8303\u56f4\u3001\u6761\u4ef6</li> <li>\u601d\u8def</li> <li>\u60f3\u4e00\u4e0b\u5927\u81f4\u601d\u8def</li> <li>\u5206\u6790\u65f6\u7a7a\u590d\u6742\u5ea6\uff0c\u6ce8\u610f\u9012\u5f52\u7684\u6808 stack \u7a7a\u95f4</li> <li>\u5206\u7c7b\u5217\u4e3e\u5404\u79cd\u60c5\u51b5\uff08\u542b\u8fb9\u7f18\u6761\u4ef6\uff09 </li> <li>\u8fd8\u6709\u6ca1\u6709\u66f4\u597d\u7684\u65b9\u6cd5</li> <li>\u590d\u6742\u7684\u60c5\u51b5\u8981\u5217\u4e3e</li> <li>\u8dd1\u4e00\u4e0b\u4f8b\u5b50\uff0c\u770b\u601d\u8def\u5bf9\u4e0d\u5bf9</li> <li>\u8fd9\u4e2a\u65f6\u5019\u601d\u8def\u4e0d\u6e05\u695a\u3001\u4e0d\u8dd1\u4e00\u4e0b\u3001\u4e0d\u60f3\u5168\u60c5\u51b5\u7684\u8bdd\uff0c\u5199\u4e86\u9519\u8bef\u7684\u4ee3\u7801\u518d\u6539\u5c31\u96be\u4e86\uff01</li> <li>\u5199\u4ee3\u7801</li> <li>\u4e0d\u4e00\u5b9a\u6309\u987a\u5e8f\uff0c\u53ef\u4ee5\u5148\u642d\u4e2a\u5927\u6846\u67b6\u3001\u6b65\u9aa4\uff0c\u518d\u586b\u5145\u7ec6\u8282</li> <li>\u68c0\u67e5</li> <li>\u5398\u6e05\u5bb9\u6613\u9519\u7684\u5faa\u73af\u5224\u65ad\u6761\u4ef6\u7b49</li> <li>\u767d\u677f\u7684\u8bdd\u8981\u81ea\u5df1\u624b\u52a8\u8dd1\u4e00\u904d</li> <li>\u518d\u786e\u8ba4\u4e00\u4e0b\u590d\u6742\u5ea6</li> <li>\u5206\u6790\u603b\u7ed3</li> <li>\u53ef\u80fd\u7684\u7f3a\u9677\u3001\u6539\u8fdb</li> <li>\u66f4\u597d\u7684\u529e\u6cd5</li> </ol>"},{"location":"%E7%AE%97%E6%B3%95/%E6%80%BB%E7%BB%93%E5%92%8C%E6%8A%80%E5%B7%A7/#tips","title":"Tips","text":"<ol> <li>Logarithm (\u5bf9\u6570)</li> </ol> <p>log<sub>10</sub>(x) = ln(x) / ln(10)</p> <p>log<sub>a</sub>(b) = ln(b) / ln(a)</p> <p>log(a * b) = log(a) + log(b)</p> <p>log(a / b) = log(a) - log(b)</p> <ol> <li>How many digits does a number have?</li> </ol> <p>For positive integers, <code>floor(log10(n)) + 1</code>.</p> <p>For all integers?</p> <pre><code>function number_of_digits(n):\n  if n = 0:\n    return 1\n  else:\n    return floor(log10(abs(n))) + 1\n</code></pre> <ol> <li>When using two pointers, what would the index of the number we need to fill given the pointers' indices as <code>l</code> and <code>r</code>, if we are filling numbers from the start or from the end respectively?</li> </ol> <p>Forward: It would be <code>n - 1 + l - r</code> because there are <code>l + (n - 1 - r) = n - 1 + l - r</code> numbers already filled, and the next number is at index <code>n - 1 + l - r</code>.</p> <p>Backward: It would be <code>r - l</code> because there are <code>r - l + 1</code> numbers waiting to be filled and the <code>r - l + 1</code>th number is at index <code>r - l</code>.</p> <p>You can use a variable to track it if you don't remember.</p> <ol> <li> <p>When using two pointers, it is good to maintain a meaning of the pointers. For example, <code>l</code> is the next the position to write, <code>r</code> is the biggest number when have found so far. It makes the code meaningful and often simpler.</p> </li> <li> <p>When the algorithm needs to manually handle many edge cases, your idea might be wrong.</p> </li> </ol>"},{"location":"%E7%AE%97%E6%B3%95/%E6%80%BB%E7%BB%93%E5%92%8C%E6%8A%80%E5%B7%A7/#_3","title":"\u4ed6\u5c71\u4e4b\u77f3","text":"<ul> <li>\u9c82\u76842021\u79cb\u62db\u7b97\u6cd5\u603b\u7ed3\uff1ahttps://leetcode-cn.com/circle/discuss/VFVW01/</li> <li>\u8bf7\u95ee\u5237\u591a\u5c11\u9898\u624d\u80fd\u8fbe\u5230\u627e\u5de5\u4f5c\u7684\u57fa\u7840\u7ebf\uff1f\uff1ahttps://leetcode-cn.com/circle/discuss/TptPlE/</li> <li>\u300c\u6625\u62db\u5b66\u4e60\u8ba1\u5212\u300d \u5468\u5e38\u603b\u7ed3 Week 2\uff1ahttps://leetcode-cn.com/circle/discuss/Tc8aM4/</li> </ul>"},{"location":"%E7%AE%97%E6%B3%95/%E5%88%B7%E9%A2%98/LeetCode/","title":"LeetCode","text":"<p>LeetCode / \u529b\u6263</p> <p></p>"},{"location":"%E7%AE%97%E6%B3%95/%E5%88%B7%E9%A2%98/LeetCode/#_1","title":"\u5f85\u5237","text":"# \u9898\u540d \u96be\u5ea6 \u6807\u7b7e \u5907\u6ce8 430 Flatten a Multilevel Doubly Linked List \u4e2d\u7b49 \u94fe\u8868\u3001DFS DFS\u8981\u5148\u719f\u6089\u4e00\u4e0b\u3002 138 Copy List with Random Pointer \u4e2d\u7b49 \u94fe\u8868 \u56fe\u7684\u904d\u5386\uff0c\u5148\u505a\u4e86\u56fe\u7684\u90e8\u5206\u518d\u6765\u505a\u3002"},{"location":"%E7%AE%97%E6%B3%95/%E5%88%B7%E9%A2%98/LeetCode/#_2","title":"\u5df2\u5237","text":"\u9898\u76ee \u6807\u7b7e"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6/","title":"\u7b97\u6cd5\u9898\u4e2d\u53ef\u80fd\u6d89\u53ca\u7684\u6570\u5b66","text":"<ol> <li>\u6570\u5b57\u9010\u4f4d\u76f8\u52a0\uff1a\u81ea\u540e\u5411\u524d\u3001\u81ea\u524d\u5411\u540e\u3001\u8d1f\u6570\uff0c\u5982123+234=357\uff0c-2812+12=-2800\u3002</li> <li>\u5f97\u5230\u6570\u5b57\u7684\u4f4d\u6570\uff1a\u8d1f\u6570\uff0c\u59821238\u67094\u4f4d\u3002</li> </ol> # \u9898\u540d \u96be\u5ea6 \u6807\u7b7e \u5907\u6ce8 2 \u4e24\u6570\u76f8\u52a0 Add Two Numbers \u4e2d\u7b49 \u94fe\u8868\u3001\u6570\u5b66 \u6570\u5b57\u76f8\u52a0\uff08\u4ece\u540e\u5f80\u524d\uff09\u3002"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/%E4%BA%8C%E8%BF%9B%E5%88%B6/%E4%BD%8D%E8%BF%90%E7%AE%97/","title":"\u4f4d\u8fd0\u7b97 Bitwise Operation","text":"<ol> <li>\u53d6\u53cd NOT</li> <li>\u6309\u4f4d\u6216 OR</li> <li>\u6309\u4f4d\u4e0e AND</li> <li>\u6309\u4f4d\u5f02\u6216 XOR\uff1a\u76f8\u540c\u5219\u4e3a0\uff0c\u4e0d\u540c\u5219\u4e3a1</li> <li>\u5de6\u79fb left shift\uff1a\u6574\u4f53\u5de6\u79fb\uff0c\u9ad8\u4f4d\u4e22\u5f03\uff0c\u4f4e\u4f4d\u88650</li> <li>\u53f3\u79fb right shift\uff1a\u6574\u4f53\u53f3\u79fb\uff0c\u4f4e\u4f4d\u4e22\u5f03\uff0c\u9ad8\u4f4d\u65e0\u7b26\u53f7\u88650\uff0c\u6709\u7b26\u53f7\u8865\u7b26\u53f7\u4f4d\uff08Java\u5982\u6b64\uff0cPython\u56e0\u4e3a\u6ca1\u6709\u7b26\u53f7\u4f4d\uff0c\u4e0d\u4e00\u6837\uff09</li> </ol> <pre><code>NOT 01 = 10\n0011 OR 0101 = 0111\n0011 AND 0101 = 0001\n0011 XOR 0101 = 0110\n</code></pre> <p>\u53ef\u4ee5\u7528bit string\u4fdd\u5b58\u5927\u91cf\u7684boolean\u503c\uff0c\u518d\u901a\u8fc7\u4f4d\u64cd\u4f5c\u53d8\u66f4\u6bcf\u4e2aboolean\u503c\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/%E4%BA%8C%E8%BF%9B%E5%88%B6/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","title":"\u6570\u636e\u7c7b\u578b","text":"<p>\u5e38\u89c1\u5404\u8bed\u8a00\u3001\u6570\u636e\u5e93\u7684\u6570\u636e\u7c7b\u578b\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/%E4%BA%8C%E8%BF%9B%E5%88%B6/%E6%B5%AE%E7%82%B9%E6%95%B0/","title":"\u6d6e\u70b9\u6570 Floating Point","text":""},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%93%88%E5%B8%8C%E8%A1%A8/","title":"\u54c8\u5e0c\u8868 Hashing Table","text":"<p>\u54c8\u5e0c\u8868\u6216\u79f0\u6563\u5217\u8868\uff0c\u53ef\u4ee5\u7406\u89e3\u54c8\u5e0c\u8868\u4e3a\u4e00\u7ec4\u952e\u503c\u5bf9\uff0c\u7ed9\u5b9akey\uff0c\u53ef\u4ee5\u627e\u5230value\u3002\u7ed9\u5b9avalue\uff0c\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\uff08hash function\uff09\u8ba1\u7b97key\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%93%88%E5%B8%8C%E8%A1%A8/#_1","title":"\u51b2\u7a81","text":"<p>TODO</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%93%88%E5%B8%8C%E8%A1%A8/#hash-function","title":"\u54c8\u5e0c\u51fd\u6570 Hash Function","text":"<p>TODO</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9B%BE/%E5%9B%BE/","title":"\u56fe Graph","text":""},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9B%BE/%E5%9B%BE/#_1","title":"\u57fa\u672c\u5b9a\u4e49\u3001\u6027\u8d28","text":"<p>\u56fe\u7684\u8282\u70b9\u53ebnode\u6216vertex\uff08\u590d\u6570vertices\uff09\uff0c\u8fb9\u53ebedge\u6216arc\uff08\u590d\u6570arcs\uff09\u3002\u56fe\u53ef\u4ee5\u8868\u793a\u4e3aG = \u3002 <p>\u56fe\u7684\u8fb9\u53ef\u4ee5\u662f\u6709\u5411\u6216\u65e0\u5411\u7684\u3002\u56e0\u6b64\u6709\u65e0\u5411\u56fe\uff08undirected graph\uff09\u548c\u6709\u5411\u56fe\uff08directed graph\uff0c\u7b80\u79f0digraph\uff09\u3002</p> <p>\u5982\u679cedge\u662f\u65e0\u5411\u7684\uff0c\u6211\u4eec\u8bf4\u4e24\u4e2anode\u662f\u76f8\u4e92adjacent\u7684\uff0c\u4e24\u4e2anode\u662fedge\u7684\u4e24\u4e2aendpoint\uff0c\u4e24\u4e2anode\u662fincident\u4e8e\u8fb9\u7684\uff0c\u8fb9\u4e5f\u662fincident\u4e8e\u4e24\u4e2anode\u7684\u3002\u5982\u679cedge\u662f\u6709\u5411\u7684\uff0c\u5219\u4e24\u4e2anode\u5206\u522b\u4e3aedge\u7684head\u548ctail\u3002</p> <pre><code>a -- b -- c\n|    |    |\nd -- e -- f\n</code></pre> <p>\u53ef\u8868\u793a\u4e3aV = [a, b, c, e, f], E = [(a, b), (b, c), (a, d), (d, e), (b, e), (e, f), (c, f)]\u3002</p> <p>\u7406\u8bba\u4e0a\u6765\u8bf4\uff0c\u8fb9\u53ef\u4ee5\u8fde\u63a5\u540c\u4e00\u4e2a\u8282\u70b9\uff0c\u8fd9\u6837\u7684\u8fb9\u53ebloop\uff0c\u4f46\u4e00\u822c\u4e0d\u7279\u6b8a\u8bf4\u660e\u7684\u8bdd\uff0c\u56fe\u662f\u4e0d\u542bloop\u7684\u3002</p> <p>\u4e0d\u542bloop\u7684\u56fe\u6709n\u4e2a\u8282\u70b9\u7684\u8bdd\uff0c\u8fb9\u7684\u6570\u91cf\u7684\u6700\u5927\u503c\u662fn(n-1)/2\uff0c\u4e5f\u5c31\u662f\u7ec4\u5408\u6570n\u90092\uff0c\u8fd9\u6837\u7684\u56fe\u79f0\u4e4b\u4e3a\u5b8c\u5168\u7684\uff08complete\uff09\uff0c\u53ef\u4ee5\u6807\u8bb0\u4e3aK<sub>|V|</sub>\u3002\u8fd8\u53ef\u4ee5\u8bf4\u4e00\u4e2a\u56fe\u662fdense\u6216\u8005sparse\u7684\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9B%BE/%E5%9B%BE/#_2","title":"\u56fe\u7684\u8868\u793a","text":"<p>\u603b\u662f\u4f1a\u8bf4\u5230adjacency matrix\u548cadjacency list\u3002</p> <pre><code>a -- b -- c\n|    |    |\nd -- e -- f\n\n  a b c d e f\na 0 1 0 1 0 0\nb 1 0 1 0 1 0\nc 0 1 0 0 0 1\nd 1 0 1 0 1 0\ne 0 1 0 1 0 1\nf 0 0 1 0 1 0\n\n\u65e0\u5411\u56fe\u5de6\u4e0b\u548c\u53f3\u4e0a\u534a\u90e8\u5206\u662f\u955c\u50cf\u7684\uff0c\u6709\u5411\u56fe\u5143\u7d20(a, b)\u8868\u793aa\u5230b\u3002matrix\u9002\u5408dense\u7684\u56fe\u3002\n\na \u2192 b \u2192 d\nb \u2192 a \u2192 c \u2192 e\nc \u2192 b \u2192 f\nd \u2192 a \u2192 e\ne \u2192 b \u2192 d \u2192 f\nf \u2192 c \u2192 e\n\n\u94fe\u8868\u9002\u5408sparse\u7684\u56fe\u3002\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9B%BE/%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/","title":"\u56fe\u7684\u904d\u5386 Traversal","text":"<p>\u89c1traversal.py\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9B%BE/%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#dfs","title":"DFS","text":"<p>\u4e00\u76f4\u5411\u6df1\u5904\u5bfb\u627e\u3002\u6bcf\u6b21\u63a2\u7d22\u4e00\u4e2a\u65b0\u7684\u672a\u63a2\u7d22\u7684node\u3002</p> <p>\u5173\u952e\u662f\u8bb0\u5f55\u54ea\u4e2anode\u662f\u5df2\u63a2\u7d22\u4e86\u7684\uff0c\u53ef\u4ee5\u662f\u4e00\u4e2ahashset\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728node\u4e0a\u6807\u8bb0\uff0c\u8fd8\u53ef\u4ee5\u662f\u4e00\u4e2asize\u4e3an\u7684\u6570\u7ec4\uff08boolean\u6216\u80050\u30011\uff09\uff0c\u751a\u81f3\u662f\u4e00\u4e2ahashmap\u8bb0\u5f55node\u7684parent\uff08\u4eceparent\u63a2\u7d22\u5230node\uff0c\u8fd9\u79cd\u8fd8\u53ef\u4ee5\u505atopological sort\uff0c\u7ed3\u5408\u5e76\u67e5\u96c6\u7b49\uff09\u3002\u53ef\u4ee5\u7528\u9012\u5f52\uff0c\u4e5f\u53ef\u4ee5\u7528\u8fed\u4ee3\uff0c\u8fed\u4ee3\u9700\u8981\u4e00\u4e2astack\u8f85\u52a9\uff08\u9012\u5f52\u5176\u5b9e\u7528\u5230\u9012\u5f52\u6808\uff09\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9B%BE/%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#pseudocode","title":"\u4f2a\u4ee3\u7801 pseudocode","text":"<pre><code>1. \u9012\u5f52\ndfs(graph):\n    for\n\ndfs_visit(node):\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9B%BE/%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#_1","title":"\u590d\u6742\u5ea6","text":"<p>\u6700\u901a\u7528\u7684DFS\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(|V|+|E|)\uff0c|V|\u662f\u56e0\u4e3a\u8981\u904d\u5386\u6240\u6709\u8282\u70b9\u4ee5\u4fdd\u8bc1\u56fe\u4e0d\u662f\u90fd\u76f8\u8fde\u7684\u60c5\u51b5\u4e0b\u80fd\u904d\u5386\u5b8c\u3002\u5982\u679c\u5df2\u77e5\u90fd\u662f\u76f8\u8fde\u7684\uff0c\u5219\u53ea\u8981O(|E|)\u3002\u7a7a\u95f4\u590d\u6742\u5ea6\u662fO(|V|)\uff0c\u56e0\u4e3a\u8981\u8ffd\u8e2a\u6bcf\u4e2a\u8282\u70b9\u662f\u5426\u5df2\u8bbf\u95ee\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9B%BE/%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#dfs_1","title":"DFS\u68ee\u6797","text":"<p>\u540d\u5b57\u53ebDFS\u68ee\u6797\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u76f8\u8fde\u7684\u56fe\uff0c\u5219\u662f\u4e00\u4e2a\u6811\u3002</p> <p>\u9047\u5230\u4e00\u4e2a\u65b0\u7684\u8282\u70b9a\uff0c\u5b83\u662f\u4ece\u8282\u70b9b\u8bbf\u95ee\u5230\u7684\uff0c\u5c31\u8fde\u63a5a\u548cb\uff0c\u662f\u4e3atree edge\uff0c\u79f0b\u4e3aa\u7684parent\uff0c\u800c\u5982\u679c\u9047\u5230\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u7684\u975eparent\u7684ancestor\uff0c\u5219\u7528\u865a\u7ebf\u8fde\uff0c\u662f\u4e3aback edge\u3002\u6240\u6709tree edge\u5728\u4e00\u8d77\u5f62\u6210\u6811\u6216\u8005\u68ee\u6797\uff0c\u800c\u52a0\u4e0aback edge\u5c31\u662f\u539f\u56fe\u4e86\u3002</p> <p>DFS\u68ee\u6797\u53ef\u4ee5\u7528\u6765\u627e\u73af\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9B%BE/%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#dfs_2","title":"DFS\u5f97\u5230\u7684\u8282\u70b9\u5e8f\u5217","text":"<p>\u4e24\u4e2a\u5e8f\u5217\uff0c\u4e00\u4e2a\u662f\u65b0\u8bbf\u95ee\u5230\u7684\u8282\u70b9\uff08\u4ecestack push\uff09\uff0c\u4e00\u4e2a\u662f\u8bbf\u95ee\u5b8c\u7684\u8282\u70b9\uff08\u4ecestack pop\uff09\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9B%BE/%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#connectivity","title":"\u5224\u65ad\u8fde\u901a\u6027 connectivity","text":"<p>\u5c0f\u5faa\u73af\u8dd1\u5b8c\uff0c\u5927\u5faa\u73af\u8fd8\u53d1\u73b0\u672a\u8bbf\u95ee\u8282\u70b9\uff0c\u5219\u4e0d\u8fde\u901a\uff0c\u627e\u5230\u65b0\u7684\u4e00\u5757\u4e86\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9B%BE/%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#acyclicity","title":"\u5224\u65ad\u65e0\u73af\u6027 acyclicity","text":"<p>DFS\u68ee\u6797\u6ca1\u6709back edge\u5219\u65e0\u73af\u3002\u5982\u679c\u6709back edge\uff0c\u6bd4\u65b9\u8bf4a\u5230b\u6709\u4e2aback edge\uff0c\u5219\u4ecea\u5230b\u7684tree edge\u52a0\u4e0a\u8be5back edge\u5c31\u662f\u4e00\u4e2a\u73af\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9B%BE/%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#bfs","title":"BFS","text":""},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9B%BE/%E5%B9%B6%E6%9F%A5%E9%9B%86/","title":"\u5e76\u67e5\u96c6 UnionFind","text":""},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9B%BE/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/","title":"\u62d3\u6251\u6392\u5e8f Topological Sorting","text":""},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9B%BE/%E6%A0%91/","title":"\u6811 Tree","text":"<p>\u6811\u662f\u6709\u5411\u65e0\u73af\u56fe\uff08directed acyclic graph\uff09\uff0c\u6709n\u4e2a\u8282\u70b9\u548cn-1\u4e2a\u8fb9\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9B%BE/%E6%A0%91/#traversal","title":"\u904d\u5386 Traversal","text":""},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9B%BE/%E6%A0%91/#dfsdepth-first-search","title":"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff0cdepth-first search\uff09","text":"<p>\u8fd9\u91cc\u7684order\u662f\u5bf9node\u6765\u8bf4\u7684\uff0c\u5982\u679cnode\u662f\u6700\u5148\u8bbf\u95ee\u7684\uff0c\u5c31\u662fpre-order\uff0c\u5982\u679c\u662f\u4e2d\u95f4\u8bbf\u95ee\u7684\uff0c\u5c31\u662fin-order\uff0c\u5982\u679c\u662f\u6700\u540e\u8bbf\u95ee\u7684\uff0c\u5c31\u662fpost-order\u3002</p> <ol> <li>\u524d\u5e8f\uff08pre-order\uff09\uff1a\u8282\u70b9 \u2192 \u5de6\u5b50\u6811 \u2192 \u53f3\u5b50\u6811\uff0cNLR</li> <li>\u4e2d\u5e8f\uff08in-order\uff09\uff1a\u5de6\u5b50\u6811 \u2192 \u8282\u70b9 \u2192 \u53f3\u5b50\u6811\uff0cLNR</li> <li>\u540e\u5e8f\uff08post-order\uff09\uff1a\u5de6\u5b50\u6811 \u2192 \u53f3\u5b50\u6811 \u2192 \u8282\u70b9\uff0cLRN</li> </ol> <p>\u989c\u8272\u6807\u8bb0\u6cd5-\u4e00\u79cd\u901a\u7528\u4e14\u7b80\u660e\u7684\u6811\u904d\u5386\u65b9\u6cd5</p> <p>\u53ea\u8981\u4f1a\u5199\u524d\u5e8f\u7684\u9012\u5f52\uff0c\u53e6\u5916\u4e24\u79cd\u7684\u9012\u5f52\u5199\u6cd5\u5dee\u4e0d\u591a\u3002</p> <p>\u524d\u5e8f\u9012\u5f52\uff08\u7eaf\u51fd\u6570\uff0cdfs()\u7684\u6240\u6709\u4f9d\u8d56\u90fd\u662f\u4ee5\u53c2\u6570\u5f62\u5f0f\u4f20\u8fdb\u6765\u7684\uff09\u3002</p> <pre><code>class Solution:\n    def preorderTraversal(self, root: TreeNode) -&gt; List[int]:\n        # \u9012\u5f52\n        return dfs(root, [])\n\ndef dfs(root, resultList):\n    return resultList + [root.val] + dfs(root.left, []) + dfs(root.right, []) if root else resultList\n</code></pre> <p>\u524d\u5e8f\u9012\u5f52\uff08\u76f4\u63a5\u5904\u7406scope\u5185\u7684\u53d8\u91cfans\uff09\u3002</p> <pre><code>class Solution:\n    def preorderTraversal(self, root: TreeNode) -&gt; List[int]:\n        # \u9012\u5f52\n        ans = []\n        def dfs(root):\n            if root:\n                ans.append(root.val)\n                dfs(root.left)\n                dfs(root.right)\n        dfs(root)\n        return ans\n</code></pre> <p>\u524d\u5e8f\u8fed\u4ee3\uff08iterative\uff09\uff0c\u5229\u7528\u4e00\u4e2a\u6808\uff08stack\uff0cFIFO\uff09\uff0c\u4e00\u76f4\u5411\u5de6\u5230\u5e95\u3002</p> <pre><code>class Solution:\n    def preorderTraversal(self, root: TreeNode) -&gt; List[int]:\n        # \u8fed\u4ee3\n        ans, stack, node = [], [], root\n        while stack or node:\n            while node:\n                ans.append(node.val)\n                stack.append(node)\n                node = node.left\n            node = stack.pop()\n            node = node.right\n        return ans\n</code></pre> <p>\u524d\u5e8f\u8fed\u4ee3\u7684\u53e6\u4e00\u79cd\u5199\u6cd5\uff0c\u66f4\u5e38\u89c4\uff0c\u66f4\u597d\u7406\u89e3\uff0c\u66f4\u63a8\u8350\uff01</p> <pre><code>class Solution:\n    def preorderTraversal(self, root: TreeNode) -&gt; List[int]:\n        # \u8fed\u4ee3\n        ans, stack = [], [root]\n        while stack:\n            node = stack.pop()\n            if node:\n                ans.append(node.val)\n                stack.append(node.right)\n                stack.append(node.left)\n        return ans\n</code></pre> <p>\u4e2d\u5e8f\u9012\u5f52\uff0c\u548c\u524d\u5e8f\u51e0\u4e4e\u5b8c\u5168\u4e00\u6837\u3002</p> <pre><code># Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def inorderTraversal(self, root: TreeNode) -&gt; List[int]:\n        # \u9012\u5f52\uff0c\u548c\u524d\u5e8f\u5dee\u4e0d\u591a\n        ans = []\n        def inOrder(node):\n            if node:\n                inOrder(node.left)\n                ans.append(node.val)\n                inOrder(node.right)\n        inOrder(root)\n        return ans\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9B%BE/%E6%A0%91/#bfsbreadth-first-search","title":"\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff08BFS\uff0cbreadth-first search\uff09","text":"<p>\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u6ca1\u6709\u4ec0\u4e48\u524d\u4e2d\u540e\u5e8f\u3002</p> <p>\u8282\u70b9 \u2192 \u6240\u6709\u5b50\u8282\u70b9 \u2192 \u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9 \u2192 \u2026\u2026</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9B%BE/%E6%A0%91/#leetcode","title":"LeetCode","text":"# \u9898\u540d \u96be\u5ea6 \u6807\u7b7e \u5907\u6ce8 144 Binary Tree Preorder Traversal \u4e2d\u7b49 DFS \u7b80\u5355\u57fa\u7840\u9898\uff0c\u4e0d\u8fc7\u8981\u719f\u7ec3\u638c\u63e1\u9012\u5f52\u548c\u8fed\u4ee3\u4e24\u79cd\u529e\u6cd5\u3002"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%AD%97%E7%AC%A6%E4%B8%B2/","title":"\u5b57\u7b26\u4e32 String","text":""},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_1","title":"\u6982\u5ff5","text":"<ol> <li>\u5b57\u7b26\u96c6 character set\uff1a\u5b57\u7b26\u96c6\u4e2d\u7684\u5143\u7d20\u90fd\u53ef\u4ee5\u6bd4\u8f83\u5927\u5c0f</li> <li>\u5b57\u7b26\u4e32 string\uff1aS</li> <li>\u5b50\u4e32\uff1aS[i..j]\uff0c\u8fde\u7740\u7684\u5b50\u5b57\u7b26\u4e32</li> <li>\u5b50\u5e8f\u5217\uff1a\u76f8\u5bf9\u987a\u5e8f\u4e0d\u53d8\uff0c\u4f46\u4e0d\u7528\u8fde\u7740</li> <li>\u540e\u7f00 suffix\uff1a\u6ce8\u610fS\u672c\u8eab\u4e5f\u662f\u540e\u7f00</li> <li>\u524d\u7f00 prefix\uff1a\u6ce8\u610fS\u672c\u8eab\u4e5f\u662f\u524d\u7f00</li> <li>\u771f\u540e\u7f00\uff1a\u975eS\u540e\u7f00</li> <li>\u771f\u524d\u7f00\uff1a\u975eS\u524d\u7f00</li> <li>\u5b57\u5178\u5e8f\uff1a\u7c7b\u4f3c a &lt; b &lt; c &lt; ...</li> <li>\u56de\u6587\u4e32 palindrome</li> </ol>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_2","title":"\u5339\u914d\u95ee\u9898","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32s\u548c\u4e00\u7ec4\u6a21\u5f0fP\uff0c\u5339\u914ds\uff08\u957f\u5ea6\u4e3an\uff09\u4e2d\u7684\u6bcf\u4e2ap\uff08\u957f\u5ea6\u4e3am\uff09\u3002</p> <ol> <li>\u5355\u6a21\uff08pattern\uff09\u5339\u914d\uff1a|P| = 1</li> <li>\u591a\u6a21\u5339\u914d\uff1a|P| &gt; 1</li> <li>\u5339\u914d\u4e00\u76f4\u591a\u4e2a\u6a21\u5f0f\u7684\u4efb\u610f\u540e\u7f00\u7b49</li> </ol> <p>\u5bf9\u5355\u6a21\u5339\u914d\uff0c\u66b4\u529b\u505a\u6cd5\u7684\u6700\u574f\u590d\u6742\u5ea6\u662fO(mn)\uff0c\u6700\u597d\u662fO(n)\uff08\u6bcf\u6b21\u53ea\u8981\u6bd4\u8f83\u4e00\u4e2a\u5b57\u7b26\uff0c\u6bd4\u5982\u90fd\u4e0d\u7b26\u5408\u6216\u8005m = 1\uff09\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_3","title":"\u54c8\u5e0c","text":"<p>\u5177\u4f53\u6765\u8bf4\uff0c\u54c8\u5e0c\u51fd\u6570\u6700\u91cd\u8981\u7684\u6027\u8d28\u53ef\u4ee5\u6982\u62ec\u4e3a\u4e0b\u9762\u4e24\u6761\uff1a</p> <p>\u5728 Hash \u51fd\u6570\u503c\u4e0d\u4e00\u6837\u7684\u65f6\u5019\uff0c\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e00\u5b9a\u4e0d\u4e00\u6837\uff1b</p> <p>\u5728 Hash \u51fd\u6570\u503c\u4e00\u6837\u7684\u65f6\u5019\uff0c\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e0d\u4e00\u5b9a\u4e00\u6837\uff08\u4f46\u6709\u5927\u6982\u7387\u4e00\u6837\uff0c\u4e14\u6211\u4eec\u5f53\u7136\u5e0c\u671b\u5b83\u4eec\u603b\u662f\u4e00\u6837\u7684\uff09\u3002</p> <p>\u2014\u2014 OI Wiki</p> <p>\u7528\u5b57\u7b26\u4e32\u54c8\u5e0c\u89e3\u5339\u914d\u95ee\u9898\u7684\u601d\u8def\u662f\u4f9d\u6b21\u5339\u914d\u957f\u5ea6\u548cpattern\u76f8\u7b49\u7684\u5b50\u5b57\u7b26\u4e32\u7684hash\u503c\u3002\u6211\u4eec\u77e5\u9053\u8ba1\u7b97\u957f\u5ea6\u4e3an\u7684\u5b57\u7b26\u4e32\u7684hash\u503c\u7684\u65f6\u95f4\u4e3aO(n)\uff0c\u5982\u679c\u6bcf\u4e2a\u5b50\u5b57\u7b26\u4e32\u7684hash\u503c\u90fd\u5355\u72ec\u8ba1\u7b97\u7684\u8bdd\uff0c\u4f1a\u5f88\u6162\u3002\u4f46\u662f\u53ef\u4ee5\u5229\u7528\u54c8\u5e0c\u7b97\u6cd5\u7684\u7279\u6027\uff0c\u5feb\u901f\u8ba1\u7b97\u3002</p> <p>\u65b9\u6cd5\u662f\uff1a</p> <p>TODO</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%AD%97%E7%AC%A6%E4%B8%B2/#trie","title":"\u5b57\u5178\u6811 Trie","text":"<p>\uff08\u56fe\u6765\u81eaOI Wiki\uff09</p> <p>\u5b57\u5178\u6811\u53ef\u4ee5\u7528\u6765\u8868\u793a\u4e00\u4e9b\u8bcd\uff0c\u6bd4\u5982\u4e0a\u56fe\u5c31\u53ef\u4ee5\u8868\u793a\uff1a</p> <ul> <li>5: aa</li> <li>11: aba</li> <li>7: ba</li> <li>15: caaa</li> <li>13: cab</li> <li>14: cba</li> <li>10: cc</li> </ul> <p>\u5f53\u7136\u4e5f\u53ef\u4ee5\u4e0d\u662fleaf\u8282\u70b9\uff0c\u6bd4\u598212\u8868\u793acaa\u3002</p> <p>TODO \u8865\u5168</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_4","title":"\u524d\u7f00\u51fd\u6570","text":"<p>\u53c2\u8003\u8d44\u6599\uff1a</p> <ol> <li>\u524d\u7f00\u51fd\u6570\u5b9a\u4e49 | OI Wiki</li> <li>\u524d\u7f00\u51fd\u6570\u3001next\u6570\u7ec4\u548cKMP | Chris - \u77e5\u4e4e</li> </ol> <p>\u5bf9\u4e00\u4e2a\u5b57\u7b26\u4e32 s\uff0c\u524d\u7f00\u51fd\u6570 \u03c0(i)\uff1a</p> <ol> <li>\u82e5\u5b58\u5728 0 &lt;= k &lt;= i\uff0cs[0...k] == s[i - k...i]\uff0c\u5bf9\u6700\u5927\u7684 k\uff0c\u03c0(i) = k + 1</li> <li>\u5426\u5219 \u03c0(i) = 0</li> </ol> <p>\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32 abcabcd \u7684\u524d\u7f00\u51fd\u6570 \u03c0(0) \u5230 \u03c0(6) \u4e3a [0, 0, 0, 1, 2, 3, 0]\u3002</p> <ul> <li>\u03c0(0) = 0, a</li> <li>\u03c0(1) = 0, ab</li> <li>\u03c0(2) = 0, abc</li> <li>\u03c0(3) = 1, abca, a == a</li> <li>\u03c0(4) = 2, abcab, ab == ab</li> <li>\u03c0(5) = 3, abcabc, abc == abc</li> <li>\u03c0(6) = 0, abcabcd</li> </ul> <p></p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u662f O(n)\u3002\u867d\u7136\u6709\u4e24\u4e2a\u5faa\u73af\uff0c\u7b2c\u4e00\u4e2a\u5faa\u73af\u5927\u5c0f\u662f n\uff0c\u7b2c\u4e8c\u4e2a\u5faa\u73af\u5927\u5c0f\u662f \u03c0(i)\uff0c\u770b\u8d77\u6765 \u03c0(i) &lt;= i\uff0c\u6240\u4ee5\u5e94\u8be5\u662f O(n^2)\uff0c\u4f46\u662f\u6ce8\u610f\u5230 j \u7684\u4e0b\u964d\u65f6\u5f71\u54cd\u5230\u672c\u6b21 \u03c0(i) \u7684\u5927\u5c0f\u7684\uff0c\u540e\u9762\u7684 \u03c0(i + 1) \u7b49\u90fd\u4f1a\u53d8\u5c0f\u3002\u4e00\u56fe\u80dc\u5343\u8a00\uff1a</p> <p>TODO \u03c0(i) \u56fe</p> <p>\u56fe\u4e2d\u6807\u51fa\u7684\u7ad6\u76f4\u7ebf\u662f\u6700\u5927\u7684 j \u4e0b\u964d\u8fc7\u7a0b\uff0c\u7406\u8bba\u603b\u548c\u6700\u5927\u4e5f\u5c31\u662f n\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n)\u3002</p> <p>\u5728\u524d\u7f00\u51fd\u6570\u5927\u91cf\u4e3a 0 \u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4ee5 sparse \u7684\u5f62\u5f0f\u5b58\u50a8\uff0c\u6216\u8005\u53ea\u9700\u8981\u77e5\u9053 i &lt;= m \u65f6\u7684 \u03c0(i) \u65f6\uff0c\u53ef\u4ee5\u53ea\u8ba1\u7b97\u5230 \u03c0(m)\u3002</p> <p>\u8be5\u7b97\u6cd5\u662f\u5728\u7ebf\u7684\uff0c\u610f\u5473\u7740\u6211\u4eec\u53ea\u9700\u8981\u6bcf\u6b21 feed \u4e00\u4e2a\u5b57\u7b26\u5373\u53ef\u3002</p> <pre><code>def prefix_function(s: str) -&gt; list[int]:\n    # \u80cc\u4e0b\u6765\uff01\n    pi = [0]\n    for i in range(1, len(s)):\n        j = pi[i - 1]\n        while j &gt; 0 and s[i] != s[j]:\n            j = pi[j - 1]  # \u8fd9\u4e00\u884c\u662f\u7cbe\u9ad3\uff01\n        if s[i] == s[j]:\n            j += 1\n        pi.append(j)\n\n    return pi\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%AD%97%E7%AC%A6%E4%B8%B2/#kmp","title":"KMP\u7b97\u6cd5","text":"<p>Knuth-Morris-Pratt \u7b97\u6cd5\u3002</p> <ul> <li>Donald Knuth\uff1a\u5bf9\uff0c\u5c31\u662f\u521b\u9020TeX\u3001\u6587\u5b66\u7f16\u7a0b\u3001WEB\u8bed\u8a00\uff0c\u5728\u7b97\u6cd5\u5206\u6790\u9886\u57df\u6709\u5de8\u5927\u8d21\u732e\u83b7\u5f97\u56fe\u7075\u5956\u7684\uff0c\u73b0\u5728\u4e0d\u7528\u7535\u5b50\u90ae\u4ef6\u7684\u90a3\u4f4d\u5927\u795e\u3002</li> <li>James H. Morris\uff1a\uff1f</li> <li>Vaughan Pratt\uff1a\uff1f</li> </ul> <p>\u6838\u5fc3\u60f3\u6cd5\u662f\u628a\u5b57\u7b26\u4e32 s \u548c\u6a21\u5f0f p \u62fc\u63a5\u8d77\u6765\uff0c\u4e2d\u95f4\u653e\u4e00\u4e2a\u4e0d\u4f1a\u51fa\u73b0\u5728 s \u548c p \u4e2d\u7684\u5b57\u7b26\uff0c\u4f8b\u5982 #\uff0c\u5f62\u5982 p#s\u3002\u5bf9 p#s \u8ba1\u7b97\u524d\u7f00\u51fd\u6570\uff0c\u5982\u679c\u5b58\u5728\u67d0 i\uff0c\u6709 \u03c0(i) == m \u5373 p \u7684\u957f\u5ea6\uff0c\u5219\u8868\u660e s \u4e2d\u6709 p\u3002</p> <p>\u5f53\u7136\u4e0d\u9700\u8981\u771f\u7684\u62fc\u63a5\u5b57\u7b26\u4e32\uff0c\u7531\u4e8e\u524d\u7f00\u51fd\u6570\u662f\u5728\u7ebf\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6309\u987a\u5e8f feed \u5b57\u7b26\u5373\u53ef\u3002\u53c8\u56e0\u4e3a\u53ea\u5173\u6ce8\u5230 \u03c0(m)\uff0c\u53ea\u8ba1\u7b97\u5230 \u03c0(m) \u5373\u53ef\u3002</p> <p># \u4e5f\u4e0d\u9700\u8981\uff0c\u76f4\u63a5\u628a j \u91cd\u7f6e\u4e3a 0 \u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(m + n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(m)\u3002\u7a7a\u95f4\u662f O(m) \u56e0\u4e3a\u7b2c\u4e8c\u4e2a\u5faa\u73af\u4e0d\u9700\u8981\u5b58\u50a8 p#s \u7684\u53f3\u534a s \u90e8\u5206\u7684\u524d\u7f00\u51fd\u6570\uff0c\u7528\u4e0d\u5230\u3002</p> <pre><code>def kmp(s: str, p: str) -&gt; list[int]:\n    # \u80cc\u4e0b\u6765\uff01\n    # \u8ba1\u7b97 p \u7684\u524d\u7f00\u51fd\u6570\n    pi = [0]\n    for i in range(1, len(p)):\n        j = pi[i - 1]\n        while j &gt; 0 and p[i] != p[j]:\n            j = pi[j - 1]\n        if p[i] == p[j]:\n            j += 1\n        pi.append(j)\n    # \u8ba1\u7b97\u7ed3\u679c\n    indices = []\n    # \u91cd\u7f6e j\n    j = 0\n    for i in range(0, len(s)):\n        while j &gt; 0 and s[i] != p[j]:\n            j = pi[j - 1]\n        if s[i] == p[j]:\n            j += 1\n        # \u4e0d\u9700\u8981 pi.append(j)\uff0c\u56e0\u4e3a\u7528\u4e0d\u5230\n        if j == len(p):\n            indices.append(i + 1 - len(p))\n            # \u91cd\u7f6e j\n            j = 0\n    return indices\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E7%BB%84/","title":"\u6570\u7ec4 Array","text":"<p>\u4e00\u822c\u5178\u578b\u7684\u6570\u7ec4\u662f\u56fa\u5b9a\u957f\u5ea6\u7684\u6570\u7ec4\uff0c\u5373\u5176\u5185\u5b58\u7a7a\u95f4\u662f\u56fa\u5b9a\u7684\uff0c\u6bcf\u4e2a\u5143\u7d20\u4e5f\u90fd\u662f\u76f8\u540c\u7c7b\u578b\u7684\uff0c\u6bd4\u5982Java\u7684\u6570\u7ec4\u3002\u4e5f\u6709\u52a8\u6001\u6570\u7ec4\uff0c\u6bd4\u5982Python\u7684list\uff0c\u65e0\u56fa\u5b9a\u957f\u5ea6\uff0c\u5143\u7d20\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E7%BB%84/#stack","title":"\u6808 Stack","text":"<p>\u540e\u8fdb\u5148\u51fa\uff08LIFO\uff09\u3002\u6808\u8fdb\u51fa\u7684\u4e00\u7aef\u79f0\u4e3atop\uff08\u60f3\u8c61\u6210\u4e00\u53e0\u76d8\u5b50\uff09\u3002\u8fdb\u64cd\u4f5c\u79f0\u4e3apush\u6216add\uff0c\u51fa\u64cd\u4f5c\u79f0\u4e3adelete\u6216pop\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E7%BB%84/#queue","title":"\u961f\u5217 Queue","text":"<p>\u5148\u8fdb\u5148\u51fa\uff08FIFO\uff09\u3002\u961f\u5217\u8fdb\u7684\u4e00\u7aef\u79f0\u4e3aend\uff08\u60f3\u8c61\u6210\u6392\u961f\u7684\u961f\u5c3e\uff09\uff0c\u51fa\u7684\u4e00\u7aef\u79f0\u4e3afront\u3002\u8fdb\u64cd\u4f5c\u79f0\u4e3aenqueue\uff0c\u51fa\u64cd\u4f5c\u79f0\u4e3adequeue\u3002</p> <p>\u53ef\u4ee5\u7528\u56fa\u5b9a\u6570\u7ec4\u6a21\u62df\u961f\u5217\uff0c\u53ea\u9700\u8981\u591a\u8bb0\u5f55\u9996\u5c3e\u7684index\u3002\u66f4\u65b0\u6570\u7ec4\u65f6\uff0c\u9664\u4e86\u6dfb\u52a0\u65b0\u5143\u7d20\uff0c\u53ea\u9700\u8981\u8c03\u6574\u9996\u5c3e\u7684index\u3002\u5f53\u7136\u6574\u4e2a\u961f\u5217\u5927\u5c0f\u6709\u9650\u5236\u3002</p> <p>\u8fd8\u80fd\u7528\u53cc\u6808\u6a21\u62df\u961f\u5217\u3002\u5bf9\uff0c\u5c31\u662f\u4f60\u60f3\u5230\u7684\u6700\u76f4\u89c9\u7684\u5f62\u5f0f\u3002\u867d\u7136\u633a\u9ebb\u70e6\uff0c\u4f46\u6bcf\u4e2a\u5143\u7d20\u6700\u591a\u53ea\u4f1a\u8fdb\u5165/\u8f6c\u79fb/\u5f39\u51fa\u5404\u4e00\u6b21\uff0c\u6240\u4ee5\u5747\u644a\u5230\u6bcf\u4e2a\u5143\u7d20\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(1)\u3002\u5f53\u7136\u8fd9\u4e2a\u5f88\u5947\u8469\u51b7\u95e8\uff0c\u5c31\u548c\u5192\u6ce1\u6392\u5e8f\u4e00\u6837\u53ea\u662f\u597d\u73a9\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E7%BB%84/#priority-queue","title":"\u4f18\u5148\u961f\u5217 Priority Queue","text":"<p>\u4f18\u5148\u961f\u5217\uff08priority queue\uff09\u80fd\u4fdd\u8bc1\u51fa\u6765\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u59cb\u7ec8\u662f\u6ee1\u8db3\u67d0\u79cd\u6392\u5e8f\u7684\u6700\u5927\u6216\u6700\u5c0f\u7684\u5143\u7d20\uff0c\u57fa\u672c\u64cd\u4f5c\u5305\u62ec\u83b7\u53d6\u3001\u5220\u9664\u6700\u5927\u5143\u7d20\u548c\u6dfb\u52a0\u5143\u7d20\u3002\u5177\u4f53\u7684\u5b9e\u73b0\u53ef\u4ee5\u662f\u6570\u7ec4\u6216\u8005\u6392\u5e8f\u6570\u7ec4\uff0c\u4f46heap\uff08\u5806\uff09\u662f\u6700\u9ad8\u6548\u7684\u5b9e\u73b0\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E7%BB%84/#_1","title":"\u4e60\u9898","text":"<p>TODO \u9898\u540d\u6539\u6210\u4e2d\u6587</p> # \u9898\u540d 977 Squares of a Sorted Array 1089 Duplicate Zeros 88 Merge Sorted Array 27 Remove Elements 26 Remove Duplicates from Sorted Array 905 Sort Array By Parity 1051 Height Checker 448 Find All Numbers Disappeared in an Array"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/","title":"\u94fe\u8868 Linked List","text":"<p>\u6709\u5355\u94fe\u8868\uff08singly linked list\uff09\u548c\u53cc\u5411\u94fe\u8868(doubly linked list)\uff0c\u4e3b\u8981\u8003\u5bdf\u5355\u5411\u94fe\u8868\uff0c\u53cc\u5411\u94fe\u8868\u4e00\u822c\u6bd4\u8f83\u7b80\u5355\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/#_1","title":"\u57fa\u672c\u64cd\u4f5c","text":"<ol> <li>\u5199\u94fe\u8868class\uff08ADT\uff09\uff1a\u5355\u94fe\u8868\u3001\u53cc\u5411\u94fe\u8868\u3001\u957f\u5ea6\u3001\u5c3e\u8282\u70b9\u7b49\u7279\u6027\u90fd\u4f1a\u5199\u3002</li> <li>\u865a\u62df\u5934\uff08dummy head\uff09\uff1a\u53ef\u4ee5\u4fdd\u8bc1\u80fd\u627e\u5230\u94fe\u8868\u5934\u5728\u54ea\uff0c\u9632\u6b62\u539f\u94fe\u8868\u5934\u5220\u4e86\u7b49\uff0c\u904d\u5386\u7684\u65f6\u5019\u4e5f\u4e0d\u7528\u7279\u6b8a\u5904\u7406\u94fe\u8868\u5934\uff0c\u65b9\u4fbf</li> <li>\u6dfb\u52a0\u4efb\u610findex\u7684node\uff1a\u8981\u6ce8\u610f\u600e\u4e48\u6dfb\u52a0\u94fe\u8868\u5934\u548c\u5c3e\uff08index = 0\uff09</li> <li>\u5220\u9664\u4efb\u610findex\u7684node\uff1a\u8981\u6ce8\u610f\u600e\u4e48\u5220\u9664\u94fe\u8868\u5934</li> <li>\u53cd\u8f6c\u94fe\u8868</li> </ol> <p>\u6807\u51c6\u8fed\u4ee3\u7b54\u6848\uff0c\u5c31\u7528<code>while node:</code>\u548c\u4e00\u4e2a<code>newHead</code>\uff08\u6216\u8005\u53eb<code>last</code>\u3001<code>prev</code>\uff09\uff0c\u4e0d\u8981\u7528<code>while node.next:</code>\uff01\\    \u8bb0\u4f4f\u4e0a\u9762\u662f2\u884c\uff0cwhile\u91cc\u9762\u662f4\u884c\uff01</p> <pre><code># Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n   def reverseList(self, head: ListNode) -&gt; ListNode:\n       # \u8fed\u4ee3\n       newHead = None\n       node = head\n       while node:\n           next = node.next\n           node.next = newHead\n           newHead = node\n           node = next\n       return newHead\n</code></pre> <p>\u6807\u51c6\u9012\u5f52\u7b54\u6848\uff0c\u6709\u70b9\u96be\u60f3\uff0c\u591a\u505a\u52a0\u8bb0\u5fc6\uff01</p> <pre><code># Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def reverseList(self, head: ListNode) -&gt; ListNode:\n        # \u9012\u5f52\n        if not head or not head.next:\n            return head\n        newHead = self.reverseList(head.next)\n        head.next.next = head\n        head.next = None\n        return newHead\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/#_2","title":"\u53cc\u6307\u9488","text":"<p>\u5355\u94fe\u8868\u53ea\u80fd\u662f\u540c\u5411\u6307\u9488\uff0c\u4f46\u662f\u7075\u6d3b\u8fd0\u7528\u591a\u4e2a\u5feb\u6162\u6307\u9488\uff0c\u6709\u5947\u6548\u3002</p> <ol> <li>\u5728\u4e0d\u77e5\u9053\u603b\u957f\u7684\u60c5\u51b5\u4e0b\uff0c\u627e\u5012\u6570\u7b2ci\u4e2a\u5143\u7d20\u3001\u627e\u4e2d\u95f4\u7b49</li> <li>\u94fe\u8868\u627e\u73af\u5165\u53e3</li> <li>\u627e\u4e24\u4e2a\u94fe\u8868\u76f8\u4ea4\u70b9</li> </ol>"},{"location":"%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/#leetcode","title":"LeetCode","text":"# \u9898\u540d \u96be\u5ea6 \u6807\u7b7e \u5907\u6ce8 707 \u8bbe\u8ba1\u94fe\u8868 Design Linked List \u4e2d\u7b49 \u94fe\u8868 \u7ec6\u8282\u603b\u662f\u5199\u4e0d\u5bf9\uff0c\u8981\u591a\u6ce8\u610f\u548c\u7ec3\u4e60\u3002\u5355\u53cc\u94fe\u8868\u90fd\u8981\u4f1a\u3002 141 \u73af\u5f62\u94fe\u8868 Linked List Cycle \u7b80\u5355 \u53cc\u6307\u9488 \u53ef\u4ee5\u7528\u5feb\u6162\u6307\u9488\uff0c\u4f46\u76f4\u63a5\u6807\u8bb0\u5df2\u626b\u8fc7\u7684\u4e5f\u884c\u3002 142 \u73af\u5f62\u94fe\u8868\u4e8c Linked List II \u4e2d\u7b49 \u53cc\u6307\u9488 \u4e0d\u5141\u8bb8\u8be5\u539f\u6765\u7684\u94fe\u8868\uff0c\u4e0d\u7528\u54c8\u5e0c\u8868\u7684\u8bdd\u53ea\u80fd\u7528\u5feb\u6162\u6307\u9488\u4e86\u3002\u4ece\u96f6\u505a\u7684\u8bdd\u662f\u9700\u8981\u6570\u5b66\u63a8\u5bfc\u8ba1\u7b97\u600e\u4e48\u627e\u73af\u7684\u5165\u53e3\u7684\u3002\u4f46\u4ece\u505a\u9898\u89d2\u5ea6\uff0c\u53ef\u4ee5\u8bb0\u4f4f\u8fd9\u4e2a\u5957\u8def\uff0c\u8003\u5b98\u8981\u6c42\u63a8\u7684\u65f6\u5019\u8bb0\u5f97\u63a8\u5c31\u884c\u3002 160 \u76f8\u4ea4\u94fe\u8868 Intersection of Two Linked Lists \u4e2d\u7b49 \u53cc\u6307\u9488 \u53cc\u6307\u9488\uff0c\u4e5f\u53ef\u4ee5\u8bb0\u5fc6\u3002\u4e24\u4e2a\u540c\u901f\u6307\u9488\u540c\u65f6\u5206\u522b\u4ece\u4e24\u4e2a\u94fe\u8868\u5934\u51fa\u53d1\uff0c\u4e0d\u76f8\u4ea4\u5219\u672b\u5c3e\u4e0d\u7b49\uff0c\u5426\u5219\u76f8\u4ea4\u3002\u82e5\u76f8\u4ea4\uff0c\u8d70\u5b8c\u4e86\u53bb\u8d70\u53e6\u4e00\u4e2a\u94fe\u8868\uff0c\u76f8\u4ea4\u65f6\u8def\u7a0b\u7b49\u957f\u3002 19 \u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2c N \u4e2a\u7ed3\u70b9 Remove Nth Node From End of List \u4e2d\u7b49 \u53cc\u6307\u9488 \u4e24\u4e2a\u6307\u9488\u5deen\u3002 206 \u53cd\u8f6c\u94fe\u8868 Reverse Linked List \u7b80\u5355 \u94fe\u8868 \u57fa\u672c\u64cd\u4f5c\uff0c\u8981\u719f\u7ec3\u3002 203 \u79fb\u9664\u94fe\u8868\u5143\u7d20 Remove Linked List Element \u7b80\u5355 \u94fe\u8868 \u57fa\u672c\u64cd\u4f5c\uff0c\u8981\u719f\u7ec3\u3002 328 \u5947\u5076\u94fe\u8868 Odd Even Linked List \u4e2d\u7b49 \u94fe\u8868 \u5e94\u8be5\u7b97\u7b80\u5355\uff0c\u57fa\u672c\u64cd\u4f5c\u3002 234 \u56de\u6587\u94fe\u8868 Palindrome ([\u02c8pal\u026andr\u0259\u028am]) Linked List \u4e2d\u7b49 \u94fe\u8868 \u627e\u4e2d\u95f4\u3001\u53cd\u8f6c\u5c3e\u90e8\u3002 21 \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868 Merge Two Sorted Lists \u7b80\u5355 \u94fe\u8868 \u57fa\u672c\u64cd\u4f5c\u3002 61 Rotate List \u4e2d\u7b49 \u94fe\u8868 \u5e94\u8be5\u7b97\u7b80\u5355\u9898\uff0c\u53ea\u662f\u53d6\u4f59\u6570\u7136\u540e\u62fc\u63a5\u6570\u7ec4\u3002\u867d\u7136\u662f\u4e24\u4e2a\u6307\u9488\uff0c\u4f46\u5e76\u4e0d\u4f9d\u8d56\u53cc\u6307\u9488\u89e3\u9898\uff0c\u53ea\u662f\u65b9\u4fbf\u64cd\u4f5c\u3002"},{"location":"%E7%AE%97%E6%B3%95/%E6%96%B9%E6%B3%95/%E5%80%8D%E5%A2%9E/","title":"\u500d\u589e Binary Lifting","text":"<p>\u7ebf\u6027\u7684\u5904\u7406\u8f6c\u5316\u4e3a\u5bf9\u6307\u6570\u7ea7\u7684\u5904\u7406\u3002</p> <p>\u6bd4\u5982\uff0c\u53ef\u4ee5\u7528[1, 2, 4, 8, 16]\u8fd95\u4e2a\u781d\u7801\u79f0\u51fa0\u523031\uff082\u76845\u6b21\u65b9\u51cf1\uff09\u6240\u6709\u7684\u91cd\u91cf\uff0c[1, 2, 4, 8, 16, 32, 64, 128, 256, 512]\u8fd910\u4e2a\u781d\u7801\u53ef\u4ee5\u79f0\u51fa0\u52301023\uff082\u768410\u6b21\u65b9\u51cf1\uff09\u6240\u6709\u7684\u91cd\u91cf\u3002</p> <p>TODO \u6ca1\u770b\u5b8c\u54e6</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%96%B9%E6%B3%95/%E5%8F%8C%E6%8C%87%E9%92%88/","title":"\u53cc\u6307\u9488 Two Pointers","text":""},{"location":"%E7%AE%97%E6%B3%95/%E6%96%B9%E6%B3%95/%E8%B4%AA%E5%BF%83/","title":"\u8d2a\u5fc3 Greedy","text":"<p>\u6bcf\u6b21\u90fd\u9009\u62e9\u77ed\u671f\u5c40\u90e8\u6700\u4f18\u3002\u56e0\u800c\u4e0d\u4e00\u5b9a\u662f\u5168\u5c40\u6700\u4f18\uff0c\u6240\u4ee5\u53ea\u6709\u5c40\u90e8\u6700\u4f18\u4e5f\u662f\u5168\u5c40\u6700\u4f18\u65f6\u9002\u7528\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%96%B9%E6%B3%95/%E9%80%92%E5%BD%92/","title":"\u9012\u5f52 Recursion","text":""},{"location":"%E7%AE%97%E6%B3%95/%E6%96%B9%E6%B3%95/%E9%80%92%E5%BD%92/#recursion-stack-overflow","title":"\u9012\u5f52\u6808\u6ea2\u51fa Recursion Stack Overflow","text":"<p>\u9012\u5f52\u9700\u8981\u6808\u7a7a\u95f4\uff0c\u6709\u65f6\u5019\u4f1a\u6808\u6ea2\u51fa\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95/%E6%96%B9%E6%B3%95/%E9%80%92%E5%BD%92/#tail-recursion","title":"\u5c3e\u9012\u5f52 Tail Recursion","text":"<p>\u6709\u4e9b\u60c5\u51b5\u4e0b\u53ef\u4ee5\u7528\u5c3e\u9012\u5f52\u907f\u514d\u6808\u6ea2\u51fa\u3002\u4e00\u4e2afunction\uff08\u6216subroutine\uff09\u7684\u6700\u540e\u4e00\u6b65\uff08\u4e0d\u4e00\u5b9a\u662f\u6700\u540e\u4e00\u884c\u4ee3\u7801\uff09\u4e5f\u662f\u4e00\u4e2afunction\u7684\u8bdd\uff0c\u5c31\u662ftail call\uff0c\u5982\u679c\u8fd9\u4e2afunction\u662f\u81ea\u8eab\uff0c\u5c31\u662f\u5c3e\u9012\u5f52\u3002</p> <p>\u6bd4\u5982\uff1a <pre><code>def factorial(n):\n    def factorial_tail(n, accumulator):\n        if n &lt; 0:\n            raise ValueError\n        if n == 0:\n            return accumulator\n        return factorial_tail(n - 1, accumulator * n)\n    return factorial_tail(n, 1)\n</code></pre></p> <p>\u67d0\u4e9b\u8bed\u8a00\u80fd\u81ea\u52a8\u4f18\u5316\u5c3e\u9012\u5f52\uff0c\u56e0\u4e3a\u6bcf\u5c42\u9012\u5f52\u90fd\u76f8\u5f53\u4e8e\u628a<code>factorial_tail(n, acc)</code>\u53d8\u6210\u4e86<code>factorial_tail(n - 1, acc * n)</code>\uff0c\u5c31\u50cf\u6570\u5b66\u5316\u7b80\u4e00\u6837\u3002</p> <p>\u4e0d\u8fc7Python\u662f\u4e0d\u652f\u6301\u5c3e\u9012\u5f52\u4f18\u5316\u7684\u3002Python\u6700\u591a\u652f\u63011000\u5c42\u9012\u5f52\uff0c\u4f60\u8bd5\u8bd5<code>factorial(1000)</code>\u3002</p> <p>\u5f53\u7136\u80fd\u7528\u5c3e\u9012\u5f52\u4f18\u5316\u7684\uff0c\u57fa\u672c\u90fd\u80fd\u5199\u6210\u5faa\u73af\u3002</p> <p>\u73b0\u72b6\u662f\uff0c\u5927\u90e8\u5206\u5e38\u7528\u8bed\u8a00\u90fd\u4e0d\u652f\u6301\u7684\uff0cJava\u3001JavaScript\uff08V8\uff09\u3001Python\u90fd\u4e0d\u652f\u6301\u3002Scala\u3001Haskell\u90fd\u662f\u81ea\u52a8\u4f18\u5316\u7684\uff0cKotlin\u8981\u52a0\u4e2a<code>tailrec</code>\u4fee\u9970\u7b26\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95/%E7%BB%8F%E5%85%B8%E9%97%AE%E9%A2%98/%E5%9B%9E%E6%96%87/","title":"\u56de\u6587 Palindrome","text":""},{"location":"%E7%AE%97%E6%B3%95/%E7%BB%8F%E5%85%B8%E9%97%AE%E9%A2%98/%E5%9B%9E%E6%96%87/#_1","title":"\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u4e0d\u662f\u56de\u6587\u5b57\u7b26\u4e32","text":"<p><code>abccba</code></p> <ol> <li>\u53cc\u6307\u9488\uff0c\u5411\u4e2d\u95f4</li> <li>\u53cc\u6307\u9488\uff0c\u4e2d\u5fc3\u5f00\u82b1\uff0c\u6ce8\u610f\u4e2d\u5fc3\u4f4d\u7f6e\u5728\u5b57\u7b26\u4e32\u5355\u53cc\u60c5\u51b5\u4e0b\u4e0d\u540c</li> </ol> <pre><code>def palindrome_1(string):\n    # \u4e24\u5934\u5939\u903c\n    l, r = 0, len(string) - 1\n    while l &lt; r:\n        if string[l] != string[r]:\n            return False\n        l += 1\n        r -= 1\n    return True\n\ndef palindrome_2(string):\n    # \u4e2d\u5fc3\u6269\u5c55\n    l = (len(string) - 1) // 2\n    r = l if len(string) % 2 == 1 else l + 1\n    while l &gt;= 0:\n        if string[l] != string[r]:\n            return False\n        l -= 1\n        r += 1\n    return True\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95/%E7%BB%8F%E5%85%B8%E9%97%AE%E9%A2%98/%E5%9B%9E%E6%96%87/#_2","title":"\u627e\u51fa\u6240\u6709\u56de\u6587\u5b50\u5b57\u7b26\u4e32","text":"<p><code>absanabasjsabwlk</code></p> <p>\u6bcf\u4e2a\u4f4d\u7f6e\u4e2d\u5fc3\u5f00\u82b1\uff0cO(n^2)\uff0c\u6ce8\u610f\u4e2d\u5fc3\u662f\u6709\u5355\u548c\u53cc\u4e24\u79cd\u60c5\u51b5\u7684</p>"},{"location":"%E7%AE%97%E6%B3%95/%E7%BB%8F%E5%85%B8%E9%97%AE%E9%A2%98/%E6%9C%80%E8%BF%91%E5%AF%B9/","title":"\u6700\u8fd1\u5bf9 Closest-Pair","text":""},{"location":"%E7%AE%97%E6%B3%95/%E7%BB%8F%E5%85%B8%E9%97%AE%E9%A2%98/%E8%83%8C%E5%8C%85/","title":"\u80cc\u5305 Knapsack","text":""},{"location":"%E7%AE%97%E6%B3%95/%E9%97%AE%E9%A2%98%E7%B1%BB%E5%9E%8B/%E6%8E%92%E5%BA%8F/","title":"\u6392\u5e8f Sorting","text":""},{"location":"%E7%AE%97%E6%B3%95/%E9%97%AE%E9%A2%98%E7%B1%BB%E5%9E%8B/%E6%8E%92%E5%BA%8F/#_1","title":"\u6392\u5e8f\u7b97\u6cd5\u7684\u6027\u8d28","text":"<ol> <li>\u7a33\u5b9a\u7684\uff08stable\uff09\uff1a\u4fdd\u8bc1\u76f8\u540c\u201c\u5927\u5c0f\u201d\u7684\u503c\u7684\u5148\u540e\u987a\u5e8f\u65f6\u4e0d\u53d8\u7684\u3002\u6bd4\u5982\u5f20\u4e09\u548c\u674e\u56db\u7684\u4e2a\u5b50\u90fd\u662f1\u7c737\uff0c\u5f20\u4e09\u672c\u6765\u7ad9\u5728\u674e\u56db\u524d\u9762\uff0c\u6392\u5b8c\u5e8f\u4e4b\u540e\uff0c\u5f20\u4e09\u8fd8\u662f\u7ad9\u5728\u674e\u56db\u524d\u9762\u3002\u8fd9\u70b9\u7684\u5e94\u7528\u4f8b\u5982Excel\u8868\u683c\u4e2d\uff0c\u4f9d\u591a\u4e2a\u5217\u8fdb\u884c\u6392\u5e8f\u3002</li> <li>\u9002\u5e94\u7684\uff08adaptive\uff09\uff1a\u8f93\u5165\u7684\u6709\u5e8f\u6027\u53ef\u4ee5\u51cf\u5c11\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u4e00\u822c\u5e73\u5747\u90fd\u662fO(nlog(n))</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6</li> </ol>"},{"location":"%E7%AE%97%E6%B3%95/%E9%97%AE%E9%A2%98%E7%B1%BB%E5%9E%8B/%E6%8E%92%E5%BA%8F/#_2","title":"\u5404\u7b97\u6cd5","text":""},{"location":"%E7%AE%97%E6%B3%95/%E9%97%AE%E9%A2%98%E7%B1%BB%E5%9E%8B/%E6%8E%92%E5%BA%8F/#_3","title":"\u5783\u573e\u4eec","text":""},{"location":"%E7%AE%97%E6%B3%95/%E9%97%AE%E9%A2%98%E7%B1%BB%E5%9E%8B/%E6%8E%92%E5%BA%8F/#selection-sort","title":"\u9009\u62e9\u6392\u5e8f Selection Sort","text":"<p>\u6700\u76f4\u89c9\u7684\u7b97\u6cd5\uff1f\u5c31\u662f\u6bcf\u6b21\u627e\u51fa\uff08\u201c\u9009\u62e9\u201d\uff09\u5269\u4e0b\u6765\u6700\u5c0f\u7684\u90a3\u4e2a\u3002\u6700\u597d\u3001\u574f\u3001\u5e73\u5747\u65f6\u95f4\u90fd\u662fO(n^2)\u3002</p> <p>\u4e0d\u7528\u989d\u5916\u7a7a\u95f4\uff0c\u56e0\u56e0\u4e3a\u662f\u539f\u5730swap\u7684\u3002\u6bd4\u8f83\u6b21\u6570\u662fn^2\uff0cswap\u6b21\u6570\u662f0\u5230n-1\uff0c\u5199\u5165\u6b21\u6570\u662fswap\u6b21\u6570\u4e24\u500d\uff0c\u5199\u5165\u6b21\u6570\u5728\u6392\u5e8f\u7b97\u6cd5\u4e2d\u7b97\u6bd4\u8f83\u5c11\u7684\uff08\u4f46\u51e0\u4e4e\u6ca1\u6709\u592a\u591a\u5e94\u7528\u573a\u666f\uff0c\u4e14\u6709\u5199\u5165\u6b21\u6570\u66f4\u5c11\u7684\uff09\u3002</p> <p>\u6570\u7ec4\u5b9e\u73b0\uff0c\u662f\u4e0d\u7a33\u5b9a\u7684\u3002</p> <p>\u76f4\u63a5\u9009\u62e9\u6392\u5e8f\u7b97\u6cd5,\u4e0d\u7a33\u5b9a\u6027,\u4e3e\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50,\u5c31\u77e5\u9053\u5b83\u662f\u5426\u7a33\u5b9a..\u4f8b\u5982:(7) 2 5 9 3 4 [7] 1...\u5f53\u6211\u4eec\u5229\u7528\u76f4\u63a5\u9009\u62e9\u6392\u5e8f\u7b97\u6cd5\u8fdb\u884c\u6392\u5e8f\u65f6\u5019,(7)\u548c1\u8c03\u6362,(7)\u5c31\u8dd1\u5230\u4e86[7]\u7684\u540e\u9762\u4e86,\u539f\u6765\u7684\u6b21\u5e8f\u6539\u53d8\u4e86,\u8fd9\u6837\u5c31\u4e0d\u7a33\u5b9a\u4e86.</p> <p>\u6765\u6e90\uff1a\u76f4\u63a5\u9009\u62e9\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684. - houyanjun | CSDN</p>"},{"location":"%E7%AE%97%E6%B3%95/%E9%97%AE%E9%A2%98%E7%B1%BB%E5%9E%8B/%E6%8E%92%E5%BA%8F/#bubble-sort","title":"\u5192\u6ce1\u6392\u5e8f Bubble Sort","text":"<p>\u5192\u6ce1\u6392\u5e8f\uff0c\u4e24\u4e24\u6bd4\u8f83\u3002</p> <p>\u7531\u4e8e\u5728\u7b97\u6cd5\u7684\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u8f83\u5c0f\u7684\u5143\u7d20\u50cf\u662f\u6c14\u6ce1\u822c\u6162\u6162\u300c\u6d6e\u300d\u5230\u6570\u5217\u7684\u9876\u7aef\uff0c\u6545\u53eb\u505a\u5192\u6ce1\u6392\u5e8f\u3002</p> <p>\u6765\u6e90\uff1a\u5192\u6ce1\u6392\u5e8f - OI Wiki</p>"},{"location":"%E7%AE%97%E6%B3%95/%E9%97%AE%E9%A2%98%E7%B1%BB%E5%9E%8B/%E6%8E%92%E5%BA%8F/#_4","title":"\u8fd8\u884c\u7684","text":""},{"location":"%E7%AE%97%E6%B3%95/%E9%97%AE%E9%A2%98%E7%B1%BB%E5%9E%8B/%E6%8E%92%E5%BA%8F/#insertion-sort","title":"\u63d2\u5165\u6392\u5e8f Insertion Sort","text":""},{"location":"%E7%AE%97%E6%B3%95/%E9%97%AE%E9%A2%98%E7%B1%BB%E5%9E%8B/%E6%8E%92%E5%BA%8F/#_5","title":"\u8bed\u8a00\u5b9e\u73b0","text":""},{"location":"%E7%AE%97%E6%B3%95/%E9%97%AE%E9%A2%98%E7%B1%BB%E5%9E%8B/%E6%8E%92%E5%BA%8F/#python","title":"Python","text":"<p>Python\u7684<code>sorted()</code>\u548c<code>list.sort()</code>\u4fdd\u8bc1\u662f\u7a33\u5b9a\u7684\u3002Python\u7684\u6392\u5e8f\u5b9e\u73b0\u662ftimsort\uff0c\u7ed3\u5408\u4e86merge sort\u548cinsertion sort\u3002 TODO</p>"},{"location":"%E7%AE%97%E6%B3%95/%E9%97%AE%E9%A2%98%E7%B1%BB%E5%9E%8B/%E6%90%9C%E7%B4%A2/","title":"\u641c\u7d22","text":""},{"location":"%E7%AE%97%E6%B3%95/%E9%97%AE%E9%A2%98%E7%B1%BB%E5%9E%8B/%E6%90%9C%E7%B4%A2/#_2","title":"\u6709\u5e8f","text":"<p>\u641c\u7d22\u201c\u6709\u5e8f\u201d\u7684\u6570\u7ec4\u65f6\uff0c\u53ef\u4ee5\u7528\u4e8c\u5206\u641c\u7d22\u3002</p>"},{"location":"%E7%BD%91%E7%BB%9C/DNS/","title":"DNS \u57df\u540d\u7cfb\u7edf","text":"<p>DNS\uff08Domain Name System\uff09\uff0c\u57df\u540d\u7cfb\u7edf\u662f\u4e00\u4e2a\u5e94\u7528\u5c42\u7684\u7cfb\u7edf\u3002\u5b83\u65e2\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u4e5f\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u534f\u8bae\u3002</p>"},{"location":"%E7%BD%91%E7%BB%9C/DNS/#dns_1","title":"DNS \u8bb0\u5f55","text":"<p>DNS \u57df\u540d\u89e3\u6790\u4e2d A\u3001AAAA\u3001CNAME\u3001MX\u3001NS\u3001TXT\u3001SRV\u3001SOA\u3001PTR \u5404\u9879\u8bb0\u5f55\u7684\u4f5c\u7528 | IT \u7b14\u5f55</p> <p>\u6bd4\u5982\u5bf9 shaowang.me\uff0c\u5e38\u7528\u7684\u8bb0\u5f55\u7c7b\u578b\u6709\uff1a</p> \u7c7b\u578b \u610f\u4e49 A IPv4 \u5730\u5740 AAAA IPv6 \u5730\u5740 CNAME \u6307\u5411\u53e6\u4e00\u4e2a\u57df\u540d\uff0c\u6bd4\u5982\u8bf4 shao-wang-me.github.io\uff0c\u8fd9\u6837\u8bbf\u95ee shaowang.me \u5c31\u548c\u8bbf\u95ee\u540e\u8005\u4e00\u6837\uff0c\u4f46\u662f\u5728\u5730\u5740\u680f\u8fd8\u662f shaowang.me MX \u90ae\u7bb1\u670d\u52a1\u5668 <ol> <li> <p>Which transport layer protocol does DNS use?</p> <p>DNS uses UDP. A 16-bit identifier is included in each query and copied to the response to match answers to the corresponding query.</p> </li> <li> <p>Is DNS only used in application layer?</p> </li> <li> <p>How are domain names managed?</p> </li> <li> <p>Can one domain name be mapped to multiple IP addresses?</p> </li> <li> <p>How does a domain resource record look like?</p> <p>A domain resource record is a five-tuple in the form of <code>domain_name time_to_live class type value</code>.</p> </li> <li> <p>What is a zone?</p> </li> <li> <p>What is a root server?</p> </li> <li> <p>What is a authoritative record and a non-authoritative one?</p> </li> <li> <p>How does a name resolution work in action?</p> </li> <li> <p>How does a reverse lookup work in action?</p> </li> <li> <p>What are recursive query and iterative query?</p> </li> <li> <p>How does DNS caching work?</p> </li> </ol>"},{"location":"%E7%BD%91%E7%BB%9C/DNS/#reference","title":"Reference","text":"<p>Computer Networks, fifth edition, 9780132553179, by Andrew S. Tanenbaum &amp; David J. Wetherall, 2011</p>"},{"location":"%E7%BD%91%E7%BB%9C/HTTP/","title":"HTTP","text":"<p>HyperText Transfer Protocol\uff0c\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff0c\u662f\u4e00\u4e2a\u5e94\u7528\u5c42\u534f\u8bae\u3002\u8981\u6c42\u4f20\u8f93\u5c42\u534f\u8bae\u662f\u53ef\u9760\u7684\uff0c\u4f46\u4e0d\u4e00\u5b9a\u662f\u6709\u8fde\u63a5\u7684\uff0c\u901a\u5e38\u4f7f\u7528 TCP\u3002HTTP \u672c\u8eab\u662f\u65e0\u72b6\u6001\u7684\uff0c\u4f46\u662f\u53ef\u4ee5\u6709 cookie \u63a7\u5236\u7684 session\u3002</p>"},{"location":"%E7%BD%91%E7%BB%9C/HTTP/#request-response","title":"Request / Response \u683c\u5f0f","text":"<pre><code>GET https://example.com HTTP/1.1\nHost: example.com\n\nThis is body.\n</code></pre>"},{"location":"%E7%BD%91%E7%BB%9C/HTTP/#http-method","title":"HTTP \u65b9\u6cd5\uff08Method\uff09","text":"Method \u63cf\u8ff0 GET \u83b7\u53d6\u8d44\u6e90 HEAD \u53ea\u83b7\u53d6 response \u7684 header POST \u53d1\u9001\u4fe1\u606f PUT \u66ff\u6362\u8d44\u6e90 DELETE \u5220\u9664\u8d44\u6e90 TRACE \u8ba9\u670d\u52a1\u5668 echo \u53d1\u9001\u7684 request CONNECT \u901a\u8fc7\u4e00\u4e2a\u4ee3\u7406\u670d\u52a1\u5668\u8fde\u63a5 OPTIONS \u8be2\u95ee\u53ef\u7528\u7684\u65b9\u6cd5"},{"location":"%E7%BD%91%E7%BB%9C/HTTP/#_1","title":"\u7f13\u5b58","text":"<p>\u7f13\u5b58\u53ef\u4ee5\u5b58\u5728\u4e8e\u8bf7\u6c42\u53d1\u8d77\u5230\u8bf7\u6c42\u5904\u7406\u4e2d\u95f4\u7684\u4efb\u4f55\u73af\u8282\uff1a\u6d4f\u89c8\u5668\u3001\u672c\u5730\u7535\u8111\u3001ISP\u3001\u8d1f\u8f7d\u5747\u8861\u7b49\u3002</p> <p>\u76f8\u5173 heaer\uff1a<code>Cache-Control``Expires</code> TODO</p>"},{"location":"%E7%BD%91%E7%BB%9C/HTTP/#revving","title":"<code>revving</code>","text":"<p>\u4e3a\u4e86\u89e3\u51b3\u7f13\u5b58\u8fc7\u671f\u65f6\u95f4\u957f\u548c\u9700\u8981\u4e0d\u5b9a\u671f\u66f4\u65b0\u7684\u77db\u76fe\uff0c\u628a\u6bcf\u4e2a\u8d44\u6e90\u90fd\u52a0\u4e0a\u4e00\u4e2a\u7248\u672c\u53f7\u6216\u8005\u4e00\u4e2a hash\uff0c\u800c\u5728 <code>index.html</code> \u8fd9\u79cd\u7f13\u5b58\u8fc7\u671f\u65f6\u95f4\u77ed\u6216\u8005\u4e0d\u5141\u8bb8\u7f13\u5b58\u7684\u9875\u9762\u4e2d\u6307\u5411\u8fd9\u4e9b\u8d44\u6e90\u3002\u5bf9\u4e8e CSS \u548c JavaScript \u6587\u4ef6\uff0c\u8fd9\u6837\u8fd8\u80fd\u6d88\u706d\u4f9d\u8d56\u95ee\u9898\u3002</p> <p>\u5f88\u591a\u6784\u5efa\u5de5\u5177\u5df2\u7ecf\u5b9e\u73b0\u4e86\u8fd9\u4e2a\uff08\u602a\u4e0d\u5f97\u770b\u6784\u5efa\u51fa\u6765\u7684\u90fd\u662f\u6709hash\u4e00\u6837\u7684\u7f16\u7801\u5728\u6587\u4ef6\u540d\u91cc\uff09\u3002</p> <p>Caching Headers - Supercharged - YouTube</p>"},{"location":"%E7%BD%91%E7%BB%9C/HTTP/#github-pages","title":"GitHub Pages","text":"<p>\u770b\u4e86\u4e00\u4e0bGitHub Pages\uff0c\u4ed6\u4eec\u7edf\u4e00\u8bbe\u7f6e\u6240\u6709\u8d44\u6e90\u90fd\u662f<code>cache-control: max-age=600</code>\uff0c\u4e14\u76ee\u524d\u6ca1\u6709\u66f4\u6539\u8fd9\u4e2a\u8bbe\u7f6e\u7684\u529e\u6cd5\u3002</p>"},{"location":"%E7%BD%91%E7%BB%9C/HTTP/#cookie","title":"Cookie","text":"<p>\u670d\u52a1\u5668\u8bbe\u7f6e <code>Set-Cookie</code>\uff0c\u5219\u6d4f\u89c8\u5668\u4f1a\u4fdd\u5b58\u8be5 cookie\uff0c\u540e\u7eed\u6240\u6709\u5411\u8be5 domain \u7684\u8bf7\u6c42\u90fd\u4f1a\u901a\u8fc7 <code>Cookie</code> \u53d1\u9001\u6240\u6709 cookie\u3002</p>"},{"location":"%E7%BD%91%E7%BB%9C/HTTP/#authentication","title":"Authentication","text":"<p><code>WWW-Authenticate</code> \u53ca\u7c7b\u4f3c\u7684 header\uff0c\u6216\u8005\u7528 cookies \u5b9e\u73b0\u3002</p>"},{"location":"%E7%BD%91%E7%BB%9C/HTTP/#origin-control","title":"Origin control","text":""},{"location":"%E7%BD%91%E7%BB%9C/HTTP/#_2","title":"\u72b6\u6001\u7801","text":"<ol> <li> <p>What is the difference between PUT and POST?</p> </li> <li> <p>What is the structure of a HTTP message?</p> </li> <li> <p>How does HTTP connect to the destination machine?</p> </li> <li> <p>Who and what specifies HTTP?</p> </li> <li> <p>What is HTTPS?</p> </li> <li> <p>How does the performance of HTTPS compare to HTTP?</p> </li> <li> <p>How does the performance of HTTP compare to TCP?</p> </li> <li> <p>When I visit a website, why can I see TCP message (segment) in Wireshark?</p> <p>Because HTTP normally uses TCP as the transport layer protocol. The HTTP client needs to establish the TCP connection first.</p> </li> <li> <p>What happens when I visit a web page in the browser?</p> </li> <li> <p>What is HTTP 1.1, HTTP2 and HTTP3?</p> </li> </ol>"},{"location":"%E7%BD%91%E7%BB%9C/IP/","title":"IP","text":"<ol> <li>What is IP?</li> </ol>"},{"location":"%E7%BD%91%E7%BB%9C/OSI/","title":"OSI Model","text":""},{"location":"%E7%BD%91%E7%BB%9C/Proxy/","title":"Proxy Server","text":"<ol> <li> <p>What is a proxy server?</p> <p>A proxy server is a server that act on behalf of a client or server.</p> <p>For example, a HTTP proxy server can receive HTTP requests from a HTTP client, send it to the HTTP server and send the response back to the client upon receiving the response from the HTTP server.</p> </li> <li> <p>What protocols does a proxy support?</p> <p>A proxy is protocol specific. Different protocols require different implementations of the proxy.</p> </li> <li> <p>What are forward proxy and reverse proxy?</p> </li> <li> <p>How does a HTTP proxy server work?</p> </li> </ol> <p>Proxy server types - Cybersecurity Guide</p> <p></p> <p>\u6b63\u5411\u4ee3\u7406\u3001\u53cd\u5411\u4ee3\u7406\u3001\u900f\u660e\u4ee3\u7406\u3001\u533f\u540d\u4ee3\u7406</p>"},{"location":"%E7%BD%91%E7%BB%9C/RDF/","title":"RDF","text":"<p>Resource Description Framework (RDF)</p> <p>\u8d44\u6e90\u63cf\u8ff0\u6846\u67b6\uff0c\u662f W3C \u5f00\u53d1\u7528\u4e8e\u8868\u793a\u5728 World Wide Web \u4e0a\u7684\u4fe1\u606f\u7684\uff0c\u5176\u76ee\u6807\u662f\u5efa\u7acb\u8bed\u4e49\u7f51\u7edc\uff0c\u4f7f\u5f97\u8ba1\u7b97\u673a\u53ef\u4ee5\u7406\u89e3\u5e76\u81ea\u52a8\u5904\u7406\u8d44\u6e90\u3002</p> <p>\u5176\u5f62\u5f0f\u662f\u201c\u4e3b\u8c13\u5bbe\u201d\u4e09\u5143\uff0c\u5373 subject - predicate - object\uff0c\u4e5f\u53eb triples\u3002</p>"},{"location":"%E7%BD%91%E7%BB%9C/TCP/","title":"TCP","text":"<p>Transport Control Protocol\uff0c\u4f20\u8f93\u63a7\u5236\u534f\u8bae\u3002</p>"},{"location":"%E7%BD%91%E7%BB%9C/UDP/","title":"UDP","text":""},{"location":"%E7%BD%91%E7%BB%9C/%E5%A0%A1%E5%9E%92%E6%9C%BA/","title":"\u5821\u5792\u673a","text":"<p>\u5821\u5792\u673a\u662f\u56fd\u5185\u7684\u6982\u5ff5\uff0c\u82f1\u6587\u540d\u7528\u7684\u662f jump server\uff0c\u672c\u8d28\u4e0a\u5b83\u5b9e\u73b0\u4e24\u4e2a\u76ee\u7684\uff1a</p> <ol> <li>\u63d0\u4f9b\u5bf9\u7f51\u7edc\u5185\u90e8\u8d44\u6e90\u7684\u8bbf\u95ee</li> <li>\u76d1\u63a7\u3001\u8bb0\u5f55\u3001\u5206\u6790\u3001\u963b\u65ad\u8bbf\u95ee</li> </ol>"},{"location":"%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/","title":"\u9879\u76ee\u7ba1\u7406","text":"<p>Project Management</p>"},{"location":"%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/#_2","title":"\u5185\u5bb9","text":"<ol> <li>\u4ea7\u54c1\u9500\u552e\u8425\u9500\u8fd0\u8425</li> <li>MVP: minimum viable product</li> <li>CAC: customer acquisition cost</li> <li>LTV: lifetime value (of a customer)</li> <li>PLG: product-led growth</li> <li>\u589e\u957f vs \u98ce\u9669</li> </ol>"},{"location":"%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/#_3","title":"\u5e38\u89c1\u4f1a\u8bae\u7c7b\u578b\uff08\u82f1\u8bed\u4e16\u754c\uff09","text":"<ol> <li>Standup</li> <li>Retrospective</li> <li>Triage</li> </ol>"},{"location":"%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/#sdlc","title":"\u8f6f\u4ef6\u5f00\u53d1\u751f\u547d\u5468\u671f SDLC","text":"<p>\u8f6f\u4ef6\u5f00\u53d1\u751f\u547d\u5468\u671f\uff08SDLC\uff0cSoftware Development Life Cycle\uff09</p>"},{"location":"%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/%E4%BA%A7%E5%93%81%E9%A9%B1%E5%8A%A8%E5%A2%9E%E9%95%BF/","title":"\u4ea7\u54c1\u9a71\u52a8\u589e\u957f","text":"<p>https://zhuanlan.zhihu.com/p/106912390</p> <p>\u4ea7\u54c1\u9a71\u52a8\u589e\u957f\uff0c\u7740\u773c\u4e8e\u4ece\u4ea7\u54c1\u672c\u8eab\u9a71\u52a8\uff1a</p> <ol> <li>\u65b0\u5ba2\u6237\u7684\u4f4e\u6210\u672c\u83b7\u53d6</li> <li>\u514d\u8d39\u5ba2\u6237\u5411\u4ed8\u8d39\u5ba2\u6237\u7684\u8f6c\u5316</li> <li>\u4ed8\u8d39\u5ba2\u6237\u7684\u5347\u7ea7</li> <li>\u5ba2\u6237\u6d41\u5931\u7684\u51cf\u5c11</li> <li>\u5e73\u53f0\u6548\u5e94\u7684\u5f62\u6210</li> </ol> <p>\u5e76\u63d0\u5347\u4ee5\u4e0a\u5404\u76ee\u6807\u4e8e\u73af\u8282\u7684\u6548\u7387\u3002</p> <p>\u5982\u6b64\u53ef\u4ee5\u51cf\u5c11\u9500\u552e\u6210\u672c\uff0c\u52a0\u5feb\u589e\u957f\u3002</p>"},{"location":"%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/%E5%95%86%E4%B8%9A%E6%A8%A1%E5%9E%8B/","title":"\u5546\u4e1a\u6a21\u5f0f","text":"<p>Business Model</p> <p>\u53c2\u8003\uff1aBusiness Model | Investopedia</p> <p>\u5546\u4e1a\u6a21\u5f0f\u5173\u6ce8\u4e00\u4e2a\u516c\u53f8\u600e\u4e48\u76c8\u5229\u3002</p> <ol> <li>\u4ea7\u54c1\u548c\u670d\u52a1</li> <li>\u76ee\u6807\u5e02\u573a</li> <li>\u9884\u671f\u6210\u672c</li> </ol>"},{"location":"%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/%E5%95%86%E4%B8%9A%E6%A8%A1%E5%9E%8B/#_2","title":"\u4ef7\u503c\u4e3b\u5f20","text":"<p>Value Proposition</p> <ol> <li>\u516c\u53f8\u63d0\u4f9b\u7684\u4ea7\u54c1\u6216\u670d\u52a1</li> <li>\u4e3a\u4ec0\u4e48\u662f\u5ba2\u6237\u6216\u6d88\u8d39\u8005\u60f3\u8981\u7684</li> <li>\u548c\u7ade\u4e89\u8005\u7684\u533a\u522b</li> </ol> <p>\u5bf9\u65b0\u516c\u53f8\u6765\u8bf4\uff0c\u8fd8\u8981\u5305\u542b\uff1a</p> <ol> <li>\u542f\u52a8\u6210\u672c\u4e0e\u8d44\u91d1\u6765\u6e90</li> <li>\u76ee\u6807\u5ba2\u6237\u57fa\u7840</li> <li>\u5e02\u573a\u7b56\u7565</li> <li>\u7ade\u4e89\u5206\u6790</li> <li>\u8425\u6536\u4e0e\u6210\u672c\u9884\u671f</li> <li>\u53ef\u80fd\u7684\u5408\u4f5c\u5173\u7cfb</li> </ol>"},{"location":"%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/%E5%A2%9E%E9%95%BF/","title":"\u589e\u957f","text":"<p>\u589e\u957f\u8981\u6709\u63d0\u524d\u89c4\u5212\uff0c\u5e76\u628a\u63e1\u589e\u957f\u9636\u6bb5\u5feb\u901f\u8f6c\u578b\u4e0e\u6539\u9769\u3002</p> <p>\u5bf9\u589e\u957f\u548c\u505c\u6ede\u751a\u81f3\u4e0b\u964d\u8981\u6709\u5145\u5206\u7684\u5206\u6790\u548c\u5b66\u4e60\uff08\u6700\u597d\u5b9a\u91cf\uff09\uff0c\u603b\u7ed3\u7ecf\u9a8c\u6559\u8bad\u3002</p>"},{"location":"%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/%E5%A2%9E%E9%95%BF/#_2","title":"\u589e\u957f\u7684\u9636\u6bb5","text":"<p>http://www.woshipm.com/kol/3078419.html</p> <ol> <li>\u6700\u5c0f\u53ef\u7528\u4ea7\u54c1\uff0cMVP\uff0cminimum viable product/prototype</li> <li>\u4ea7\u54c1\u5e02\u573a\u9002\u914d\uff0cPMF\uff0cproduct-market fit</li> <li>\u89c4\u6a21\u5316</li> </ol>"},{"location":"%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/%E5%A2%9E%E9%95%BF/#_3","title":"\u4ea7\u54c1\u9a71\u52a8\u589e\u957f","text":"<p>Product-led growth\uff0c\u4ea7\u54c1\u9a71\u52a8\u589e\u957f\u3002\u533a\u522b\u4e8e\u4f20\u7edf\u7684\u9500\u552e\u548c\u8425\u9500\uff0c\u4f9d\u8d56\u4ea7\u54c1\u672c\u8eab\u7684\u8bd5\u7528\u3001\u4f53\u9a8c\u3001\u53e3\u7891\u548c\u9080\u8bf7\u4e0d\u65ad\u83b7\u53d6\u7528\u6237\uff0c\u5e76\u8f6c\u5316\u4e3a\u4ed8\u8d39\u7528\u6237\u3002</p>"},{"location":"%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/%E7%9B%AE%E6%A0%87/","title":"\u76ee\u6807\u548c\u6307\u6807","text":""},{"location":"%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/%E7%9B%AE%E6%A0%87/#smart","title":"SMART","text":""},{"location":"%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/%E7%9B%AE%E6%A0%87/#okr","title":"OKR","text":"<p>\u53c2\u8003\uff1a\u8c37\u6b4c\u5bf9 OKR \u7684\u63cf\u8ff0</p> <p>\u76ee\u6807\u548c\u5173\u952e\u7ed3\u679c\u6cd5\uff08Objectives and Key Results\uff09\uff0c\u662f\u4e00\u4e2a\u76ee\u6807\u8bbe\u7f6e\u6846\u67b6\u3002\u7531\u82f1\u7279\u5c14\u7684 Andrew Grove \u63d0\u51fa\uff0c\u5e76\u7531 John Doerr \u5e26\u5230\u8c37\u6b4c\u3002</p> <p>\u8bbe\u7f6e\u51e0\u4e2a\u53ef\u8861\u91cf\u7684\u5173\u952e\u7ed3\u679c\uff0c\u6700\u7ec8\u7ed3\u679c\u7528\u767e\u5206\u6bd4\u8861\u91cf\u3002\u76ee\u6807\u8981\u6b63\u786e\u8861\u91cf\u548c\u53cd\u6620\u516c\u53f8\u771f\u6b63\u7684\u76ee\u6807\u3001\u7b56\u7565\u548c\u4ef7\u503c\u3002OKR \u8981\u516c\u5f00\u900f\u660e\uff0c\u4fdd\u8bc1\u6240\u6709\u4eba\u90fd\u6e05\u695a\u5f53\u524d\u7684\u76ee\u6807\u3002</p> <p>OKR \u4e0d\u662f\u8981\u8bc4\u6d4b\u5458\u5de5\u548c\u90e8\u95e8\u7684\u8868\u73b0\uff0c\u800c\u662f\u63d0\u4f9b\u6fc0\u52b1\u4e0e\u538b\u529b\uff0c\u8ba9\u5927\u5bb6\u6709\u516c\u5f00\u900f\u660e\u4e14\u6709 vision \u7684\u76ee\u6807\uff0c\u4e14\u91cf\u5316\u5730\u5b9e\u73b0\u5b83\u3002\u56e0\u6b64\u76ee\u6807\u5e94\u5f53\u662f\u6fc0\u8fdb\u7684\uff0c\u8ba9\u4eba\u611f\u5230\u7a0d\u6709\u4e0d\u9002\u3002</p> <p>OKR \u4e0d\u662f\u5f85\u529e\u4e8b\u9879\uff0c\u800c\u662f\u58ee\u5fd7\u96c4\u5fc3\u548c\u6700\u5173\u952e\u7684\u76ee\u6807\uff0c\u4e00\u822c\u8bbe\u7f6e\u4e09\u5230\u4e94\u4e2a\u76ee\u6807\uff0c\u6bcf\u4e2a\u76ee\u6807\u6709\u4e09\u4e2a\u5173\u952e\u7ed3\u679c\uff0c\u5b9c\u7cbe\u4e0d\u5b9c\u591a\u3002</p> <p>\u597d\u7684 objectives\uff1a</p> <ol> <li>Significant</li> <li>Concrete</li> <li>Action-oriented</li> <li>Inspirational</li> </ol> <p>\u597d\u7684 key results\uff1a</p> <ol> <li>Specific &amp; time bound</li> <li>Aggressive yet realistic</li> <li>Measurable &amp; verifiable</li> </ol> <p>\u548c SMART \u7684\u7406\u5ff5\u662f\u76f8\u901a\u7684\u3002</p>"},{"location":"%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/%E7%9B%AE%E6%A0%87/#kpi","title":"KPI","text":""},{"location":"%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/%E7%9B%AE%E6%A0%87/#scorecard","title":"Scorecard","text":""}]}